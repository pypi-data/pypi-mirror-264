<?xml version="1.0"?>
<!--
  Copyright 2023 NXP

  SPDX-License-Identifier: BSD-3-Clause
-->
<regs:peripheral xmlns:regs="http://swtools.freescale.net/XSD/registers/4.0/regsPeripheral.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://swtools.freescale.net/XSD/registers/4.0/regsPeripheral.xsd http://swtools.freescale.net/XSD/registers/4.0/regsPeripheral.xsd">
  <register offset="0" width="32" name="HEADER" description="CFPA header field">
    <alias type="CMSIS" value="HEADER"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="CFPA header field">
      <alias type="CMSIS" value="FLASH_CFPA_HEADER_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x4" width="32" name="VERSION" description="CFPA version number">
    <alias type="CMSIS" value="VERSION"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="CFPA version number">
      <alias type="CMSIS" value="FLASH_CFPA_VERSION_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x8" width="32" name="S_FW_Version" description="Secure firmware version">
    <alias type="CMSIS" value="S_FW_VERSION"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="">
      <alias type="CMSIS" value="FLASH_CFPA_S_FW_VERSION_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xC" width="32" name="NS_FW_Version" description="Non-Secure firmware version">
    <alias type="CMSIS" value="NS_FW_VERSION"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="">
      <alias type="CMSIS" value="FLASH_CFPA_NS_FW_VERSION_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x10" width="32" name="IMAGE_KEY_REVOKE" description="Image key revocation ID">
    <alias type="CMSIS" value="IMAGE_KEY_REVOKE"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="">
      <alias type="CMSIS" value="FLASH_CFPA_IMAGE_KEY_REVOKE_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x18" width="32" name="ROTKH_REVOKE" description="">
    <alias type="CMSIS" value="ROTKH_REVOKE"/>
    <bit_field offset="0" width="2" name="RoTK0_EN" access="RW" reset_value="0" description="RoT Key 0 enable. 00 - Invalid 01 - Enabled 10, 11 - Key revoked">
      <alias type="CMSIS" value="FLASH_CFPA_ROTKH_REVOKE_RoTK0_EN(x)"/>
    </bit_field>
    <bit_field offset="2" width="2" name="RoTK1_EN" access="RW" reset_value="0" description="RoT Key 1 enable. 00 - Invalid 01 - Enabled 10, 11 - Key revoked">
      <alias type="CMSIS" value="FLASH_CFPA_ROTKH_REVOKE_RoTK1_EN(x)"/>
    </bit_field>
    <bit_field offset="4" width="2" name="RoTK2_EN" access="RW" reset_value="0" description="RoT Key 2 enable. 00 - Invalid 01 - Enabled 10, 11 - Key revoked">
      <alias type="CMSIS" value="FLASH_CFPA_ROTKH_REVOKE_RoTK2_EN(x)"/>
    </bit_field>
    <bit_field offset="6" width="2" name="RoTK3_EN" access="RW" reset_value="0" description="RoT Key 3 enable. 00 - Invalid 01 - Enabled 10, 11 - Key revoked">
      <alias type="CMSIS" value="FLASH_CFPA_ROTKH_REVOKE_RoTK3_EN(x)"/>
    </bit_field>
    <reserved_bit_field offset="8" width="24" reset_value="0"/>
  </register>
  <register offset="0x1C" width="32" name="VENDOR_USAGE" description="Debug vendor usage field">
    <alias type="CMSIS" value="VENDOR_USAGE"/>
    <bit_field offset="0" width="16" name="DBG_VENDOR_USAGE" access="RW" reset_value="0" description="DBG_VENDOR_USAGE.">
      <alias type="CMSIS" value="FLASH_CFPA_VENDOR_USAGE_DBG_VENDOR_USAGE(x)"/>
    </bit_field>
    <reserved_bit_field offset="16" width="16" name="INVERSE_VALUE" access="RW" reset_value="0" description="inverse value of bits [15:0]">
      <alias type="CMSIS" value="FLASH_CFPA_VENDOR_USAGE_INVERSE_VALUE(x)"/>
    </reserved_bit_field>
  </register>
  <register offset="0x20" width="32" name="DCFG_CC_SOCU_PIN" description="With TZ-M, the part can be sold by level 1 customers (secure code developer) to level-2 customers who develops non-secure code only. - In this scenario, or easy of development, level-1 customer releases the part to always allow non-secure debug. - To allow level-2 customers to further seal the part DCFG_CC_SOCU_NS is used. - ROM will use this word to further restrict the debug access.">
    <alias type="CMSIS" value="DCFG_CC_SOCU_PIN"/>
    <bit_field offset="0" width="1" name="NIDEN" access="RW" reset_value="0" description="Non Secure non-invasive debug enable">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_PIN_NIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_NIDEN_VALUE_0" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_NIDEN_VALUE_1" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="1" width="1" name="DBGEN" access="RW" reset_value="0" description="Non Secure debug enable">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_PIN_DBGEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_DBGEN_VALUE_0" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_DBGEN_VALUE_1" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="2" width="1" name="SPNIDEN" access="RW" reset_value="0" description="Secure non-invasive debug enable">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_PIN_SPNIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_SPNIDEN_VALUE_0" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_SPNIDEN_VALUE_1" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="3" width="1" name="SPIDEN" access="RW" reset_value="0" description="Secure invasive debug enable">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_PIN_SPIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_SPIDEN_VALUE_0" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_SPIDEN_VALUE_1" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="4" width="1" name="TAPEN" access="RW" reset_value="0" description="JTAG TAP enable">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_PIN_TAPEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_TAPEN_VALUE_0" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_TAPEN_VALUE_1" value="0b1" description="Fixed state"/>
    </bit_field>
    <reserved_bit_field offset="5" width="1" reset_value="0"/>
    <bit_field offset="6" width="1" name="ISPCMDEN" access="RW" reset_value="0" description="ISP Boot Command enable">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_PIN_ISPCMDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_ISPCMDEN_VALUE_0" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_ISPCMDEN_VALUE_1" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="7" width="1" name="PMCMDEN" access="RW" reset_value="0" description="Programmers Mode Command enable">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_PIN_PMCMDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_PMCMDEN_VALUE_0" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_PMCMDEN_VALUE_1" value="0b1" description="Fixed state"/>
    </bit_field>
    <reserved_bit_field offset="8" width="7" reset_value="0"/>
    <bit_field offset="15" width="1" name="UUID_CHECK" access="RW" reset_value="0" description="Enforce UUID match during Debug authentication.">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_PIN_UUID_CHECK(x)"/>
    </bit_field>
    <reserved_bit_field offset="16" width="16" name="INVERSE_VALUE" access="RW" reset_value="0" description="inverse value of bits [15:0]">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_PIN_INVERSE_VALUE(x)"/>
    </reserved_bit_field>
  </register>
  <register offset="0x24" width="32" name="DCFG_CC_SOCU_DFLT" description="With TZ-M, the part can be sold by level 1 customers (secure code developer) to level-2 customers who develops non-secure code only. - In this scenario, or easy of development, Level-I customer releases the part to always allow non-secure debug. - To allow level-2 customers to further seal the part DCFG_CC_SOCU_NS is used. - ROM will use this word to further restrict the debug access.">
    <alias type="CMSIS" value="DCFG_CC_SOCU_DFLT"/>
    <bit_field offset="0" width="1" name="NIDEN" access="RW" reset_value="0" description="Non Secure non-invasive debug fixed state">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_DFLT_NIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_NIDEN_DISABLE" value="0b0" description="Disable"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_NIDEN_ENABLE" value="0b1" description="Enable"/>
    </bit_field>
    <bit_field offset="1" width="1" name="DBGEN" access="RW" reset_value="0" description="Non Secure debug fixed state">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_DFLT_DBGEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_DBGEN_DISABLE" value="0b0" description="Disable"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_DBGEN_ENABLE" value="0b1" description="Enable"/>
    </bit_field>
    <bit_field offset="2" width="1" name="SPNIDEN" access="RW" reset_value="0" description="Secure non-invasive debug fixed state">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_DFLT_SPNIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_SPNIDEN_DISABLE" value="0b0" description="Disable"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_SPNIDEN_ENABLE" value="0b1" description="Enable"/>
    </bit_field>
    <bit_field offset="3" width="1" name="SPIDEN" access="RW" reset_value="0" description="Secure invasive debug fixed state">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_DFLT_SPIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_SPIDEN_DISABLE" value="0b0" description="Disable"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_SPIDEN_ENABLE" value="0b1" description="Enable"/>
    </bit_field>
    <bit_field offset="4" width="1" name="TAPEN" access="RW" reset_value="0" description="JTAG TAP fixed state">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_DFLT_TAPEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_TAPEN_DISABLE" value="0b0" description="Disable"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_TAPEN_ENABLE" value="0b1" description="Enable"/>
    </bit_field>
    <reserved_bit_field offset="5" width="1" reset_value="0"/>
    <bit_field offset="6" width="1" name="ISPCMDEN" access="RW" reset_value="0" description="ISP Boot Command fixed state">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_DFLT_ISPCMDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_ISPCMDEN_DISABLE" value="0b0" description="Disable"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_ISPCMDEN_ENABLE" value="0b1" description="Enable"/>
    </bit_field>
    <bit_field offset="7" width="1" name="PMCMDEN" access="RW" reset_value="0" description="Programmers Mode Command fixed state">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_DFLT_PMCMDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_PMCMDEN_DISABLE" value="0b0" description="Disable"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_PMCMDEN_ENABLE" value="0b1" description="Enable"/>
    </bit_field>
    <reserved_bit_field offset="8" width="8" reset_value="0"/>
    <reserved_bit_field offset="16" width="16" name="INVERSE_VALUE" access="RW" reset_value="0" description="inverse value of bits [15:0]">
      <alias type="CMSIS" value="FLASH_CFPA_DCFG_CC_SOCU_DFLT_INVERSE_VALUE(x)"/>
    </reserved_bit_field>
  </register>
  <register offset="0x28" width="32" name="ENABLE_FA_MODE" description="Enable FA mode.">
    <alias type="CMSIS" value="ENABLE_FA_MODE"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_ENABLE_FA_MODE_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x2C" width="32" name="CMPA_PROG_IN_PROGRESS" description="CMPA Page programming on going.">
    <alias type="CMSIS" value="CMPA_PROG_IN_PROGRESS"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CMPA_PROG_IN_PROGRESS_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x80" width="32" name="CUSTOMER_DEFINED0" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[0]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x84" width="32" name="CUSTOMER_DEFINED1" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[1]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x88" width="32" name="CUSTOMER_DEFINED2" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[2]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x8C" width="32" name="CUSTOMER_DEFINED3" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[3]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x90" width="32" name="CUSTOMER_DEFINED4" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[4]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x94" width="32" name="CUSTOMER_DEFINED5" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[5]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x98" width="32" name="CUSTOMER_DEFINED6" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[6]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x9C" width="32" name="CUSTOMER_DEFINED7" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[7]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xA0" width="32" name="CUSTOMER_DEFINED8" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[8]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xA4" width="32" name="CUSTOMER_DEFINED9" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[9]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xA8" width="32" name="CUSTOMER_DEFINED10" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[10]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xAC" width="32" name="CUSTOMER_DEFINED11" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[11]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xB0" width="32" name="CUSTOMER_DEFINED12" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[12]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xB4" width="32" name="CUSTOMER_DEFINED13" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[13]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xB8" width="32" name="CUSTOMER_DEFINED14" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[14]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xBC" width="32" name="CUSTOMER_DEFINED15" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[15]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xC0" width="32" name="CUSTOMER_DEFINED16" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[16]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xC4" width="32" name="CUSTOMER_DEFINED17" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[17]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xC8" width="32" name="CUSTOMER_DEFINED18" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[18]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xCC" width="32" name="CUSTOMER_DEFINED19" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[19]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xD0" width="32" name="CUSTOMER_DEFINED20" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[20]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xD4" width="32" name="CUSTOMER_DEFINED21" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[21]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xD8" width="32" name="CUSTOMER_DEFINED22" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[22]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xDC" width="32" name="CUSTOMER_DEFINED23" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[23]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xE0" width="32" name="CUSTOMER_DEFINED24" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[24]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xE4" width="32" name="CUSTOMER_DEFINED25" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[25]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xE8" width="32" name="CUSTOMER_DEFINED26" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[26]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xEC" width="32" name="CUSTOMER_DEFINED27" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[27]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xF0" width="32" name="CUSTOMER_DEFINED28" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[28]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xF4" width="32" name="CUSTOMER_DEFINED29" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[29]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xF8" width="32" name="CUSTOMER_DEFINED30" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[30]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xFC" width="32" name="CUSTOMER_DEFINED31" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[31]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x100" width="32" name="CUSTOMER_DEFINED32" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[32]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x104" width="32" name="CUSTOMER_DEFINED33" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[33]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x108" width="32" name="CUSTOMER_DEFINED34" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[34]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x10C" width="32" name="CUSTOMER_DEFINED35" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[35]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x110" width="32" name="CUSTOMER_DEFINED36" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[36]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x114" width="32" name="CUSTOMER_DEFINED37" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[37]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x118" width="32" name="CUSTOMER_DEFINED38" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[38]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x11C" width="32" name="CUSTOMER_DEFINED39" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[39]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x120" width="32" name="CUSTOMER_DEFINED40" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[40]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x124" width="32" name="CUSTOMER_DEFINED41" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[41]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x128" width="32" name="CUSTOMER_DEFINED42" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[42]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x12C" width="32" name="CUSTOMER_DEFINED43" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[43]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x130" width="32" name="CUSTOMER_DEFINED44" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[44]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x134" width="32" name="CUSTOMER_DEFINED45" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[45]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x138" width="32" name="CUSTOMER_DEFINED46" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[46]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x13C" width="32" name="CUSTOMER_DEFINED47" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[47]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x140" width="32" name="CUSTOMER_DEFINED48" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[48]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x144" width="32" name="CUSTOMER_DEFINED49" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[49]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x148" width="32" name="CUSTOMER_DEFINED50" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[50]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x14C" width="32" name="CUSTOMER_DEFINED51" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[51]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x150" width="32" name="CUSTOMER_DEFINED52" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[52]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x154" width="32" name="CUSTOMER_DEFINED53" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[53]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x158" width="32" name="CUSTOMER_DEFINED54" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[54]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x15C" width="32" name="CUSTOMER_DEFINED55" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[55]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x160" width="32" name="CUSTOMER_DEFINED56" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[56]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x164" width="32" name="CUSTOMER_DEFINED57" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[57]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x168" width="32" name="CUSTOMER_DEFINED58" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[58]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x16C" width="32" name="CUSTOMER_DEFINED59" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[59]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x170" width="32" name="CUSTOMER_DEFINED60" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[60]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x174" width="32" name="CUSTOMER_DEFINED61" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[61]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x178" width="32" name="CUSTOMER_DEFINED62" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[62]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x17C" width="32" name="CUSTOMER_DEFINED63" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[63]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x180" width="32" name="CUSTOMER_DEFINED64" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[64]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x184" width="32" name="CUSTOMER_DEFINED65" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[65]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x188" width="32" name="CUSTOMER_DEFINED66" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[66]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x18C" width="32" name="CUSTOMER_DEFINED67" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[67]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x190" width="32" name="CUSTOMER_DEFINED68" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[68]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x194" width="32" name="CUSTOMER_DEFINED69" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[69]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x198" width="32" name="CUSTOMER_DEFINED70" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[70]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x19C" width="32" name="CUSTOMER_DEFINED71" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[71]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1A0" width="32" name="CUSTOMER_DEFINED72" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[72]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1A4" width="32" name="CUSTOMER_DEFINED73" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[73]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1A8" width="32" name="CUSTOMER_DEFINED74" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[74]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1AC" width="32" name="CUSTOMER_DEFINED75" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[75]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1B0" width="32" name="CUSTOMER_DEFINED76" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[76]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1B4" width="32" name="CUSTOMER_DEFINED77" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[77]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1B8" width="32" name="CUSTOMER_DEFINED78" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[78]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1BC" width="32" name="CUSTOMER_DEFINED79" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[79]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1C0" width="32" name="CUSTOMER_DEFINED80" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[80]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1C4" width="32" name="CUSTOMER_DEFINED81" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[81]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1C8" width="32" name="CUSTOMER_DEFINED82" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[82]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1CC" width="32" name="CUSTOMER_DEFINED83" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[83]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1D0" width="32" name="CUSTOMER_DEFINED84" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[84]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1D4" width="32" name="CUSTOMER_DEFINED85" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[85]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1D8" width="32" name="CUSTOMER_DEFINED86" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[86]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1DC" width="32" name="CUSTOMER_DEFINED87" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[87]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1E0" width="32" name="SHA256_DIGEST0" description="SHA256_DIGEST0 for DIGEST[31:0] SHA256_DIGEST1 for DIGEST[63:32] SHA256_DIGEST2 for DIGEST[95:64] SHA256_DIGEST3 for DIGEST[127:96] SHA256_DIGEST4 for DIGEST[159:128] SHA256_DIGEST5 for DIGEST[191:160] SHA256_DIGEST6 for DIGEST[223:192] SHA256_DIGEST7 for DIGEST[255:224]">
    <alias type="CMSIS" value="SHA256_DIGEST[0]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1E4" width="32" name="SHA256_DIGEST1" description="SHA256_DIGEST0 for DIGEST[31:0] SHA256_DIGEST1 for DIGEST[63:32] SHA256_DIGEST2 for DIGEST[95:64] SHA256_DIGEST3 for DIGEST[127:96] SHA256_DIGEST4 for DIGEST[159:128] SHA256_DIGEST5 for DIGEST[191:160] SHA256_DIGEST6 for DIGEST[223:192] SHA256_DIGEST7 for DIGEST[255:224]">
    <alias type="CMSIS" value="SHA256_DIGEST[1]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1E8" width="32" name="SHA256_DIGEST2" description="SHA256_DIGEST0 for DIGEST[31:0] SHA256_DIGEST1 for DIGEST[63:32] SHA256_DIGEST2 for DIGEST[95:64] SHA256_DIGEST3 for DIGEST[127:96] SHA256_DIGEST4 for DIGEST[159:128] SHA256_DIGEST5 for DIGEST[191:160] SHA256_DIGEST6 for DIGEST[223:192] SHA256_DIGEST7 for DIGEST[255:224]">
    <alias type="CMSIS" value="SHA256_DIGEST[2]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1EC" width="32" name="SHA256_DIGEST3" description="SHA256_DIGEST0 for DIGEST[31:0] SHA256_DIGEST1 for DIGEST[63:32] SHA256_DIGEST2 for DIGEST[95:64] SHA256_DIGEST3 for DIGEST[127:96] SHA256_DIGEST4 for DIGEST[159:128] SHA256_DIGEST5 for DIGEST[191:160] SHA256_DIGEST6 for DIGEST[223:192] SHA256_DIGEST7 for DIGEST[255:224]">
    <alias type="CMSIS" value="SHA256_DIGEST[3]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1F0" width="32" name="SHA256_DIGEST4" description="SHA256_DIGEST0 for DIGEST[31:0] SHA256_DIGEST1 for DIGEST[63:32] SHA256_DIGEST2 for DIGEST[95:64] SHA256_DIGEST3 for DIGEST[127:96] SHA256_DIGEST4 for DIGEST[159:128] SHA256_DIGEST5 for DIGEST[191:160] SHA256_DIGEST6 for DIGEST[223:192] SHA256_DIGEST7 for DIGEST[255:224]">
    <alias type="CMSIS" value="SHA256_DIGEST[4]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1F4" width="32" name="SHA256_DIGEST5" description="SHA256_DIGEST0 for DIGEST[31:0] SHA256_DIGEST1 for DIGEST[63:32] SHA256_DIGEST2 for DIGEST[95:64] SHA256_DIGEST3 for DIGEST[127:96] SHA256_DIGEST4 for DIGEST[159:128] SHA256_DIGEST5 for DIGEST[191:160] SHA256_DIGEST6 for DIGEST[223:192] SHA256_DIGEST7 for DIGEST[255:224]">
    <alias type="CMSIS" value="SHA256_DIGEST[5]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1F8" width="32" name="SHA256_DIGEST6" description="SHA256_DIGEST0 for DIGEST[31:0] SHA256_DIGEST1 for DIGEST[63:32] SHA256_DIGEST2 for DIGEST[95:64] SHA256_DIGEST3 for DIGEST[127:96] SHA256_DIGEST4 for DIGEST[159:128] SHA256_DIGEST5 for DIGEST[191:160] SHA256_DIGEST6 for DIGEST[223:192] SHA256_DIGEST7 for DIGEST[255:224]">
    <alias type="CMSIS" value="SHA256_DIGEST[6]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1FC" width="32" name="SHA256_DIGEST7" description="SHA256_DIGEST0 for DIGEST[31:0] SHA256_DIGEST1 for DIGEST[63:32] SHA256_DIGEST2 for DIGEST[95:64] SHA256_DIGEST3 for DIGEST[127:96] SHA256_DIGEST4 for DIGEST[159:128] SHA256_DIGEST5 for DIGEST[191:160] SHA256_DIGEST6 for DIGEST[223:192] SHA256_DIGEST7 for DIGEST[255:224]">
    <alias type="CMSIS" value="SHA256_DIGEST[7]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description=".">
      <alias type="CMSIS" value="FLASH_CFPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
</regs:peripheral>

# Copyright 2023-2024 NXP
#
# SPDX-License-Identifier: BSD-3-Clause

revisions:
  a0:
    features:
      pfr:
        cfpa:
          data_file: pfr_cfpa_a0.xml
        cmpa:
          data_file: pfr_cmpa_a0.xml
      tz:
        data_file: tz_a0.yaml
latest: a0

# General MCU information
info:
  purpose: General Purpose Processor
  # Web page of MCU representative
  web: https://www.nxp.com
  memory_map: # Memory map basic info
    internal_flash:
      base_addr: 0x0
      size: 0x80000
      external: false
    internal_flash0:
      base_addr: 0x80000
      size: 0x80000
      external: false
    sram:
      base_addr: 0x20000000
      size: 0x40000
      external: false
    sramx:
      base_addr: 0x4000000
      size: 0x18000
      external: false
  # isp:
  #   mboot_interfaces: [usb, uart, spi, i2c]
  #   usb_rom:
  #     vid: 0x1FC9
  #     pid: 0x0158

features:
  # ======== Communication buffer section ========
  comm_buffer:
    address: 0x20007000
    size: 0x1000

  # ======== Certificate block section ========
  cert_block:
    rot_type: "cert_block_21"

  # ======== DAT section ========
  dat:
    socc: 7 # SOCC identification

  # ======== MBI section ========
  mbi:
    mbi_classes:
      plain_xip:
        image_type: PLAIN_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinIvt
          - Mbi_MixinTrustZoneMandatory
          - Mbi_MixinLoadAddress
          - Mbi_MixinImageVersion
          - Mbi_ExportMixinAppTrustZone
      plain_ram:
        image_type: PLAIN_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinIvt
          - Mbi_MixinTrustZoneMandatory
          - Mbi_MixinLoadAddress
          - Mbi_MixinImageVersion
          - Mbi_ExportMixinAppTrustZone
      crc_ram:
        image_type: CRC_RAM_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinIvt
          - Mbi_MixinTrustZoneMandatory
          - Mbi_MixinLoadAddress
          - Mbi_MixinImageVersion
          - Mbi_ExportMixinAppTrustZone
          - Mbi_ExportMixinCrcSign
      crc_xip:
        image_type: CRC_XIP_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinIvt
          - Mbi_MixinTrustZoneMandatory
          - Mbi_MixinLoadAddress
          - Mbi_MixinImageVersion
          - Mbi_ExportMixinAppTrustZone
          - Mbi_ExportMixinCrcSign
      signed_xip:
        image_type: SIGNED_XIP_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinIvt
          - Mbi_MixinLoadAddress
          - Mbi_MixinCertBlockV21
          - Mbi_MixinManifestCrc
          - Mbi_MixinImageSubType
          - Mbi_MixinImageVersion
          - Mbi_MixinFwVersion
          - Mbi_ExportMixinAppCertBlockManifest
          - Mbi_ExportMixinEccSign
      signed_ram:
        image_type: SIGNED_XIP_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinIvt
          - Mbi_MixinCertBlockV21
          - Mbi_MixinManifestCrc
          - Mbi_MixinImageSubType
          - Mbi_MixinLoadAddress
          - Mbi_MixinImageVersion
          - Mbi_MixinFwVersion
          - Mbi_ExportMixinAppCertBlockManifest
          - Mbi_ExportMixinEccSign
    images:
      xip:
        plain: plain_xip
        crc: crc_xip
        signed: signed_xip
      load_to_ram:
        plain: plain_ram
        crc: crc_ram
        signed: signed_ram

  # ======== PFR section ========
  pfr:
    cfpa: # CFPA description
      address: 0x100_0000
      size: 512
      seal_start: CFPA_CRC32
      seal_count: 1
      mandatory_computed_regs: true
      grouped_registers:
        - name: DICE_Certificate
          width: 1152
          config_as_hexstring: true
          description:
            DICE Certificate field is compounded by 36 32-bit fields and contains
            value of DICE Certificate generated by ROM
      computed_fields:
        HEADER:
          INVERSE_VALUE: pfr_reg_inverse_lower_8_bits
          INV_CFPA_LC_STATE: pfr_reg_inverse_lower_8_bits
        DBG_REVOKE_VU:
          INVERSE_VALUE: pfr_reg_inverse_high_half
        DCFG_CC_SOCU_NS_PIN:
          INVERSE_VALUE: pfr_reg_inverse_high_half
        DCFG_CC_SOCU_NS_DFLT:
          INVERSE_VALUE: pfr_reg_inverse_high_half
    cmpa: # CMPA description
      address: 0x0100_4000
      size: 512
      seal_start: CMPA_CMAC0
      seal_count: 4
      mandatory_computed_regs: true
      grouped_registers:
        - name: ROTKH
          width: 384
          reversed: true
          config_as_hexstring: true
          alternative_widths: [256]
          description:
            ROTKH field is compounded by 12 32-bit fields and contains Root key table hash.
            Root of Trust Key Hash is SHA256 or SHA384 of RoTK public. Hash algorithm is selected
            based on RoTK EC type (secp256r1 -> SHA256 or secp384r1 -> SHA384).
            Same RoTKs and RoTKTH values are shared between debug authentication, SB3.1 firmware updates
            container and signed boot image based on CMPA.RoTKx_Usage.
        - name: CUST_MK_SK_KEY_BLOB
          width: 384
          reversed: false
          config_as_hexstring: true
          description: CUST_MK_SK key blob.
            CUST_MK_SK is stored in form of RFC3394 blob and it is used by bootloader to decrypt SB3.1 encryption key during processing of SB file by bootloader.
            CUST_MK_SK is generated during device provisioning process by HSM_KEY_GEN (random key) or by HSM_STORE_KEY (user defined key) commands.
            To store this key into CMPA, SB_STORE_KEY command should be used.
      computed_fields:
        DCFG_CC_SOCU_PIN:
          INVERSE_VALUE: pfr_reg_inverse_high_half
        DCFG_CC_SOCU_DFLT:
          INVERSE_VALUE: pfr_reg_inverse_high_half

  # ======== Secure binary v3.1 section ========
  sb31:
    supported_commands:
      - erase
      - load
      - execute
      - programFuses
      - programIFR
      - loadCMAC
      - copy
      - loadHashLocking
      - loadKeyBlob
      - configureMemory
      - fillMemory
      - checkFwVersion

  # ======== Device Hardware Security Module (HSM) section ========
  devhsm:
    key_blob_offset: 0x0
    key_blob_command_position: -1
    devhsm_class: DevHsmSB31

  # ======== TrustZone section ========
  tz: {}

<?xml version="1.0"?>
<!--
  Copyright 2023 NXP

  SPDX-License-Identifier: BSD-3-Clause
-->
<regs:peripheral xmlns:regs="http://swtools.freescale.net/XSD/registers/5.0/regsPeripheral.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://swtools.freescale.net/XSD/registers/5.0/regsPeripheral.xsd http://swtools.freescale.net/XSD/registers/5.0/regsPeripheral.xsd">
  <register offset="0" width="32" name="BOOT_CFG" description="Boot Configuration">
    <alias type="CMSIS" value="BOOT_CFG"/>
    <reserved_bit_field offset="0" width="4" reset_value="0"/>
    <bit_field offset="4" width="3" name="DEFAULT_ISP_MODE" access="RW" reset_value="0" description="Default ISP mode:">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_DEFAULT_ISP_MODE(x)"/>
      <bit_field_value name="AUTO_ISP" value="0b000" description="Auto ISP"/>
      <bit_field_value name="USB_HID_ISP" value="0b001" description="USB_HID_ISP"/>
      <bit_field_value name="UART_ISP" value="0b010" description="UART ISP"/>
      <bit_field_value name="SPI_ISP" value="0b011" description="SPI Slave ISP"/>
      <bit_field_value name="I2C_ISP" value="0b100" description="I2C Slave ISP"/>
      <bit_field_value name="DISABLE" value="0b111" description="Disable ISP fall through"/>
    </bit_field>
    <bit_field offset="7" width="2" name="BOOT_SPEED" access="RW" reset_value="0" description="Core clock:">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_BOOT_SPEED(x)"/>
      <bit_field_value name="SYSTEM_SPEED_CODE" value="0b00" description="Defined by NMPA.SYSTEM_SPEED_CODE"/>
      <bit_field_value name="FRO_96MHZ" value="0b01" description="96MHz FRO"/>
      <bit_field_value name="FRO_48MHZ" value="0b10" description="48MHz FRO"/>
    </bit_field>
    <bit_field offset="9" width="2" name="USB_SPEED" access="RW" reset_value="0" description="Defines which USB module is used for ISP:">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_USB_SPEED(x)"/>
      <bit_field_value name="USB_SPEED_0" value="0b00" description="Defined by NMPA.USBCFG.USB_SPEED"/>
      <bit_field_value name="USB_FS" value="0b01" description="USB FS module used for ISP"/>
      <bit_field_value name="USB_HS" value="0b10" description="USB HS module used for ISP"/>
      <bit_field_value name="USB_SPEED_1" value="0b11" description="Defined by NMPA.USBCFG.USB_SPEED"/>
    </bit_field>
    <reserved_bit_field offset="11" width="13" reset_value="0"/>
    <bit_field offset="24" width="8" name="BOOT_FAILURE_PIN" access="RW" reset_value="0" description="GPIO port and pin number to use for indicating failure reason. The toggle rate of the pin is used to decode the error type. [2:0] - Defines GPIO port [7:3] - Defines GPIO pin">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_BOOT_FAILURE_PIN(x)"/>
    </bit_field>
  </register>
  <register offset="0x4" width="32" name="SPI_FLASH_CFG" description="SPI Flash Configuration">
    <alias type="CMSIS" value="SPI_FLASH_CFG"/>
    <bit_field offset="0" width="5" name="SPI_RECOVERY_BOOT_EN" access="RW" reset_value="0" description="SPI flash recovery boot is enabled, if non-zero value is written to this field.">
      <alias type="CMSIS" value="FLASH_CMPA_SPI_FLASH_CFG_SPI_RECOVERY_BOOT_EN(x)"/>
    </bit_field>
    <reserved_bit_field offset="5" width="27" reset_value="0"/>
  </register>
  <register offset="0x8" width="32" name="USB_ID" description="USB Identifiers">
    <alias type="CMSIS" value="USB_ID"/>
    <bit_field offset="0" width="16" name="USB_VENDOR_ID" access="RW" reset_value="0" description="USB Vendor ID">
      <alias type="CMSIS" value="FLASH_CMPA_USB_ID_USB_VENDOR_ID(x)"/>
    </bit_field>
    <bit_field offset="16" width="16" name="USB_PRODUCT_ID" access="RW" reset_value="0" description="USB Product ID">
      <alias type="CMSIS" value="FLASH_CMPA_USB_ID_USB_PRODUCT_ID(x)"/>
    </bit_field>
  </register>
  <register offset="0xC" width="32" name="SDIO_CFG" description="SDIO Configuration">
    <alias type="CMSIS" value="SDIO_CFG"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_SDIO_CFG_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x10" width="32" name="DCFG_CC_SOCU_PIN" description="Device Configuration Credential Constraints for SoC specific Use Pinned. \nCombinations of PIN and DFLT bits and resulting restriction level: \n- PIN=1,DFLT=1: Restriction level 0. Access to the sub-domain is always enabled. This setting is provided for module use case scenario where DCFG_CC_SOCU_NS would be used to define further access restrictions before final deployment of the product. \n- PIN=0,DFLT=0: Restriction level 1. Access to the sub-domain is disabled at startup. But the access can be enabled through debug authentication process by providing appropriate Debug Credential (DC) certificate. \n- PIN=0,DFLT=1: Illegal setting. Part may lock-up if this setting is selected. \n- PIN=1,DFLT=0: Restriction level 3. Access to the sub-domain is permanently disabled and can't be reversed. This setting offers the highest level of restriction.">
    <alias type="CMSIS" value="DCFG_CC_SOCU_PIN"/>
    <bit_field offset="0" width="1" name="NIDEN" access="RW" reset_value="0" description="Non Secure non-invasive debug enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_NIDEN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="1" width="1" name="DBGEN" access="RW" reset_value="0" description="Non Secure debug enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_DBGEN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <reserved_bit_field offset="2" width="2" reset_value="0"/>
    <bit_field offset="4" width="1" name="TAPEN" access="RW" reset_value="0" description="JTAG TAP enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_TAPEN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <reserved_bit_field offset="5" width="1" reset_value="0"/>
    <bit_field offset="6" width="1" name="ISP_CMD_EN" access="RW" reset_value="0" description="ISP Boot Command enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_ISP_CMD_EN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="7" width="1" name="FA_ME_CMD_EN" access="RW" reset_value="0" description="Fault Analysis/Mass Erase Command enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_FA_ME_CMD_EN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <reserved_bit_field offset="8" width="8" reset_value="0"/>
    <reserved_bit_field offset="16" width="16" name="INVERSE_VALUE" access="RW" reset_value="0" description="inverse value of bits [15:0]">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_INVERSE_VALUE(x)"/>
    </reserved_bit_field>
  </register>
  <register offset="0x14" width="32" name="DCFG_CC_SOCU_DFLT" description="Device Configuration Credential Constraints for SoC specific Use Debug Filter. \nCombinations of PIN and DFLT bits and resulting restriction level: \n- PIN=1,DFLT=1: Restriction level 0. Access to the sub-domain is always enabled. This setting is provided for module use case scenario where DCFG_CC_SOCU_NS would be used to define further access restrictions before final deployment of the product. \n- PIN=0,DFLT=0: Restriction level 1. Access to the sub-domain is disabled at startup. But the access can be enabled through debug authentication process by providing appropriate Debug Credential (DC) certificate. \n- PIN=0,DFLT=1: Illegal setting. Part may lock-up if this setting is selected. \n- PIN=1,DFLT=0: Restriction level 3. Access to the sub-domain is permanently disabled and can't be reversed. This setting offers the highest level of restriction.">
    <alias type="CMSIS" value="DCFG_CC_SOCU_DFLT"/>
    <bit_field offset="0" width="1" name="NIDEN" access="RW" reset_value="0" description="Non Secure non-invasive debug fixed state">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_NIDEN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <bit_field offset="1" width="1" name="DBGEN" access="RW" reset_value="0" description="Non Secure debug fixed state">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_DBGEN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <reserved_bit_field offset="2" width="2" reset_value="0"/>
    <bit_field offset="4" width="1" name="TAPEN" access="RW" reset_value="0" description="JTAG TAP fixed state">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_TAPEN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <reserved_bit_field offset="5" width="1" reset_value="0"/>
    <bit_field offset="6" width="1" name="ISP_CMD_EN" access="RW" reset_value="0" description="ISP Boot Command fixed state">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_ISP_CMD_EN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <bit_field offset="7" width="1" name="FA_ME_CMD_EN" access="RW" reset_value="0" description="Fault Analysis/Mass Erase Command fixed state">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_FA_ME_CMD_EN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <reserved_bit_field offset="8" width="8" reset_value="0"/>
    <reserved_bit_field offset="16" width="16" name="INVERSE_VALUE" access="RW" reset_value="0" description="inverse value of bits [15:0]">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_INVERSE_VALUE(x)"/>
    </reserved_bit_field>
  </register>
  <register offset="0x100" width="32" name="CUSTOMER_DEFINED0" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[0]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x104" width="32" name="CUSTOMER_DEFINED1" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[1]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x108" width="32" name="CUSTOMER_DEFINED2" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[2]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x10C" width="32" name="CUSTOMER_DEFINED3" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[3]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x110" width="32" name="CUSTOMER_DEFINED4" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[4]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x114" width="32" name="CUSTOMER_DEFINED5" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[5]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x118" width="32" name="CUSTOMER_DEFINED6" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[6]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x11C" width="32" name="CUSTOMER_DEFINED7" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[7]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x120" width="32" name="CUSTOMER_DEFINED8" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[8]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x124" width="32" name="CUSTOMER_DEFINED9" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[9]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x128" width="32" name="CUSTOMER_DEFINED10" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[10]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x12C" width="32" name="CUSTOMER_DEFINED11" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[11]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x130" width="32" name="CUSTOMER_DEFINED12" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[12]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x134" width="32" name="CUSTOMER_DEFINED13" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[13]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x138" width="32" name="CUSTOMER_DEFINED14" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[14]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x13C" width="32" name="CUSTOMER_DEFINED15" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[15]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x140" width="32" name="CUSTOMER_DEFINED16" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[16]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x144" width="32" name="CUSTOMER_DEFINED17" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[17]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x148" width="32" name="CUSTOMER_DEFINED18" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[18]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x14C" width="32" name="CUSTOMER_DEFINED19" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[19]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x150" width="32" name="CUSTOMER_DEFINED20" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[20]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x154" width="32" name="CUSTOMER_DEFINED21" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[21]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x158" width="32" name="CUSTOMER_DEFINED22" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[22]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x15C" width="32" name="CUSTOMER_DEFINED23" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[23]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x160" width="32" name="CUSTOMER_DEFINED24" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[24]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x164" width="32" name="CUSTOMER_DEFINED25" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[25]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x168" width="32" name="CUSTOMER_DEFINED26" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[26]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x16C" width="32" name="CUSTOMER_DEFINED27" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[27]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x170" width="32" name="CUSTOMER_DEFINED28" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[28]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x174" width="32" name="CUSTOMER_DEFINED29" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[29]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x178" width="32" name="CUSTOMER_DEFINED30" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[30]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x17C" width="32" name="CUSTOMER_DEFINED31" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[31]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x180" width="32" name="CUSTOMER_DEFINED32" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[32]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x184" width="32" name="CUSTOMER_DEFINED33" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[33]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x188" width="32" name="CUSTOMER_DEFINED34" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[34]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x18C" width="32" name="CUSTOMER_DEFINED35" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[35]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x190" width="32" name="CUSTOMER_DEFINED36" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[36]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x194" width="32" name="CUSTOMER_DEFINED37" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[37]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x198" width="32" name="CUSTOMER_DEFINED38" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[38]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x19C" width="32" name="CUSTOMER_DEFINED39" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[39]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1A0" width="32" name="CUSTOMER_DEFINED40" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[40]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1A4" width="32" name="CUSTOMER_DEFINED41" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[41]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1A8" width="32" name="CUSTOMER_DEFINED42" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[42]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1AC" width="32" name="CUSTOMER_DEFINED43" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[43]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1B0" width="32" name="CUSTOMER_DEFINED44" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[44]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1B4" width="32" name="CUSTOMER_DEFINED45" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[45]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1B8" width="32" name="CUSTOMER_DEFINED46" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[46]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1BC" width="32" name="CUSTOMER_DEFINED47" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[47]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1C0" width="32" name="CUSTOMER_DEFINED48" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[48]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1C4" width="32" name="CUSTOMER_DEFINED49" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[49]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1C8" width="32" name="CUSTOMER_DEFINED50" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[50]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1CC" width="32" name="CUSTOMER_DEFINED51" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[51]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1D0" width="32" name="CUSTOMER_DEFINED52" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[52]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1D4" width="32" name="CUSTOMER_DEFINED53" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[53]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1D8" width="32" name="CUSTOMER_DEFINED54" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[54]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1DC" width="32" name="CUSTOMER_DEFINED55" description="Customer Defined (Programmable through ROM API)">
    <alias type="CMSIS" value="CUSTOMER_DEFINED[55]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1E0" width="32" name="SHA256_DIGEST0" description="SHA256_DIGEST0 for DIGEST[31:0]">
    <alias type="CMSIS" value="SHA256_DIGEST[0]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1E4" width="32" name="SHA256_DIGEST1" description="SHA256_DIGEST1 for DIGEST[63:32]">
    <alias type="CMSIS" value="SHA256_DIGEST[1]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1E8" width="32" name="SHA256_DIGEST2" description="SHA256_DIGEST2 for DIGEST[95:64]">
    <alias type="CMSIS" value="SHA256_DIGEST[2]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1EC" width="32" name="SHA256_DIGEST3" description="SHA256_DIGEST3 for DIGEST[127:96]">
    <alias type="CMSIS" value="SHA256_DIGEST[3]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1F0" width="32" name="SHA256_DIGEST4" description="SHA256_DIGEST4 for DIGEST[159:128]">
    <alias type="CMSIS" value="SHA256_DIGEST[4]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1F4" width="32" name="SHA256_DIGEST5" description="SHA256_DIGEST5 for DIGEST[191:160]">
    <alias type="CMSIS" value="SHA256_DIGEST[5]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1F8" width="32" name="SHA256_DIGEST6" description="SHA256_DIGEST6 for DIGEST[223:192]">
    <alias type="CMSIS" value="SHA256_DIGEST[6]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1FC" width="32" name="SHA256_DIGEST7" description="SHA256_DIGEST7 for DIGEST[255:224]">
    <alias type="CMSIS" value="SHA256_DIGEST[7]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RW" reset_value="0" description="Field.">
      <alias type="CMSIS" value="FLASH_CMPA_SHA256_DIGEST_FIELD(x)"/>
    </bit_field>
  </register>
</regs:peripheral>

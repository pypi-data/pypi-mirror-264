"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""


import requests as requests_http
from ._hooks import SDKHooks
from .utils import utils
from .utils.retries import RetryConfig
from dataclasses import dataclass
from ivycheck import models
from typing import Callable, Dict, Tuple, Union


SERVER_PROD = 'prod'
r"""Production server"""
SERVER_SANDBOX = 'sandbox'
r"""Local server"""
SERVERS = {
	SERVER_PROD: 'https://api.ivycheck.com',
	SERVER_SANDBOX: 'http://localhost:8000',
}
"""Contains the list of servers available to the SDK"""


@dataclass
class SDKConfiguration:
    client: requests_http.Session
    security: Union[models.Security,Callable[[], models.Security]] = None
    server_url: str = ''
    server: str = ''
    language: str = 'python'
    openapi_doc_version: str = '0.0.1'
    sdk_version: str = '0.8.4'
    gen_version: str = '2.291.0'
    user_agent: str = 'speakeasy-sdk/python 0.8.4 2.291.0 0.0.1 ivycheck'
    retry_config: RetryConfig = None
    _hooks: SDKHooks = None

    def get_server_details(self) -> Tuple[str, Dict[str, str]]:
        if self.server_url:
            return utils.remove_suffix(self.server_url, '/'), {}
        if not self.server:
            self.server = SERVER_PROD

        if not self.server in SERVERS:
            raise ValueError(f"Invalid server \"{self.server}\"")

        return SERVERS[self.server], {}


    def get_hooks(self) -> SDKHooks:
        return self._hooks

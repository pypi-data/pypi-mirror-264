# Auto generated by 'inv collect-airflow'
from airfly._vendor.airflow.models.baseoperator import BaseOperator


class KubernetesPodOperator(BaseOperator):
    namespace: "typing.Union[str, NoneType]"
    image: "typing.Union[str, NoneType]"
    name: "typing.Union[str, NoneType]"
    cmds: "typing.Union[typing.List[str], NoneType]"
    arguments: "typing.Union[typing.List[str], NoneType]"
    ports: "typing.Union[typing.List[kubernetes.client.models.v1_container_port.V1ContainerPort], NoneType]"
    volume_mounts: "typing.Union[typing.List[kubernetes.client.models.v1_volume_mount.V1VolumeMount], NoneType]"
    volumes: "typing.Union[typing.List[kubernetes.client.models.v1_volume.V1Volume], NoneType]"
    env_vars: "typing.Union[typing.List[kubernetes.client.models.v1_env_var.V1EnvVar], NoneType]"
    env_from: "typing.Union[typing.List[kubernetes.client.models.v1_env_from_source.V1EnvFromSource], NoneType]"
    secrets: "typing.Union[typing.List[airflow.kubernetes.secret.Secret], NoneType]"
    in_cluster: "typing.Union[bool, NoneType]"
    cluster_context: "typing.Union[str, NoneType]"
    labels: "typing.Union[typing.Dict, NoneType]"
    reattach_on_restart: "bool"
    startup_timeout_seconds: "int"
    get_logs: "bool"
    image_pull_policy: "typing.Union[str, NoneType]"
    annotations: "typing.Union[typing.Dict, NoneType]"
    resources: "typing.Union[kubernetes.client.models.v1_resource_requirements.V1ResourceRequirements, NoneType]"
    affinity: "typing.Union[kubernetes.client.models.v1_affinity.V1Affinity, NoneType]"
    config_file: "typing.Union[str, NoneType]"
    node_selectors: "typing.Union[dict, NoneType]"
    node_selector: "typing.Union[dict, NoneType]"
    image_pull_secrets: "typing.Union[typing.List[kubernetes.client.models.v1_local_object_reference.V1LocalObjectReference], NoneType]"
    service_account_name: "typing.Union[str, NoneType]"
    is_delete_operator_pod: "bool"
    hostnetwork: "bool"
    tolerations: "typing.Union[typing.List[kubernetes.client.models.v1_toleration.V1Toleration], NoneType]"
    security_context: "typing.Union[typing.Dict, NoneType]"
    dnspolicy: "typing.Union[str, NoneType]"
    schedulername: "typing.Union[str, NoneType]"
    full_pod_spec: "typing.Union[kubernetes.client.models.v1_pod.V1Pod, NoneType]"
    init_containers: "typing.Union[typing.List[kubernetes.client.models.v1_container.V1Container], NoneType]"
    log_events_on_failure: "bool"
    do_xcom_push: "bool"
    pod_template_file: "typing.Union[str, NoneType]"
    priority_class_name: "typing.Union[str, NoneType]"
    pod_runtime_info_envs: "typing.List[airflow.providers.cncf.kubernetes.backcompat.pod_runtime_info_env.PodRuntimeInfoEnv]"
    termination_grace_period: "typing.Union[int, NoneType]"
    configmaps: "typing.Union[str, NoneType]"

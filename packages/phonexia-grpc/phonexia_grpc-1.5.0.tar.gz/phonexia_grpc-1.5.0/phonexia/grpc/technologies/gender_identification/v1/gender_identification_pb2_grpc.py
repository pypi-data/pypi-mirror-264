# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from phonexia.grpc.technologies.gender_identification.v1 import gender_identification_pb2 as phonexia_dot_grpc_dot_technologies_dot_gender__identification_dot_v1_dot_gender__identification__pb2


class GenderIdentificationStub(object):
    """Service that implements gender identification.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Identify = channel.stream_stream(
                '/phonexia.grpc.technologies.gender_identification.v1.GenderIdentification/Identify',
                request_serializer=phonexia_dot_grpc_dot_technologies_dot_gender__identification_dot_v1_dot_gender__identification__pb2.IdentifyRequest.SerializeToString,
                response_deserializer=phonexia_dot_grpc_dot_technologies_dot_gender__identification_dot_v1_dot_gender__identification__pb2.IdentifyResponse.FromString,
                )


class GenderIdentificationServicer(object):
    """Service that implements gender identification.
    """

    def Identify(self, request_iterator, context):
        """Performs synchronous gender identification from one or more voiceprints.
        Identification is performed on each received chunk and partial results
        corresponding to that chunk are returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GenderIdentificationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Identify': grpc.stream_stream_rpc_method_handler(
                    servicer.Identify,
                    request_deserializer=phonexia_dot_grpc_dot_technologies_dot_gender__identification_dot_v1_dot_gender__identification__pb2.IdentifyRequest.FromString,
                    response_serializer=phonexia_dot_grpc_dot_technologies_dot_gender__identification_dot_v1_dot_gender__identification__pb2.IdentifyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'phonexia.grpc.technologies.gender_identification.v1.GenderIdentification', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GenderIdentification(object):
    """Service that implements gender identification.
    """

    @staticmethod
    def Identify(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/phonexia.grpc.technologies.gender_identification.v1.GenderIdentification/Identify',
            phonexia_dot_grpc_dot_technologies_dot_gender__identification_dot_v1_dot_gender__identification__pb2.IdentifyRequest.SerializeToString,
            phonexia_dot_grpc_dot_technologies_dot_gender__identification_dot_v1_dot_gender__identification__pb2.IdentifyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

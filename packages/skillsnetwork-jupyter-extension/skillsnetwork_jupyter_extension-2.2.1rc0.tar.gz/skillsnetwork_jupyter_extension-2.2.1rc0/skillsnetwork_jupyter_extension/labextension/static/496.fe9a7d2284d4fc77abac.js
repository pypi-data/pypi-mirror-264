"use strict";(self.webpackChunkskillsnetwork_jupyter_extension=self.webpackChunkskillsnetwork_jupyter_extension||[]).push([[496],{904:(e,t,o)=>{o.a(e,(async(e,n)=>{try{o.d(t,{AP:()=>m,CS:()=>h,CY:()=>u,Gq:()=>E,Mh:()=>s,Ut:()=>l,a:()=>i,aQ:()=>f,mW:()=>a,o7:()=>g,qK:()=>b,sd:()=>_,wr:()=>y,xy:()=>p});var a,i,r=o(348);!function(e){e.JUPYTERLAB="jupyterlab",e.JUPYTERLITE="jupyterlite",e.LOCAL="local"}(a||(a={})),function(e){e.LEARN="learn",e.AUTHOR="author"}(i||(i={}));const e=e=>{let t=e.baseUrl;return t.endsWith("/")||(t+="/"),t},l=function(){const e=window.location.href,t=new URL(e);let o=t.searchParams.get("env_type");return o!==a.JUPYTERLAB&&o!==a.JUPYTERLITE&&o!==a.LOCAL?(console.log("Valid env_type not found in URL parameters"),t.pathname.includes(a.JUPYTERLITE)?(console.log("Guessed env_type from URL pathname"),o=a.JUPYTERLITE):t.host.includes(a.JUPYTERLAB)?(console.log("Guessed env_type from URL hostname"),o=a.JUPYTERLAB):(console.log("Using default env_type"),o=a.LOCAL)):console.log("env_type found in URL parameters"),console.log("Environment Type (env_type):",o),o}(),s=function(){const e=window.location.href;let t=new URL(e).searchParams.get("mode");return t!==i.AUTHOR&&t!==i.LEARN&&(console.log("Valid mode not found in URL parameters"),l===a.LOCAL?(console.log("Using author mode for local environment"),t=i.AUTHOR):(console.log("Using default mode"),t=i.LEARN)),console.log("Mode:",t),t}(),c=async()=>{const t=r.ServerConnection.makeSettings(),o=e(t)+"skillsnetwork_jupyter_extension/config",n=await r.ServerConnection.makeRequest(o,{method:"GET"},t);return await n.json()},d=async(e,t)=>{const o=window.location.href,n=new URL(o).searchParams.get(e);if(console.log(`${t} from current url: ${n}`),null===n){if(l===a.JUPYTERLITE)return console.log(`${e} not found in URL parameters, leaving empty due to env_type...`),"";if(s===i.LEARN)return console.log(`${e} not found in URL parameters, leaving empty due to mode...`),"";console.log(`${e} not found in URL parameters, making server request...`);const o=await c();return console.log(`${t} from server: ${o[t]}`),o[t]}return decodeURIComponent(n)},u=await d("atlas_base_url","ATLAS_BASE_URL"),p=await d("awb_base_url","AWB_BASE_URL"),h=await d("sn_file_library_url","SN_V2_FILE_LIBRARY_URL"),g=await d("sn_file_library_url","SN_FILE_LIBRARY_URL"),w=(e,t,o)=>{const n=window.location.href,a=new URL(n).searchParams.get(e);return null!==a?t?decodeURIComponent(a):a:o},b=w("atlas_token",!1,"NO_TOKEN"),m=w("awb_token",!1,"NO_TOKEN"),y=w("notebook_url",!0,null),f=w("file_path",!0,null),_=async()=>{const e=l;return e===a.JUPYTERLAB||e===a.LOCAL?(E.PY_KERNEL_NAME=await v(),E.DEFAULT_LAB_NAME="lab.ipynb"):e===a.JUPYTERLITE&&(E.PY_KERNEL_NAME="python",E.DEFAULT_LAB_NAME="lab.jupyterlite.ipynb"),e},v=async()=>{const e=await(await r.KernelSpecAPI.getSpecs()).kernelspecs,t=Object.keys(e).filter((function(e){return e.includes("python")})).sort();return t[t.length-1]};class E{}E.TOKENS=new Map,E.SHOW_PUBLISH_BUTTON_FOR=void 0,E.PREV_PUB_HASH="prev_pub_hash",E.BACKUP_EXT=".backup",n()}catch(e){n(e)}}),1)},780:(e,t,o)=>{o.d(t,{E3:()=>r,KQ:()=>d,Sc:()=>l,WA:()=>s,Zm:()=>u,g3:()=>c});var n=o(760),a=o(352);class i extends n.Widget{constructor(){const e=document.createElement("div"),t=new a.Spinner;e.appendChild(t.node),e.style.padding="15px",super({node:e})}}const r=e=>{const t=new i;(0,a.showDialog)({title:e,body:t,buttons:[a.Dialog.cancelButton()]}).then((e=>{"Cancel"===e.button.label&&console.log("Spinner dialog cancelled by user")}))},l=e=>{const t=new i;return(0,a.showDialog)({title:e,body:t,buttons:[]}).then((e=>e))},s=e=>(0,a.showDialog)({title:e,body:"Are you sure you want to publish? This action is not reversible",buttons:[a.Dialog.okButton(),a.Dialog.cancelButton()]}).then((e=>{if(!e.button.accept)throw new Error("Operation cancelled by the user.")})),c=()=>{(0,a.showDialog)({title:"Success!",body:"This lab has been successfully published!",buttons:[a.Dialog.okButton()]}).catch((e=>{console.error("Error closing success dialog:",e)}))},d=()=>{(0,a.showDialog)({title:"Failed to Publish",body:"This lab failed to publish.",buttons:[a.Dialog.okButton()]}).catch((e=>{console.log("Error closing failure dialog:",e)}))},u=()=>{(0,a.showDialog)({title:"Failed to Load Lab",body:"This lab failed to load.",buttons:[a.Dialog.okButton()]}).catch((e=>{console.log("Error closing failure to load lab dialog:",e)}))}},480:(e,t,o)=>{o.a(e,(async(e,n)=>{try{o.d(t,{CU:()=>b,E$:()=>v,GK:()=>w,I7:()=>y,Oc:()=>_,Yj:()=>m,m:()=>f});var a=o(637),i=o.n(a),r=o(780),l=o(352),s=o(904),c=o(96),d=o(500),u=o.n(d),p=o(416),h=o.n(p),g=e([s,c]);[s,c]=g.then?(await g)():g;const w=e=>u().create({baseURL:s.CY,headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json","Access-Control-Allow-Origin":"*",Accept:"application/json"}}),b=e=>u().create({baseURL:s.xy,headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json","Access-Control-Allow-Origin":"*",Accept:"application/json"}}),m=async(e,t)=>{try{const o=h()(t),n=o.version_id,a=o.lab_id;console.log(`Fetching lab model for lab_id: ${a}, version_id: ${n}`);const i=`${o.lab_name}.ipynb`.replace(/^.*[\\/]/,""),r=await e.get(`api/v1/labs/${a}/lab_versions/${n}/download?timestamp=${(new Date).getTime()}`).then((e=>(console.log("Lab model fetched successfully"),e.data)));return l.Dialog.flush(),{labFilename:i,body:r}}catch(e){throw"Failed to fetch notebook"}},y=async(e,t,o,n)=>{if(!await(0,r.WA)("Publishing your lab onto Skills Network...").then((e=>!0)).catch((e=>!1)))return;(0,r.Sc)("Publishing your changes...");const a=h()(n),s=a.version_id,d=a.lab_id;await(0,c.ol)(t,o);const u=await(0,c.gv)(t,o),p=new(i());return p.append("publish","true"),p.append("draft[changelog]","updated notebook"),p.append("file",u),console.log(`Posting lab model to AWB for lab_id: ${d}, version_id: ${s}`),new Promise((async(t,o)=>{await e.post(`api/v1/labs/${d}/lab_versions/${s}/drafts`,p).then((e=>{console.log(`Successfully Pushed Lab Version for lab id: ${d}, ver: ${s}`,e),l.Dialog.flush(),(0,r.g3)(),t()})).catch((e=>{l.Dialog.flush(),(0,r.KQ)(),o(new Error("Failed to post lab model"))}))}))},f=e=>e.get(`v1/labs?timestamp=${(new Date).getTime()}`).then((e=>(l.Dialog.flush(),e.data))).catch((e=>{throw"Failed to fetch notebook"})),_=e=>{const t=new URL(e);return 0===t.searchParams.size&&t.searchParams.append("timestamp",(new Date).getTime().toString()),u().get(t.toString(),{headers:{"Cache-Control":"no-cache",Expires:"0","Access-Control-Allow-Origin":"*",Accept:"application/json"}}).then((e=>(l.Dialog.flush(),e))).catch((e=>{throw"Failed to fetch notebook"}))},v=async(e,t,o)=>{if(!await(0,r.WA)("Publishing your lab onto Skills Network...").then((e=>!0)).catch((e=>!1)))return;(0,r.Sc)("Publishing your changes..."),console.log("Updating lab commit ID"),await(0,c.ol)(t,o);const n=await(0,c.gv)(t,o);return console.log("Posting lab model to ATLAS"),new Promise((async(t,o)=>{await e.post("v1/labs",{body:n}).then((e=>{l.Dialog.flush(),(0,r.g3)(),t()})).catch((e=>{l.Dialog.flush(),(0,r.KQ)(),o(new Error("Failed to post lab model to ATLAS"))}))}))};n()}catch(e){n(e)}}))},496:(e,t,o)=>{o.a(e,(async(e,n)=>{try{o.r(t),o.d(t,{default:()=>c});var a=o(964),i=o(808),r=o(168),l=e([a,i]);[a,i]=l.then?(await l)():l,console.log("Initializing JupyterFrontEnd plugins for skillsnetwork_jupyter_extension.");const s=[a.c,i.c,r.c];console.log("JupyterFrontEnd plugins defined:",s.map((e=>e.id)));const c=s;n()}catch(e){n(e)}}))},964:(e,t,o)=>{o.a(e,(async(e,n)=>{try{o.d(t,{c:()=>w});var a=o(792),i=o(760),r=o(352),l=o(464),s=o(608),c=o(780),d=o(904),u=o(96),p=o(416),h=o.n(p),g=e([d,u]);[d,u]=g.then?(await g)():g;const w={id:"skillsnetwork_jupyter_extension:menu",autoStart:!0,requires:[a.IMainMenu,r.ICommandPalette,l.INotebookTracker,s.IDocumentManager],activate:async(e,t,o,n,a)=>{if(console.log("skillsnetwork_jupyter_extension:menu extension activated"),d.Mh===d.a.LEARN)return;const{commands:r}=e,l="mainMenu:editLabFromToken";r.addCommand(l,{label:"Edit a Lab",execute:t=>{b(0,a,e.serviceManager.contents)}}),o.addItem({command:l,category:"skillsNetwork",args:{origin:"from the palette"}});const s=new i.Menu({commands:r});s.title.label="Skills Network",t.addMenu(s,!0,{rank:80}),s.addItem({command:l,args:{}})}};function b(e,t,o){const n=document.createElement("div"),a=document.createElement("label");a.textContent="Enter your authorization token";const l=document.createElement("input");l.className="jp-mod-styled",n.appendChild(a),n.appendChild(l),(0,r.showDialog)({title:"Edit a Lab",body:new i.Widget({node:n}),buttons:[r.Dialog.cancelButton(),r.Dialog.okButton()]}).then((async e=>{if(e.button.accept){console.log("Token dialog accepted, loading lab..."),(0,c.E3)("Loading up your lab...");const e=l.value;"version_id"in h()(e)?(console.log("Token contains version_id, opening independent lab..."),await(0,u.op)(e,t,o)):(console.log("Token does not contain version_id, opening lab..."),await(0,u.UJ)(e,t,o))}})).catch((e=>{r.Dialog.flush(),(0,c.Zm)(),console.error("Error occurred while importing lab:",e)}))}n()}catch(m){n(m)}}))},864:(e,t,o)=>{o.a(e,(async(e,n)=>{try{o.d(t,{q:()=>c});var a=o(904),i=o(416),r=o.n(i),l=e([a]);a=(l.then?(await l)():l)[0];var s;class c{constructor(e){s.set(this,void 0),function(e,t,o,n,a){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");"a"===n?a.call(e,o):a?a.value=o:t.set(e,o)}(this,s,e,"f")}launch(){const e=a.Gq.TOKENS.get(function(e,t,o,n){if("a"===o&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===o?n:"a"===o?n.call(e):n?n.value:t.get(e)}(this,s,"f").split("/").pop()||""),t=e?r()(e):{},o=document.createElement("a");o.href="project_id"in t?`${a.o7}?atlas_token=${e}`:`${a.CS}?lab_version_id=${t.version_id}`,o.target="_blank",document.body.appendChild(o),o.click(),document.body.removeChild(o)}}s=new WeakMap,n()}catch(e){n(e)}}))},168:(e,t,o)=>{o.d(t,{c:()=>n});const n={id:"skillsnetwork_jupyter_extension:theme",description:"Theme toggle plugin for Skills Network Authoring Extension",autoStart:!0,requires:[o(352).IThemeManager],activate:(e,t)=>{console.log("Activating skillsnetwork_jupyter_extension theme toggle plugin!"),window.addEventListener("message",(e=>{"update_theme"===e.data.type&&(console.log("Message received in the iframe:",e.data),"light"===e.data.color?t.setTheme("JupyterLab Light"):t.setTheme("JupyterLab Dark"))})),function(){try{return window.self!==window.top}catch(e){return!0}}()&&(console.log("Sending message to parent frame that the iframe has loaded!"),window.parent.postMessage({type:"frame_loaded"},"*"))}}},808:(e,t,o)=>{o.a(e,(async(e,n)=>{try{o.d(t,{c:()=>v});var a=o(608),i=o(208),r=o(352),l=o(96),s=o(508),c=o(480),d=o(780),u=o(904),p=o(416),h=o.n(p),g=o(464),w=o(864),b=e([u,c,l,w]);[u,c,l,w]=b.then?(await b)():b;const m={id:"skillsnetwork_jupyter_extension:toolbar",description:"Toolbar plugin for Skills Network Authoring Extension",autoStart:!0,requires:[g.INotebookTracker,a.IDocumentManager,i.IDefaultFileBrowser],activate:_};async function y(e){e.forEach((e=>{e.dispose()}))}class f{createNew(e,t){if(u.Gq.SHOW_PUBLISH_BUTTON_FOR!==t.path)return new s.DisposableDelegate((()=>{}));{const o=async()=>{const o=t.path.split("/").pop()||"",n=u.Gq.TOKENS.get(o);if(void 0===n)return console.log(`[ButtonExtension] No token found for filename: ${o}`),void await(0,r.showDialog)({title:"Publishing Restricted",body:`Only the lab '${u.Gq.TOKENS.keys().next().value}' can be published during this editing session.`,buttons:[r.Dialog.okButton({label:"Dismiss"})]});"version_id"in h()(n)?await(0,c.I7)((0,c.CU)(n),e,t,n):await(0,c.E$)((0,c.GK)(n),e,t)},n=async()=>{const o=await(0,l.gv)(e,t),n=new Blob([o],{type:"application/x-ipynb+json"}),a=URL.createObjectURL(n),i=document.createElement("a");i.setAttribute("download",t.path),i.setAttribute("href",a),document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(a)},a=new r.ToolbarButton({className:"download-lab-button",label:"Download Notebook",onClick:n,tooltip:"Download the current notebook ipynb file to your local system"}),i=new r.ToolbarButton({className:"publish-lab-button",label:"Publish on SN",onClick:o,tooltip:"Publish Lab"}),d=new r.ToolbarButton({className:"sn-file-library-button",label:"SN File Library",onClick:()=>new w.q(t.path).launch(),tooltip:"Skills Network File Library"});return e.toolbar.insertItem(8,"download",a),e.toolbar.insertItem(9,"sn-file-library",d),e.toolbar.insertItem(10,"publish",i),new s.DisposableDelegate((()=>{a.dispose(),i.dispose(),d.dispose()}))}}}async function _(e,t,o,n){console.log("Activating skillsnetwork_jupyter_extension button plugin!");const a=await(0,u.sd)();if(console.log("Using default kernel:",u.Gq.PY_KERNEL_NAME),u.Mh===u.a.LEARN){if(u.Ut!==u.mW.JUPYTERLITE)return;return console.log("skillsnetwork_jupyter_extension:toolbar extension activated"),void(u.wr?(await e.serviceManager.ready,e.restored.then((async()=>{await y(t);try{await(0,l.wO)(u.wr,u.aQ,o,e.serviceManager.contents,n)}catch(e){console.error("Error opening lab:",e),r.Dialog.flush(),(0,d.Zm)()}}))):console.log("No valid notebook URL found..."))}const i=u.qK,s=u.AP;console.log("skillsnetwork_jupyter_extension:toolbar extension activated"),e.docRegistry.addWidgetExtension("Notebook",new f),await e.serviceManager.ready,e.restored.then((async()=>{if(await y(t),"NO_TOKEN"!==i&&a!==u.mW.LOCAL)try{await(0,l.UJ)(i,o,e.serviceManager.contents)}catch(e){console.error("Error opening lab with Atlas token:",e),r.Dialog.flush(),(0,d.Zm)()}else if("NO_TOKEN"!==s&&a!==u.mW.LOCAL)try{await(0,l.op)(s,o,e.serviceManager.contents)}catch(e){console.error("Error opening lab with AWB token:",e),r.Dialog.flush(),(0,d.Zm)()}}))}const v=m;n()}catch(E){n(E)}}))},96:(e,t,o)=>{o.a(e,(async(e,n)=>{try{o.d(t,{UJ:()=>y,gv:()=>u,ol:()=>h,op:()=>m,wO:()=>f});var a=o(352),i=o(944),r=o(904),l=o(480),s=e([r,l]);[r,l]=s.then?(await s)():s;const c=e=>{const t=e.model.toJSON().source,o="string"==typeof t?[t]:t;return{cell_type:e.model.type,id:e.model.id,metadata:{},outputs:[],source:o}},d=e=>{const t=e.model.toJSON().source,o="string"==typeof t?[t]:t;return{cell_type:e.model.type,id:"",metadata:{},outputs:[],source:o}},u=(e,t)=>{const o=[];e.content.widgets.forEach((e=>{const t=c(e);o.push(t)}));const n={kernelspec:t.model.getMetadata("kernelspec"),language_info:t.model.getMetadata("language_info"),orig_nbformat:t.model.getMetadata("orig_nbformat"),[r.Gq.PREV_PUB_HASH]:t.model.getMetadata(r.Gq.PREV_PUB_HASH)},a=t.model.nbformat,i=t.model.nbformatMinor,l={cells:o,metadata:n,nbformat:a,nbformat_minor:i};return JSON.stringify(l,null,2)},p=async(e,t)=>{t=i.C.removeSlash(t);const o=i.C.dirname(t),n=[];o.split("/").reduce(((e,t)=>{const o=i.C.removeSlash(e+"/"+t);return n.push(o),o}),""),console.log(n);for(const t of n)try{await e.services.contents.get(t,{content:!1})}catch(o){console.log("Creating",t);const n=await e.newUntitled({path:"",type:"directory"});await e.rename(n.path,t)}};async function h(e,t){const o=await b(e,t),n=await S(o);await t.ready,t.model.setMetadata(r.Gq.PREV_PUB_HASH,n),t.save().then((()=>{console.log("Notebook saved with updated commit ID.")})).catch((e=>{console.error("Failed to save notebook with updated commit ID:",e)}))}function g(e){var t,o,n,a,i,l,s;return"string"==typeof e&&(e=JSON.parse(e)),"object"!=typeof e||null===e||!("metadata"in e)&&!("content"in e)?(console.error("Lab content is of unknown type: ",typeof e,"\n Value: \n",e),""):null!==(s=null!==(n=null===(o=null===(t=e.metadata)||void 0===t?void 0:t[r.Gq.PREV_PUB_HASH])||void 0===o?void 0:o.toString())&&void 0!==n?n:null===(l=null===(i=null===(a=e.content)||void 0===a?void 0:a.metadata)||void 0===i?void 0:i[r.Gq.PREV_PUB_HASH])||void 0===l?void 0:l.toString())&&void 0!==s?s:""}function w(e){var t;if("string"==typeof e)try{e=JSON.parse(e)}catch(e){return console.error("Error parsing lab content string:",e),!1}if("object"!=typeof e||null===e||!("cells"in e)&&(!e.content||!("cells"in e.content)))return console.error("Lab content is of unknown type or missing 'cells': ",typeof e,"\n Value: \n",e),!1;const o=e.cells||(null===(t=e.content)||void 0===t?void 0:t.cells);return 0===o.length||1===o.length&&0===o[0].source.length}const b=(e,t)=>{const o=[];return e.content.widgets.forEach((e=>{const t=d(e);o.push(t)})),JSON.stringify(o,null,2)},m=async(e,t,o)=>{const{labFilename:n,body:a}=await(0,l.Yj)((0,l.CU)(e),e);let i,s=`${n}`;return r.Ut!==r.mW.JUPYTERLITE?(s=`./${s}`,await E(s,o,t),await v(s,a,o,t)):await t.deleteFile(s),r.Gq.SHOW_PUBLISH_BUTTON_FOR=n,r.Gq.TOKENS.set(n,e),i=await T(s,o)?t.openOrReveal(n):await _(t,n,a),i},y=async(e,t,o)=>{const{instructions_file_path:n,body:a}=await(0,l.m)((0,l.GK)(e)),i=L(n);let s,c=`${i}`;return r.Ut!==r.mW.JUPYTERLITE?(c=`./${c}`,await E(c,o,t),await v(c,a,o,t)):await t.deleteFile(c),r.Gq.SHOW_PUBLISH_BUTTON_FOR=i,r.Gq.TOKENS.set(i,e),s=await T(c,o)?t.openOrReveal(i):await _(t,i,JSON.parse(a)),s},f=async(e,t,o,n,i)=>{const r=await(0,l.Oc)(e),s=r.data;if(!N(s))throw Error(`content of ${e} is not a valid JSON! Please let the author know about this issue!`);const c=Date.parse(r.headers["last-modified"]||"");if(console.log(`last-modified date of ${e} extracted from headers:`,c),!(t&&t.endsWith(".ipynb")||(console.log(`filePath from query (which is ${t}) is either missing or doesn't end with .ipynb. Trying to use the pathname from ${e} as filePath...`),(t=decodeURI(new URL(e).pathname)).endsWith(".ipynb"))))throw Error(`pathname of ${e} (which is ${t}) doesn't end with .ipynb. A notebook can't be created.`);console.log("filePath:",t),await p(o,t),console.log(`Opening ${t} in filebrowser`),await i.model.cd(t.substring(0,t.lastIndexOf("/")));const d=await T(t,n);let u;return d?(console.log("last-modified date of",t,"extracted from notebook:",Date.parse(d.last_modified)),(!c||c>Date.parse(d.last_modified))&&(await(0,a.showDialog)({title:"Newer version of notebook available",body:`A newer version of the lab is available. Would you like to load the latest version? The current state of the notebook ${t} will be saved with a .backup.ipynb extension.`,buttons:[a.Dialog.cancelButton(),a.Dialog.okButton({label:"Use the newer version"})]})).button.accept?(console.log("Opening newer version of notebook"),await o.overwrite(t,t.slice(0,t.lastIndexOf(".ipynb"))+".backup.ipynb"),u=await _(o,t,s)):(console.log("Opening existing notebook"),u=o.openOrReveal(t)),u):(console.log("Creating a new notebook"),u=await _(o,t,s),u)},_=async(e,t,o)=>{const n=e.createNew(t,"notebook",{name:r.Gq.PY_KERNEL_NAME});if(void 0===n)throw Error("Error loading lab");return await k(n,o),n};async function v(e,t,o,n){const i=await T(e,o);if(i&&g(t)!==g(i))try{await R(i,o,n),await(0,a.showDialog)({title:"Your Lab was Updated",body:`The newest published version of "${e}" is loaded. Your previous version has been backed up under "${e}${r.Gq.BACKUP_EXT}.ipynb"`,buttons:[a.Dialog.okButton({label:"Dismiss"})]})}catch(t){console.error("[checkAndBackupSaveFile] Error during file backup",t),await(0,a.showDialog)({title:"Error with Previous File",body:`While trying to load your lab: "${e}", we found that you have another file named "${e}" that already exists in this folder, please delete it or rename it so we can load your published version"`,buttons:[a.Dialog.okButton({label:"Dismiss"})]})}}async function E(e,t,o){const n=await T(e,t);n&&(await U(e,o),w(n)&&await t.delete(e))}const k=async(e,t,o)=>{if(await e.context.ready,"local"!==o){e.context.model.fromJSON(t);try{await e.context.save()}catch(e){console.error("[loadLabContents] Error saving notebook:",e)}}else console.error("[loadLabContents] Notebook model is not initialized or authoring environment is local.")},L=e=>(null!=e?e:r.Gq.DEFAULT_LAB_NAME).replace(/^.*[\\/]/,"");async function T(e,t){try{return await t.get(e)}catch(e){if(e instanceof Error){const t=e;if(t.response&&404!==t.response.status)throw console.error("Error checking for existent backup file: ",e),e;return null}throw console.error("[getFile] Unexpected error type:",e),e}}async function A(e,t){const o=t.findWidget(e);if(o)try{o.context.model.dirty&&await o.context.save(),o.close()}catch(e){console.error("[saveAndCloseOpenFiles] Error saving or closing widget:",e)}}async function U(e,t){const o=t.findWidget(e);if(o)try{const e=t.contextForWidget(o);e&&e.model&&(e.model.dirty=!1),o.close()}catch(e){console.error("[closeWithoutSaving] Error closing widget:",e)}}async function R(e,t,o){const n=e.path,a=n.split(".").pop(),i=`${n.replace(/\.[^/.]+$/,"")}${r.Gq.BACKUP_EXT}.${a}`;if(await T(i,t))try{await t.delete(i)}catch(e){console.error("[convertFileToBackup] Error deleting existing backup file:",e)}try{await A(n,o),await t.rename(n,i)}catch(e){console.error("[convertFileToBackup] Error renaming file to backup:",e)}}async function S(e){const t=(new TextEncoder).encode(e),o=await crypto.subtle.digest("SHA-256",t);return Array.from(new Uint8Array(o)).map((e=>e.toString(16).padStart(2,"0"))).join("")}function N(e){e="string"!=typeof e?JSON.stringify(e):e;try{e=JSON.parse(e)}catch(e){return!1}return"object"==typeof e&&null!==e}n()}catch(O){n(O)}}))}}]);
[project]
name = "omotes-simulator-core"
dynamic = ["version"]
authors = [{ name = "Michiel Tukker", email = "michiel.tukker@deltares.nl" }]
description = "Core library of the NWN simulator"
readme = "README.md"
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "numpy==1.26.0",
    "pandas==2.1.1",
    "pandapipes==0.8.4",
    "pyesdl==24.2.0",
    "dataclass-wizard==0.22.2",
    "coloredlogs==15.0.1",
    "influxdb==5.3.1",
]

[project.optional-dependencies]
dev = [
    "pip-tools~=7.3.0",
    "setuptools-git-versioning<2",
    "black~=22.1.0",
    "flake8==6.0.0",
    "Flake8-pyproject==1.2.3",
    "flake8-docstrings==1.7.0",
    "flake8-quotes==3.3.2",
    "flake8-pytest-style==1.7.2",
    "flake8-bugbear==23.9.16",
    "flake8-mock==0.4",
    "flake8-tuple==0.4.1",
    "flake8-aaa==0.16.0",
    "pytest ~=7.3.1",
    "pytest-cov ~=4.0.0",
    "bump2version==1.0.1",
    "mypy ~= 1.5.1",
    "build ~= 1.0.3",
    "sphinx==7.2.6",
    "furo==2023.9.10",
]

[project.urls]
homepage = "https://www.nwn.nu"
documentation = "https://readthedocs.org"
repository = "https://github.com/Project-OMOTES/simulator-core"
changelog = "https://github.com/Project-OMOTES/simulator-core/blob/main/CHANGELOG.md"

[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools ~= 69.0.3",
    "wheel ~= 0.40.0",
    "setuptools-git-versioning<2",
]

[tool.setuptools-git-versioning]
enabled = true
version_file = "VERSION"
count_commits_from_version_file = true
dev_template = "{tag}.dev{ccount}"
dirty_template = "{tag}.dev{ccount}"


# [tool.setuptools]
# packages = ["src/simulator_core"]

[tool.pytest.ini_options]
addopts = "--cov=simulator_core --cov-report html --cov-report term-missing --cov-fail-under 80"
testpaths = ["unit_test"]

[tool.coverage.run]
source = ["src"]

[tool.flake8]
max-line-length = 100
count = true
ignore = [
    'Q000',  # Remove bad quotes
    'D401',  # Docstring First line should be imperative
    'E203',  # Space before colon (not PEP-8 compliant, and conflicts with black)
    'C408',  # Suggestion to use dict() over {}
    'W503',  # Starting lines with operators.
    'PT009', # use a regular assert instead of unittest-style '{assertion}'
    'AAA06', # Comment in Act block
]
exclude = ['.venv/*', 'venv/*', 'doc/*']
per-file-ignores = ['__init__.py:F401', 'unit_test/*:D100']

[tool.black]
line-length = 100

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true
follow_imports_for_stubs = true
disable_error_code = ['union-attr', 'abstract']
exclude = ['.venv/*', 'venv/*', 'doc/*', 'ci/*']

# mypy per-module options:
[[tool.mypy.overrides]]
module = "unit_test.*"
check_untyped_defs = true
ignore_missing_imports = true

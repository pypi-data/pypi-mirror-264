# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: release-1.29
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class V1CustomResourceSubresourceScale(BaseModel):
    """
    CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.  # noqa: E501
    """
    label_selector_path: Optional[StrictStr] = Field(default=None, alias="labelSelectorPath", description="labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.")
    spec_replicas_path: StrictStr = Field(..., alias="specReplicasPath", description="specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.")
    status_replicas_path: StrictStr = Field(..., alias="statusReplicasPath", description="statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.")
    __properties = ["labelSelectorPath", "specReplicasPath", "statusReplicasPath"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> V1CustomResourceSubresourceScale:
        """Create an instance of V1CustomResourceSubresourceScale from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> V1CustomResourceSubresourceScale:
        """Create an instance of V1CustomResourceSubresourceScale from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return V1CustomResourceSubresourceScale.parse_obj(obj)

        _obj = V1CustomResourceSubresourceScale.parse_obj({
            "label_selector_path": obj.get("labelSelectorPath"),
            "spec_replicas_path": obj.get("specReplicasPath"),
            "status_replicas_path": obj.get("statusReplicasPath")
        })
        return _obj



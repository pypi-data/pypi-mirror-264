{"version":3,"file":"main.LinoWebCam_LinoDialog.ffb31b895fcd32311f2a.js","mappings":"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","sources":["webpack://lino_react/./lino_react/react/components/LinoComponentUtils.jsx","webpack://lino_react/./lino_react/react/components/LinoWebCam.tsx"],"sourcesContent":["export const name = \"LinoComponentUtils\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { RegisterImportPool, getExReady, Component, DataContextType } from \"./Base\";\n\nimport * as constants from \"./constants\";\n\n\nlet ex; const exModulePromises = ex = {\n    classNames: import(/* webpackChunkName: \"classNames_LinoComponentUtils\" */\"classnames\"),\n    queryString: import(/* webpackChunkName: \"queryString_LinoComponentUtils\" */\"query-string\"),\n    prDropdown: import(/* webpackChunkName: \"prDropdown_LinoComponentUtils\" */\"primereact/dropdown\"),\n    prInputText: import(/* webpackChunkName: \"prInputText_LinoComponentUtils\" */\"primereact/inputtext\"),\n}\nRegisterImportPool(ex);\n\n\nfunction messageInterceptor(elem) {\n    return (event) => {\n        if (event.data.hasOwnProperty('master_data')) {\n            if (elem.props[constants.URL_PARAM_WINDOW_TYPE] !== constants.WINDOW_TYPE_TABLE && Object.keys(event.data.master_data).includes(elem.props.elem.name)) {\n                elem.setState({value : event.data.master_data[elem.props.elem.name]});\n            }\n        }\n    }\n}\n\nexport function maintainTableWidth(elem, count) {\n    let ctx;\n    if (elem !== undefined) ctx = elem\n    else ctx = this;\n    let keys = Object.keys(ctx.flexs),\n        fo_conditional = count !== undefined ? keys.length === count : keys.length > 1;\n    if (fo_conditional) {\n        keys.forEach(key => {\n            var tbl = document.getElementById(key)\n                .getElementsByClassName('p-datatable');\n            if (tbl.length === 1) {\n                tbl = tbl[0]\n                let width = tbl.getBoundingClientRect().width / document\n                    .getElementsByClassName('layout-topbar')[0]\n                    .getBoundingClientRect().width;\n                if (width > ctx.flexs[key]) {\n                    Array.from(tbl.querySelectorAll(\n                        '.p-datatable table')).forEach(el => {\n                            if (Array.from(el.classList).join(' ')\n                                .includes('p-datatable')) el.style\n                                    .setProperty('table-layout', 'auto');\n                        });\n                }\n            }\n        });\n    }\n}\n\nexport const Labeled = (props) => {\n    const localEx = getExReady(ex, ['classNames']);\n    let label = props.label || props.elem.label;\n    return !localEx.ready ? null : <React.Fragment>\n        {!props.hide_label && label && <React.Fragment>\n            <label\n                className={localEx.classNames.default(\n                    \"l-label\",\n                    {\"l-label--unfilled\": !props.isFilled},\n                )}\n                title={\n                    Object.assign({}, props.elem.value || {}).quicktip\n                    || props.elem.help_text}>{label}:</label>\n            {props.helpText\n                && <span style={{float: 'right', cursor: 'pointer'}}\n                title={props.helpText}>?</span>}\n            <br/>\n        </React.Fragment>}\n        {props.children}\n    </React.Fragment>\n}\n\n\nLabeled.propTypes = {\n    label: PropTypes.string,\n    elem: PropTypes.object.isRequired,\n    hide_label: PropTypes.bool,\n    isFilled: PropTypes.bool,\n    helpText: PropTypes.string,\n    children: PropTypes.element.isRequired,\n}\nLabeled.defaultProps = {\n    hide_label: false,\n    isFilled: false,\n}\n\n\nexport class ABCComponent {\n    static getValueByName({name, props, context}) {\n        if (props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_PARAMS)\n            return context.param_values[name];\n        return props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? context.rows[props.column.rowIndex][name]\n            : props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_CARDS\n                ? context[name] : context.data[name];\n    }\n}\n\n\nexport class LeafComponentBase extends Component {\n    static requiredModules = [\"classNames\"];\n    static iPool = ex;\n    static contextType = DataContextType;\n    static propTypesFromLinoLayout = {\n        column: PropTypes.object,\n        editing_mode: PropTypes.bool,\n        hide_label: PropTypes.bool,\n        [constants.URL_PARAM_WINDOW_TYPE]: PropTypes.oneOf([\n            constants.WINDOW_TYPE_TABLE,\n            constants.WINDOW_TYPE_DETAIL,\n            constants.WINDOW_TYPE_CARDS,\n            constants.WINDOW_TYPE_GALLERIA,\n            constants.WINDOW_TYPE_INSERT,\n            constants.WINDOW_TYPE_PARAMS,\n            constants.WINDOW_TYPE_UNKNOWN,\n        ]),\n        tabIndex: PropTypes.number.isRequired,\n    }\n\n    static propTypes = {\n        ...LeafComponentBase.propTypesFromLinoLayout,\n        elem: PropTypes.object.isRequired,\n        urlParams: PropTypes.object.isRequired,\n    }\n\n    static defaultProps = {\n        editing_mode: false,\n        hide_label: false,\n        [constants.URL_PARAM_WINDOW_TYPE]: constants.WINDOW_TYPE_UNKNOWN,\n    }\n\n    constructor(props) {\n        super(props);\n        this.wrapperClasses = []\n        this.dataKey = props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? props.elem.fields_index : props.elem.name;\n        this.upController = props.urlParams.controller;\n\n        this.filled = this.filled.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.getValueByName = this.getValueByName.bind(this);\n        this.innerHTML = this.innerHTML.bind(this);\n        this.setLeafRef = this.setLeafRef.bind(this);\n    }\n\n    filled = () => (![\"\", null, undefined].includes(this.getValue()));\n\n    getValueByName(name) {\n        return ABCComponent.getValueByName({\n            name: name, props: this.props, context: this.context});\n    }\n\n    getValue() {\n        return this.getValueByName(this.dataKey);\n    }\n\n    innerHTML(dangerous, style={}) {\n        let v = this.getValue() || \"\\u00a0\";\n        if (v instanceof Object) v = JSON.stringify(v);\n        if (dangerous) {\n            return <div style={style} dangerouslySetInnerHTML={{__html: v}}/>\n        } else {\n            return <div style={style}>{v}</div>\n        }\n    }\n\n    setLeafRef({input=false, type=\"\"} = {}) {\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL)\n            this.upController.dataContext.setLeafRef({\n                name: type === 'slave' ? this.actorID\n                    : this.props.elem.name, ref: this, input: input, type: type});\n    }\n}\n\n\nexport class LeafComponentDelayedValue extends LeafComponentBase {\n    static requiredModules = [\"queryString\"].concat(LeafComponentBase.requiredModules);\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...this.state, value: null, data_url: null,\n            mk: props.urlParams.pk,\n            mt: this.upController.static.actorData.content_type\n        }\n        this.actorID = props.elem.actor_id || (props.elem.name.includes('.')\n            ? props.elem.name : `${props.urlParams.packId}.${props.elem.name}`);\n\n        this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n        this.getData = this.getData.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    async prepare() {\n        await super.prepare();\n        let val = super.getValue();\n        if (!this.upController.filled(val)) return;\n        this.delayed = val.hasOwnProperty('delayed_value_url');\n    }\n\n    onReady() {\n        let val = super.getValue();\n        if (this.delayed) {\n            this.setLeafRef({type: \"slave\"});\n            this.getData(val.delayed_value_url);\n            this.upController.globals.panels[this.actorID] = this;\n        } else {\n            this.setState({value: val});\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (!this.delayed) return this.state.value !== super.getValue();\n        return this.state.value !== nextState.value || (this.state.value !== null &&\n            super.getValue().delayed_value_url !== this.state.data_url);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.delayed) {\n            if (this.state.data_url !== super.getValue().delayed_value_url) {\n                this.setState({value: null});\n                this.update();\n            }\n        } else this.setState({value: super.getValue()});\n    }\n\n    componentWillUnmount() {\n        delete this.upController.globals.panels[this.actorID];\n    }\n\n    getValue() {\n        return this.state.value;\n    }\n\n    getData(data_url) {\n        this.upController.actionHandler.silentFetch({\n            path: `${data_url}?${this.ex.queryString.default.stringify(this.upController.actionHandler.defaultStaticParams())}`\n        }).then((data) => {\n            this.setState({value: data.data, data_url: data_url});\n        });\n    }\n\n    liveUpdate = (params) => {\n        if (params.mk === null ||\n            (params.mk === this.state.mk && params.mt === this.state.mt)\n        ) this.update();\n    }\n\n    update() {\n        this.getData(super.getValue().delayed_value_url);\n    }\n}\n\n\nexport class LeafComponentInput extends LeafComponentBase {\n    static requiredModules = [\"prInputText\"].concat(LeafComponentBase.requiredModules);\n    constructor(props) {\n        super(props);\n        this.styleClasses = [\n            \"disabled-input\",\n            \"l-card\",\n            \"unsaved-modification\",\n        ]\n\n        this.componentWillUnmount = this.componentWillUnmount.bind(this);\n\n        this.disabled = this.disabled.bind(this);\n        this.filled = this.filled.bind(this);\n        this.focus = this.focus.bind(this);\n        this.getCellStyleClasses = this.getCellStyleClasses.bind(this);\n        this.getInput = this.getInput.bind(this);\n        this.onChangeUpdate = this.onChangeUpdate.bind(this);\n        this.onInputRef = this.onInputRef.bind(this);\n        this.onRef = this.onRef.bind(this);\n        this.setCellStyle = this.setCellStyle.bind(this);\n        this.submit = this.submit.bind(this);\n        this.tabIndexMatch = this.tabIndexMatch.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    async prepare() {\n        this.inputState = {\n            inputComponent: this.ex.prInputText.InputText,\n            inputOnly: false,\n            inputProps: {},\n            onChangeUpdateAssert: (event) => (true),\n            postOnChange: (event) => (null),\n        }\n        window.addEventListener('message', messageInterceptor(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('message', messageInterceptor(this));\n    }\n\n    disabled() {\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_CARDS)\n            return true;\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_PARAMS)\n            return false;\n        if (!this.props.elem.editable) return true;\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n            let row = this.context.rows[this.props.column.rowIndex],\n                last_item = row[row.length - 1];\n\n            // No meta, assume not disabled;\n            if (!last_item || !last_item.meta) return false;\n            // disable_editing set to true;\n            if (row[row.length - 2]) return true;\n            // check name in the disabled_fields meta;\n            return row[row.length - 3][this.props.elem.name] || false;\n        } else {\n            if (this.context.data.disable_editing) return true;\n            return this.context.data.disabled_fields[this.props.elem.name] || false;\n        }\n    }\n\n    focus() {\n        let ref = this.inputEl;\n        if (ref.focus) ref.focus()\n        else if (ref.focusInput) ref.focusInput.focus()\n        else if (ref.inputRef) ref.inputRef.current.focus()\n    }\n\n    getCellStyleClasses() {\n        let styleClasses = [];\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n            if (this.context.modifiedRows[this.props.column.rowIndex].includes(\n                this.props.elem.fields_index\n            )) {\n                styleClasses.push(\"unsaved-modification\");\n            }\n        } else {\n            styleClasses.push('l-card');\n            if (this.props[constants.URL_PARAM_WINDOW_TYPE] !== constants.WINDOW_TYPE_CARDS) {\n                if (this.disabled()) styleClasses.push(\"disabled-input\")\n                else if (this.context.modified.includes(this.props.elem.name))\n                    styleClasses.push(\"unsaved-modification\");\n            }\n        }\n        return styleClasses;\n    }\n\n    getInput() {\n        return <this.inputState.inputComponent\n            autoFocus={this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE ? true : undefined}\n            onChange={(e) => {\n                if (!this.inputState.onChangeUpdateAssert(e)) return;\n                this.onChangeUpdate(e);\n                this.inputState.postOnChange(e);\n            }}\n            ref={this.onInputRef}\n            style={{width: \"100%\"}}\n            tabIndex={this.props.tabIndex}\n            value={this.getValue() || \"\"}\n            {...this.inputState.inputProps}/>;\n    }\n\n    onChangeUpdate(e) {\n        this.update({[this.dataKey]: e.target.value});\n        this.setState({});\n    }\n\n    onInputRef(ref) {\n        this.inputEl = ref;\n        if (ref && this.tabIndexMatch()) this.focus();\n    }\n\n    onKeyDown = (event) => null;\n\n    onRef(ref) {\n        const onClick = () => {\n            this.container.onclick = (event) => {\n                if (!this.disabled()) {\n                    Object.assign(this.upController.globals, {\n                        currentInputRowIndex: Object.assign({rowIndex: 0}, this.props.column).rowIndex,\n                        currentInputTabIndex: this.props.tabIndex,\n                        currentInputWindowType: this.props[constants.URL_PARAM_WINDOW_TYPE],\n                        currentInputAHRefName: this.upController.actionHandler.refName,\n                    });\n                    if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL\n                        && !this.props.editing_mode\n                    ) this.upController.history.replaceState({editing_mode: true});\n                }\n            }\n        }\n        if (ref) {\n            this.container = ref;\n            if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n                this.container = ref.closest(\"td\");\n                onClick();\n            }\n            else if (\n                this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL\n            ) onClick();\n        }\n        this.setCellStyle(this.container);\n    }\n\n    setCellStyle(ref) {\n        if (ref) {\n            let classes = this.getCellStyleClasses();\n            this.styleClasses.forEach(item => {ref.classList.remove(item)});\n            classes.forEach(item => {ref.classList.add(item)});\n        }\n    }\n\n    submit() {\n        this.upController.actionHandler.submit({\n            cellInfo: {rowIndex: this.props.column.rowIndex}});\n    }\n\n    tabIndexMatch() {\n        if (\n            this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE &&\n            this.props.column.rowIndex !== this.upController.globals.currentInputRowIndex\n        ) return false;\n        if (\n            this.props[constants.URL_PARAM_WINDOW_TYPE] === this.upController.globals.currentInputWindowType &&\n            this.upController.actionHandler.refName === this.upController.globals.currentInputAHRefName &&\n            this.props.tabIndex === this.upController.globals.currentInputTabIndex\n        ) return true;\n        return false;\n    }\n\n    update(values) {\n        this.upController.actionHandler.update({\n            values: values, elem: this.props.elem, col: this.props.column,\n            windowType: this.props[constants.URL_PARAM_WINDOW_TYPE]});\n    }\n\n    render() {\n        if (!this.state.ready) return null;\n        if (this.container) this.setCellStyle(this.container);\n        return <Labeled {...this.props} elem={this.props.elem} isFilled={this.filled()}>\n            <div\n                className={this.ex.classNames.default(this.wrapperClasses)}\n                onKeyDown={this.onKeyDown}\n                ref={this.onRef}>\n                    {this.inputState.inputOnly ? this.getInput() :\n                        this.props.editing_mode && !this.disabled() ?\n                            this.getInput() : this.innerHTML()}\n            </div>\n        </Labeled>\n    }\n}\n\n\nexport class LeafComponentInputChoices extends LeafComponentInput {\n    static requiredModules = [\"prDropdown\"].concat(LeafComponentInput.requiredModules);\n    constructor(props) {\n        super(props);\n        this.wrapperClasses.push(\"l-ChoiceListFieldElement\");\n        this.state = {\n            ...this.state,\n            hidden_value: null\n        }\n\n        this.dataKeyHidden = props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? props.elem.fields_index_hidden\n            : props.elem.name + \"Hidden\";\n\n        this.getInput = this.getInput.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.innerHTML = this.innerHTML.bind(this);\n    }\n\n    getValue() {\n        return {\n            text: super.getValue(),\n            value: this.getValueByName(this.dataKeyHidden)};\n    }\n\n    getInput() {\n        return <this.ex.prDropdown.Dropdown\n            onChange={(e) => {\n                if (e.originalEvent.ctrlKey || e.originalEvent.altKey) return;\n                this.update({[this.dataKey]: e.value,\n                    [this.dataKeyHidden]: e.value});\n                    this.setState({});\n            }}\n            optionLabel=\"text\"\n            options={this.options}\n            ref={this.onInputRef}\n            showClear={this.props.elem.field_options.allowBlank}\n            style={{width: \"100%\"}}\n            tabIndex={this.props.tabIndex}\n            value={this.getValue().value}/>\n    }\n\n    innerHTML() {\n        let v = super.getValue() || \"\\u00a0\";\n        return <div style={{whiteSpace: \"nowrap\"}}>{v}</div>\n    }\n}\n","// LinoWebCam.tsx\n/** @module LinoWebCam */\n\nexport const name: string = \"LinoWebCam\";\n\n// @ts-ignore\nimport * as React from 'react';\n// @ts-ignore\nimport PropTypes from 'prop-types';\nimport * as t from './types';\nimport { RegisterImportPool, getExReady, URLContextType } from \"./Base\";\n\n// @ts-ignore\nimport Webcam from \"react-webcam\";\n\nlet ex; const exModulePromises = ex = {\n    // @ts-ignore\n    prButton: import(/* webpackChunkName: \"prButton_LinoWebCam\" */\"primereact/button\"),\n    // @ts-ignore\n    prOverlayPanel: import(/* webpackChunkName: \"prOverlayPanel_LinoWebCam\" */\"primereact/overlaypanel\"),\n    // @ts-ignore\n    prInputNumber: import(/* webpackChunkName: \"prInputNumber_LinoWebCam\" */\"primereact/inputnumber\"),\n    // @ts-ignore\n    prInputSwitch: import(/* webpackChunkName: \"prInputSwitch_LinoWebCam\" */\"primereact/inputswitch\"),\n    // @ts-ignore\n    lcu: import(/* webpackChunkName: \"LinoComponentUtils_LinoWebCam\" */\"./LinoComponentUtils\"),\n}\nRegisterImportPool(ex);\n\ntype WebcamState = {\n    err_msg?: null | string;\n    deviceId?: null | string;\n    devices?: string[];\n}\n\ntype WCReferences = {\n    capture?: React.MouseEventHandler<HTMLElement>;\n    props?: LinoWebCamProps;\n    self?: CamController;\n    setState?: Function;\n    state?: WebcamState;\n    switchCamera?: React.MouseEventHandler<HTMLElement>;\n    webcamRef?: React.RefObject<Webcam>;\n}\n\ninterface CamController {\n    buildMediaConstraints(): MediaTrackConstraints;\n    mediaTrackConstraints: MediaTrackConstraints;\n    store: WCReferences;\n    settings: t.WebcamSettings;\n    settingsMod: t.WebcamSettings;\n}\n\nclass CamController implements CamController {\n    static buildReferences = (store: WCReferences): WCReferences => {\n        store.webcamRef = React.useRef(null);\n        store.capture = React.useCallback(\n            (event) => {\n                store.props.captureDone(store.webcamRef.current.getScreenshot());\n            },\n        [store.webcamRef]);\n\n        const [state, setState] = React.useState<WebcamState>({\n            err_msg: null, deviceId: null, devices: []});\n\n        store.state = state;\n        store.setState = React.useCallback((st: WebcamState) =>\n            setState((old: WebcamState) => Object.assign({}, old, st)), []);\n\n        store.switchCamera = React.useCallback(\n            event => {\n                let i = (state.devices.indexOf(state.deviceId) + 1) % state.devices.length;\n                store.setState({deviceId: state.devices[i]});\n            },\n        []);\n        return store;\n    }\n\n    constructor(store: WCReferences) {\n        this.store = store;\n        this.buildMediaConstraints();\n    }\n\n    buildMediaConstraints(): MediaTrackConstraints {\n        const constraints: MediaTrackConstraints = {};\n        this.settings = window.App.getSettings().webcam;\n        if (this.settings !== undefined) {\n            constraints.height = this.settings.height;\n            constraints.width = this.settings.width;\n        } else {\n            constraints.height = this.store.props.height * devicePixelRatio;\n            constraints.width = this.store.props.width * devicePixelRatio;\n            this.settings = Object.assign({}, constraints as t.WebcamSettings, {pixelRatio: devicePixelRatio, mirrored: true});\n            window.App.setSettings({webcam: this.settings});\n        }\n        this.settingsMod = {...this.settings};\n        if (this.store.state.deviceId) constraints.deviceId = this.store.state.deviceId\n        else constraints.facingMode = \"environment\";\n        this.mediaTrackConstraints = constraints;\n        return constraints;\n    }\n}\n\ntype LinoWebCamProps = {\n    captureDone: (data: string) => void;\n    height: number;\n    width: number;\n}\n\ntype CamSettingsProps = {CC: CamController};\n\nconst CamSettings: React.FC<CamSettingsProps> = (props) => {\n    const {settings, settingsMod} = props.CC;\n    const [mirrored, setMirrored] = React.useState<boolean>(settings.mirrored);\n    const localEx = getExReady(ex, [\"prInputNumber\", \"prInputSwitch\", \"lcu\"]);\n    const getInput = React.useCallback(\n        ({label, max = null, min, onValueChange, suffix, value}) => (<div>\n            <localEx.lcu.Labeled elem={{label: label}}>\n                <localEx.prInputNumber.InputNumber buttonLayout=\"horizontal\"\n                    max={max} min={min} onValueChange={onValueChange}\n                    showButtons={true} suffix={suffix} value={value}/>\n            </localEx.lcu.Labeled></div>), [localEx]);\n    return !localEx.ready ? null : <>\n        {getInput({label: 'Height (# > 512)', max: props.CC.store.props.height,\n            min: 512, onValueChange: (e) => Object.assign(settingsMod,\n                {height: e.value * settingsMod.pixelRatio}),\n            suffix: 'px', value: settings.height / settings.pixelRatio})}\n        <br/>\n        {getInput({label: 'Width (# > 512)', max: props.CC.store.props.width,\n            min: 512, onValueChange: (e) => Object.assign(settingsMod,\n                {width: e.value * settingsMod.pixelRatio}),\n            suffix: 'px', value: settings.width / settings.pixelRatio})}\n        <br/>\n        {getInput({label: 'Pixel ratio (# > 1)', min: 1, onValueChange: (e) => {\n                Object.assign(settingsMod, {\n                    height: (settingsMod.height / settingsMod.pixelRatio) * e.value,\n                    width: (settingsMod.width / settingsMod.pixelRatio) * e.value,\n                    pixelRatio: e.value});\n            }, suffix: 'dpr', value: settings.pixelRatio})}\n        <br/>\n        <div>\n            <localEx.lcu.Labeled elem={{label: \"Mirrored\"}}>\n                <localEx.prInputSwitch.InputSwitch\n                    checked={mirrored}\n                    onChange={e => {\n                        setMirrored(e.value);\n                        Object.assign(settingsMod, {mirrored: e.value});\n                    }}/>\n            </localEx.lcu.Labeled>\n        </div>\n    </>\n};CamSettings.propTypes = {CC: PropTypes.instanceOf(CamController).isRequired};\n\ntype CamActionsProps = {CC: CamController};\n\nconst CamActions: React.FC<CamActionsProps> = (props) => {\n    const opRef = React.useRef(null);\n    const buttonStyle = {background: \"white\", color: \"black\",\n        borderRadius: \"50%\", width: \"5ch\", height: \"5ch\", margin: \"5px\"};\n    const localEx = getExReady(ex, [\"prButton\", \"prOverlayPanel\"]);\n    return !localEx.ready ? null : <><localEx.prButton.Button\n        icon=\"pi pi-camera\"\n        onClick={props.CC.store.capture}\n        style={buttonStyle}/>\n    {props.CC.store.state.devices.length > 1 &&\n        <localEx.prButton.Button\n            icon=\"pi pi-undo\"\n            onClick={props.CC.store.switchCamera}\n            style={buttonStyle}/>}\n    <localEx.prButton.Button\n        icon=\"pi pi-cog\"\n        onClick={e => opRef.current.toggle(e)}\n        style={buttonStyle}/>\n    <div onKeyDown={e => e.stopPropagation()}>\n        <localEx.prOverlayPanel.OverlayPanel\n            onHide={e => {\n                // @ts-ignore\n                document.activeElement.blur();\n                window.App.setSettings({webcam: props.CC.settingsMod});\n                props.CC.buildMediaConstraints();\n                props.CC.store.setState({});\n            }}\n            onShow={e => opRef.current.align()}\n            ref={opRef}\n            showCloseIcon={true}>\n            <CamSettings CC={props.CC}/>\n        </localEx.prOverlayPanel.OverlayPanel>\n    </div></>\n};CamActions.propTypes = {CC: PropTypes.instanceOf(CamController).isRequired};\n\nexport const LinoWebCam: React.FC = (props: LinoWebCamProps) => {\n    const store: React.RefObject<WCReferences> = React.useRef({props: props});\n    CamController.buildReferences(store.current);\n\n    const { state, setState } = store.current;\n\n    React.useEffect(() => {\n        // @ts-ignore\n        document.activeElement.blur();\n        store.current.self = new CamController(store.current);\n        navigator.mediaDevices.enumerateDevices().then(devs => setState(\n            {devices: devs.filter(\n                ({kind}) => kind === \"videoinput\").map(d => d.deviceId)}));\n    }, []);\n\n    const { self } = store.current;\n\n    return !state.devices.length ? null : <>\n        <div style={{position: 'absolute'}}>{state.err_msg}</div>\n        <Webcam\n            audio={false}\n            forceScreenshotSourceSize={true}\n            height={self.settings.height / self.settings.pixelRatio}\n            mirrored={self.settings.mirrored}\n            onUserMedia={uM => {\n                if (state.deviceId === null)\n                    setState({deviceId: uM.getVideoTracks()[0].getSettings().deviceId})}}\n            onUserMediaError={exempt => {\n                if (state.err_msg === null) setState({err_msg:\n                    \"Please allow camera access to take a photo.\"})}}\n            ref={store.current.webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            videoConstraints={self.mediaTrackConstraints}\n            width={self.settings.width / self.settings.pixelRatio}\n            />\n        <div\n            style={{position: \"absolute\", bottom: \"40px\", left: \"50%\",\n                transform: \"translate(-50%, 0)\"}}>\n            <CamActions CC={self}/>\n        </div>\n    </>\n}\n\n\nLinoWebCam.propTypes = {\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    captureDone: PropTypes.func.isRequired,\n}\n"],"names":["name","ex","classNames","queryString","prDropdown","prInputText","messageInterceptor","elem","event","data","hasOwnProperty","props","constants","Object","keys","master_data","includes","setState","value","maintainTableWidth","count","ctx","undefined","this","flexs","length","forEach","key","tbl","document","getElementById","getElementsByClassName","getBoundingClientRect","width","Array","from","querySelectorAll","el","classList","join","style","setProperty","RegisterImportPool","Labeled","localEx","getExReady","label","ready","_jsxs","React","children","hide_label","className","default","isFilled","title","assign","quicktip","help_text","helpText","_jsx","float","cursor","propTypes","PropTypes","isRequired","defaultProps","ABCComponent","getValueByName","context","param_values","rows","column","rowIndex","LeafComponentBase","Component","constructor","super","filled","getValue","wrapperClasses","dataKey","fields_index","upController","urlParams","controller","bind","innerHTML","setLeafRef","dangerous","v","JSON","stringify","dangerouslySetInnerHTML","__html","input","type","dataContext","actorID","ref","requiredModules","iPool","contextType","DataContextType","propTypesFromLinoLayout","editing_mode","tabIndex","LeafComponentDelayedValue","liveUpdate","params","mk","state","mt","update","data_url","pk","static","actorData","content_type","actor_id","packId","shouldComponentUpdate","getData","prepare","val","delayed","onReady","delayed_value_url","globals","panels","nextProps","nextState","componentDidUpdate","prevProps","prevState","componentWillUnmount","actionHandler","silentFetch","path","defaultStaticParams","then","concat","LeafComponentInput","onKeyDown","styleClasses","disabled","focus","getCellStyleClasses","getInput","onChangeUpdate","onInputRef","onRef","setCellStyle","submit","tabIndexMatch","inputState","inputComponent","InputText","inputOnly","inputProps","onChangeUpdateAssert","postOnChange","window","addEventListener","removeEventListener","editable","row","last_item","meta","disable_editing","disabled_fields","inputEl","focusInput","inputRef","current","modifiedRows","push","modified","autoFocus","onChange","e","target","onClick","container","onclick","currentInputRowIndex","currentInputTabIndex","currentInputWindowType","currentInputAHRefName","refName","history","replaceState","closest","classes","item","remove","add","cellInfo","values","col","windowType","render","LeafComponentInputChoices","hidden_value","dataKeyHidden","fields_index_hidden","text","Dropdown","originalEvent","ctrlKey","altKey","optionLabel","options","showClear","field_options","allowBlank","whiteSpace","prButton","prOverlayPanel","prInputNumber","prInputSwitch","lcu","CamController","store","buildMediaConstraints","constraints","settings","App","getSettings","webcam","height","devicePixelRatio","pixelRatio","mirrored","setSettings","settingsMod","deviceId","facingMode","mediaTrackConstraints","buildReferences","webcamRef","useRef","capture","useCallback","captureDone","getScreenshot","useState","err_msg","devices","st","old","switchCamera","i","indexOf","CamSettings","CC","setMirrored","max","min","onValueChange","suffix","InputNumber","buttonLayout","showButtons","InputSwitch","checked","instanceOf","CamActions","opRef","buttonStyle","background","color","borderRadius","margin","Button","icon","toggle","stopPropagation","OverlayPanel","onHide","activeElement","blur","onShow","align","showCloseIcon","LinoWebCam","useEffect","self","navigator","mediaDevices","enumerateDevices","devs","filter","kind","map","d","position","audio","forceScreenshotSourceSize","onUserMedia","uM","getVideoTracks","onUserMediaError","exempt","screenshotFormat","videoConstraints","bottom","left","transform","number","func"],"sourceRoot":""}

import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.lang
import typing



class DoubleCloneable(java.lang.Cloneable):
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, double: float): ...
    def clone(self) -> 'DoubleCloneable': ...
    def doubleValue(self) -> float: ...
    def set(self, double: float) -> None: ...

class FileSystemSettings:
    root: typing.ClassVar[str] = ...
    tempDir: typing.ClassVar[str] = ...
    defaultFileTreeRoot: typing.ClassVar[str] = ...
    defaultDatabaseRootRoot: typing.ClassVar[str] = ...
    relativeFilePath: typing.ClassVar[str] = ...
    fileExtension: typing.ClassVar[str] = ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("jneqsim.neqsim.util.util")``.

    DoubleCloneable: typing.Type[DoubleCloneable]
    FileSystemSettings: typing.Type[FileSystemSettings]

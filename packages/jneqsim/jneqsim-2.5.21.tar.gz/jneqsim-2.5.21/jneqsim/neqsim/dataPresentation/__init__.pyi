
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.lang
import jpype
import jneqsim.neqsim.dataPresentation.JFreeChart
import jneqsim.neqsim.dataPresentation.fileHandeling
import typing



class SampleXYDataSource:
    def __init__(self, doubleArray: typing.Union[typing.List[typing.MutableSequence[float]], jpype.JArray], stringArray: typing.Union[typing.List[str], jpype.JArray], string2: str, string3: str, string4: str): ...
    def getItemCount(self, int: int) -> int: ...
    def getSeriesCount(self) -> int: ...
    def getSeriesName(self, int: int) -> str: ...
    def getXValue(self, int: int, int2: int) -> java.lang.Number: ...
    def getYValue(self, int: int, int2: int) -> java.lang.Number: ...

class dataHandeling:
    def __init__(self): ...
    def getItemCount(self, int: int) -> int: ...
    def getLegendItemCount(self) -> int: ...
    def getLegendItemLabels(self) -> typing.MutableSequence[str]: ...
    def getSeriesCount(self) -> int: ...
    def getSeriesName(self, int: int) -> str: ...
    def getXValue(self, int: int, int2: int) -> java.lang.Number: ...
    def getYValue(self, int: int, int2: int) -> java.lang.Number: ...
    def printToFile(self, doubleArray: typing.Union[typing.List[typing.MutableSequence[float]], jpype.JArray], string: str) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("jneqsim.neqsim.dataPresentation")``.

    SampleXYDataSource: typing.Type[SampleXYDataSource]
    dataHandeling: typing.Type[dataHandeling]
    JFreeChart: jneqsim.neqsim.dataPresentation.JFreeChart.__module_protocol__
    fileHandeling: jneqsim.neqsim.dataPresentation.fileHandeling.__module_protocol__

# Generated by Django 5.0.1 on 2024-03-26 08:53

import django.db.models.deletion
import globlocks.blocks.block_fields.colorblock.colorblock
import globlocks.blocks.block_fields.rangeslider.rangeslider
import globlocks.fields.fontfield
import globlocks.util
import wagtail.blocks
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='MetaTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', wagtail.fields.StreamField([('meta', wagtail.blocks.StructBlock([('settings', wagtail.blocks.StructBlock([('custom_html_element', wagtail.blocks.CharBlock(label='Custom HTML Element', required=False))])), ('property_name', wagtail.blocks.CharBlock(required=False)), ('property_value', wagtail.blocks.CharBlock(required=False)), ('content', wagtail.blocks.CharBlock(required=False))]))], blank=True, null=True, verbose_name='Meta Tags')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'verbose_name': 'Meta Tags',
                'verbose_name_plural': 'Meta Tags',
            },
        ),
        migrations.CreateModel(
            name='UIImprovementSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='The title of the site (Also used as copyright label)', max_length=255, null=True, verbose_name='Title')),
                ('font', globlocks.fields.fontfield.FontField(default=dict, encoder=globlocks.util.AutoJSONEncoder, fonts=None, help_text='The font to use for the site', max=100, min=0.1, size=1, stepping=0.1, unit='em', verbose_name='Font')),
                ('styles', wagtail.fields.StreamField([('styles', wagtail.blocks.StructBlock([('primary', wagtail.blocks.StructBlock([('bg', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#007bff', help_text='The Primary background color of the block', label='Primary Background', required=True)), ('text', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Primary text color of the block', label='Primary Text', required=True)), ('bg_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#007bff', help_text='The Primary background color of the block', label='Primary Background', required=True)), ('text_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Primary text color of the block', label='Primary Text', required=True)), ('bg_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#007bff', help_text='The Primary background color of the block', label='Primary Background', required=True)), ('text_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Primary text color of the block', label='Primary Text', required=True))])), ('secondary', wagtail.blocks.StructBlock([('bg', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#6c757d', help_text='The Secondary background color of the block', label='Secondary Background', required=True)), ('text', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Secondary text color of the block', label='Secondary Text', required=True)), ('bg_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#6c757d', help_text='The Secondary background color of the block', label='Secondary Background', required=True)), ('text_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Secondary text color of the block', label='Secondary Text', required=True)), ('bg_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#6c757d', help_text='The Secondary background color of the block', label='Secondary Background', required=True)), ('text_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Secondary text color of the block', label='Secondary Text', required=True))])), ('info', wagtail.blocks.StructBlock([('bg', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#17a2b8', help_text='The Info background color of the block', label='Info Background', required=True)), ('text', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Info text color of the block', label='Info Text', required=True)), ('bg_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#17a2b8', help_text='The Info background color of the block', label='Info Background', required=True)), ('text_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Info text color of the block', label='Info Text', required=True)), ('bg_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#17a2b8', help_text='The Info background color of the block', label='Info Background', required=True)), ('text_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Info text color of the block', label='Info Text', required=True))])), ('success', wagtail.blocks.StructBlock([('bg', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#28a745', help_text='The Success background color of the block', label='Success Background', required=True)), ('text', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Success text color of the block', label='Success Text', required=True)), ('bg_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#28a745', help_text='The Success background color of the block', label='Success Background', required=True)), ('text_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Success text color of the block', label='Success Text', required=True)), ('bg_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#28a745', help_text='The Success background color of the block', label='Success Background', required=True)), ('text_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Success text color of the block', label='Success Text', required=True))])), ('warning', wagtail.blocks.StructBlock([('bg', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#ffc107', help_text='The Warning background color of the block', label='Warning Background', required=True)), ('text', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Warning text color of the block', label='Warning Text', required=True)), ('bg_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#ffc107', help_text='The Warning background color of the block', label='Warning Background', required=True)), ('text_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Warning text color of the block', label='Warning Text', required=True)), ('bg_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#ffc107', help_text='The Warning background color of the block', label='Warning Background', required=True)), ('text_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Warning text color of the block', label='Warning Text', required=True))])), ('danger', wagtail.blocks.StructBlock([('bg', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#dc3545', help_text='The Danger background color of the block', label='Danger Background', required=True)), ('text', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Danger text color of the block', label='Danger Text', required=True)), ('bg_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#dc3545', help_text='The Danger background color of the block', label='Danger Background', required=True)), ('text_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Danger text color of the block', label='Danger Text', required=True)), ('bg_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#dc3545', help_text='The Danger background color of the block', label='Danger Background', required=True)), ('text_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#FFFFFF', help_text='The Danger text color of the block', label='Danger Text', required=True))])), ('border_thickness', globlocks.blocks.block_fields.rangeslider.rangeslider.RangeSliderBlock(default=1, help_text='The thickness of the border', label='Border Thickness', max_value=10, min_value=0, required=True, unit='px')), ('border_radius', globlocks.blocks.block_fields.rangeslider.rangeslider.RangeSliderBlock(default=0, help_text='The radius of the border', label='Border Radius', max_value=50, min_value=0, required=True, unit='px')), ('link', wagtail.blocks.StructBlock([('bg', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='transparent', help_text='The Link background color of the block', label='Link Background', required=True)), ('text', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#007bff', help_text='The Link text color of the block', label='Link Text', required=True)), ('bg_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='transparent', help_text='The Link background color of the block', label='Link Background', required=True)), ('text_hover', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#007bff', help_text='The Link text color of the block', label='Link Text', required=True)), ('bg_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='transparent', help_text='The Link background color of the block', label='Link Background', required=True)), ('text_active', globlocks.blocks.block_fields.colorblock.colorblock.ColorBlock(default='#007bff', help_text='The Link text color of the block', label='Link Text', required=True))]))]))], help_text='Custom styles for the site', verbose_name='Styles')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('logo', models.ForeignKey(blank=True, help_text='The logo to use for the site', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logo')),
            ],
            options={
                'verbose_name': 'Site Setting',
                'verbose_name_plural': 'Site Settings',
            },
        ),
    ]

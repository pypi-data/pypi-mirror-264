{"version":3,"file":"lib_index_js.4fbdccf9b33fd694973e.js","mappings":";;;;;;;;;;;;;;;;;AAAA,4GAA4G;AAS9E;AAIL;AAEzB,MAAM,wBAAwB,GAAG,mBAAmB,CAAC;AAErD;;GAEG;AACH,MAAM,MAAM,GAAgC;IAC1C,EAAE,EAAE,gBAAgB;IACpB,WAAW,EAAE,4EAA4E;IACzF,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,GAAoB,EAAE,EAAE;QACjC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAErC,gCAAgC;QAChC,IAAI,IAAI,CAAC;QACT,uCAAuC;QACvC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,oIAAoI,CAAC;QACtJ,MAAM,MAAM,GAAG,IAAI,mDAAM,CAAC,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC,uDAAuD;QAE1F,MAAM,CAAC,EAAE,GAAG,0DAAQ,CAAC,WAAW,EAAE,CAAC;QACnC,MAAM,CAAC,EAAE,GAAG,cAAc,CAAC;QAE3B,8BAA8B;QAC9B,MAAM,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;QAE1C,4BAA4B;QAC5B,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC,kEAAkE;QAE9G,yEAAyE;QACzE,sBAAsB;QAEtB,sDAAsD;QACtD,yDAAyD;QACzD,2BAA2B;QAC3B,0EAA0E;QAC1E,6CAA6C;QAC7C,yBAAyB;QACzB,MAAM;QACN,IAAI;IACN,CAAC;CACF,CAAC;AAEF,iEAAe,MAAM,EAAC","sources":["webpack://ibeamer/./src/index.ts"],"sourcesContent":["// A simple jupyter lab/notebook front-end extension for writing beamer-style environments using CSS classes\n\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin,\n} from '@jupyterlab/application';\n\nimport {\n  DOMUtils\n} from '@jupyterlab/apputils';\n\nimport {\n  Widget\n} from '@lumino/widgets';\n\nconst ilambda_Anchor_CSS_CLASS = 'jp-ilambda-Anchor';\n\n/**\n * Initialization data for the iBeamer extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'ibeamer:plugin',\n  description: 'A simple .css Beamer/LaTeX Environment Extension for Jupyter Lab/Notebooks',\n  autoStart: true,\n  activate: (app: JupyterFrontEnd) => {\n    console.log('ibeamer is activated!');\n\n    // Create the ilambda logo wiget\n    var node;\n    // If the node doesn't exist, create it\n    node = document.createElement(\"div\");\n    node.innerHTML = \"<a href='https://www.lambda.joburg' target='_blank'><img src='https://lambda.joburg/assets/images/index/logo/lambda_logo.svg'></a>\";\n    const widget = new Widget({node}); // constructor for creating a widget from a DOM element\n    \n    widget.id = DOMUtils.createDomID();\n    widget.id = \"ilambda-logo\";\n\n    // provide a class for styling\n    widget.addClass(ilambda_Anchor_CSS_CLASS);\n\n    // add the widget to the DOM\n    app.shell.add(widget, 'top', {rank: 1000}); // rank - move widget to right-most position in top area panel    \n    \n    // let logos = document.getElementsByClassName(ilambda_Anchor_CSS_CLASS);\n    // console.log(logos);\n\n    // if there are multiple ilambda extensions installed,\n    // each will contribute its own logo, so do the following\n    // if (logos.length >= 2) {\n    //   // remove all the ilambda-logo widgets from the DOM, except the first\n    //   for (let i = 1; i < logos.length; i++) {\n    //     logos[i].remove();\n    //   }\n    // }\n  }\n};\n\nexport default plugin;"],"names":[],"sourceRoot":""}
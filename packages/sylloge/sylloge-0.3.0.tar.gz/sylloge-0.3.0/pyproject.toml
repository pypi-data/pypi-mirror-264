[tool.poetry]
name = "sylloge"
version = "0.3.0"
description = "Small library to simplify collecting and loading of entity alignment benchmark datasets"
authors = ["Daniel Obraczka <obraczka@informatik.uni-leipzig.de>"]
license = "MIT"
readme = "README.md"
keywords = ["entity resolution", "knowledge graph", "datasets", "entity alignment"]
classifiers = ["Development Status :: 4 - Beta", "Programming Language :: Python", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3 :: Only"]
repository = "https://github.com/dobraczka/sylloge"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/dobraczka/sylloge/issues"
"Source" = "https://github.com/dobraczka/sylloge"
"Documentation" = "https://sylloge.readthedocs.io"

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
Sphinx = {version = "^5.0.0", optional = true}
insegel = {version = "^1.3.1", optional = true}
pystow = "^0.4.6"
pandas = ">=1.0"
sphinx-automodapi = {version = "^0.14.1", optional = true}
sphinx-autodoc-typehints = {version = "^1.19.2", optional = true}
python-slugify = ">=7.0.0"
dask = ">=2022.01.0"
pyarrow = "*"
moviegraphbenchmark = "^1.1.0"
eche = "^0.2.1"


[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.9"
ruff = "^0.2.1"
mypy = "^1.8.0"
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
nox-poetry = "^1.0.3"
pytest-mock = "^3.12.0"
toml = "^0.10.2"
pyroma = "^4.2"
strawman = "*"



[tool.poetry.extras]
docs = ["sphinx", "insegel", "sphinx-automodapi", "sphinx-autodoc-typehints"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1",
]

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
ignore = ["E111", "E114", "E117", "E501", "D1", "D203", "D213", "D206", "D300", "Q000", "Q001", "Q002", "Q003", "COM812", "COM819", "ISC001","ISC002", "B905", "W191", "PLR0913", "PLR0912", "PLR2004"]
select = ["B", "C", "E", "F", "W", "B", "I", "D", "UP", "A", "C4", "T10", "ICN", "PIE", "PYI", "PT", "RET", "SIM", "ERA", "PD", "PGH", "PL", "NPY", "PERF", "RUF"]

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
markers = [
    "slow: mark test as slow"
]

from setuptools import find_packages, setup

with open("README.md", "r", encoding="utf-8") as readme_file:
    _long_description = readme_file.read()

setup(
    name="extraction_methods",
    version="1.0.2",
    description="Methods to enable the extraction of metadata.",
    author="Rhys Evans",
    url="https://github.com/cedadev/extraction-methods/",
    long_description=_long_description,
    long_description_content_type="text/markdown",
    license="BSD - See extraction_methods/LICENSE file for details",
    packages=find_packages(),
    test_suite="tests",
    package_data={"extraction_methods": ["LICENSE"]},
    install_requires=["pyyaml", "ceda-directory-tree", "tqdm", "pydantic"],
    extras_require={
        "docs": [
            "sphinx",
            "sphinx-rtd-theme",
            "elasticsearch",
            "sphinxcontrib-programoutput",
        ],
        "elasticsearch": ["elasticsearch"],
        "intake-esm": ["intake-esm"],
        "rabbitmq": ["pika"],
        "thredds": ["siphon"],
    },
    python_requires=">=3.7",
    tests_require=["pytest"],
    entry_points={
        "extraction_methods": [
            "regex = extraction_methods.plugins.regex:RegexExtract",
            "regex_assets = extraction_methods.plugins.regex_assets:RegexAssetsExtract",
            "rename_assets = extraction_methods.plugins.rename_assets:RenameAssetsExtract",
            "default = extraction_methods.plugins.default:DefaultExtract",
            "categories = extraction_methods.plugins.categories:CategoriesExtract",
            "header = extraction_methods.plugins.header.header:HeaderExtract",
            "iso19115 = extraction_methods.plugins.iso19115:ISO19115Extract",
            "xml = extraction_methods.plugins.xml:XMLExtract",
            "open_zip = extraction_methods.plugins.open_zip:ZipExtract",
            "datetime_bound_to_centroid = extraction_methods.plugins.datetime_bound_to_centroid:DatetimeBoundToCentroidExtract",
            "elasticsearch_aggregation = extraction_methods.plugins.elasticsearch_aggregation:ElasticsearchAggregationExtract",
            "json_file = extraction_methods.plugins.json_file:JsonFileExtract",
            "path_parts = extraction_methods.plugins.path_parts:PathPartsExtract",
            "os_stats = extraction_methods.plugins.os_stats:OsStatsExtract",
            "boto_stats = extraction_methods.plugins.boto_stats:BotoStatsExtract",
            "fsspec_stats = extraction_methods.plugins.fsspec_stats:FsSpecStatsExtract",
            "ceda_vocabulary = extraction_methods.plugins.ceda_vocabulary:CEDAVocabularyExtract",
            "controlled_vocabulary = extraction_methods.plugins.controlled_vocabulary:ControlledVocabularyExtract",
            "dot_seperated_str = extraction_methods.plugins.dot_seperated_str:DotSeperatedStrExtract",
            "hash = extraction_methods.plugins.hash:HashExtract",
            "basename = extraction_methods.plugins.basename:BasenameExtract",
            "ceda_observation = extraction_methods.plugins.ceda_observation:CEDAObservationExtract",
            "iso_date = extraction_methods.plugins.iso_date:ISODateExtract",
            "facet_map = extraction_methods.plugins.facet_map:FacetMapExtract",
            "bbox = extraction_methods.plugins.bbox:BboxExtract",
            "stac_bbox = extraction_methods.plugins.stac_bbox:STACBboxExtract",
            "geometry_line = extraction_methods.plugins.geometry_line:GeometryLineExtract",
            "geometry_point = extraction_methods.plugins.geometry_point:GeometryPointExtract",
            "geometry_polygon = extraction_methods.plugins.geometry_polygon:GeometryPolygonExtract",
            "geometry_to_bbox = extraction_methods.plugins.geometry_to_bbox:GeometryToBboxExtract",
            "string_join = extraction_methods.plugins.string_join:StringJoinExtract",
            "string_template = extraction_methods.plugins.string_template:StringTemplateExtract",
            "facet_prefix = extraction_methods.plugins.facet_prefix:FacetPrefixExtract",
            "remove = extraction_methods.plugins.remove:RemoveExtract",
            "general_function = extraction_methods.plugins.general_function:GeneralFunctionExtract",
            "elasticsearch_assets = extraction_methods.plugins.elasticsearch_assets:ElasticsearchAssetExtract",
            "lambda = extraction_methods.plugins.lambda:LambdaExtract",
            "netcdf = extraction_methods.plugins.netcdf:NetCDFfExtract",
            "asset_aggregator = extraction_methods.plugins.asset_aggregator:AssetAggregatorExtract",
            "intake_assets = extraction_methods.plugins.intake_esm_assets:IntakeESMAssetExtract",
        ],
        "extraction_methods.header.backends": [
            "ncml = extraction_methods.plugins.header.backends.ncml:NcMLBackend",
            "xarray = extraction_methods.plugins.header.backends.xarray:XarrayBackend",
            "cf = extraction_methods.plugins.header.backends.cf:CfBackend",
        ],
    },
)

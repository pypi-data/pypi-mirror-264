"use strict";(self.webpackChunkstreamlit_arcgis_map=self.webpackChunkstreamlit_arcgis_map||[]).push([[4536],{19196:(t,e,n)=>{n.d(e,{FB:()=>_,C:()=>A,vt:()=>O,Qy:()=>m,ui:()=>R,m7:()=>g});var o=n(97467),i=n(34761),r=n(20664),s=n(9392),h=n(43047),d=n(55855),a=n(95925);function l(t){return t?{ray:(0,a.vt)(t.ray),c0:t.c0,c1:t.c1}:{ray:(0,a.vt)(),c0:0,c1:Number.MAX_VALUE}}new o.I((()=>l()));var _,u,c,T=n(13927),f=n(75762);function O(t){return t?[(0,T.vt)(t[0]),(0,T.vt)(t[1]),(0,T.vt)(t[2]),(0,T.vt)(t[3]),(0,T.vt)(t[4]),(0,T.vt)(t[5])]:[(0,T.vt)(),(0,T.vt)(),(0,T.vt)(),(0,T.vt)(),(0,T.vt)(),(0,T.vt)()]}function m(){return[(0,s.vt)(),(0,s.vt)(),(0,s.vt)(),(0,s.vt)(),(0,s.vt)(),(0,s.vt)(),(0,s.vt)(),(0,s.vt)()]}function A(t,e){for(let n=0;n<p;n++)(0,T.C)(t[n],e[n]);return t}function R(t,e,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:F;const s=(0,i.lw)(f.Rc.get(),e,t);(0,i.B8)(s,s);for(let i=0;i<E;++i){const t=(0,h.t)(f.Km.get(),b[i],s);(0,r.s)(o[i],t[0]/t[3],t[1]/t[3],t[2]/t[3])}!function(t,e){(0,T.Cr)(e[u.FAR_BOTTOM_LEFT],e[u.NEAR_BOTTOM_LEFT],e[u.NEAR_TOP_LEFT],t[_.LEFT]),(0,T.Cr)(e[u.NEAR_BOTTOM_RIGHT],e[u.FAR_BOTTOM_RIGHT],e[u.FAR_TOP_RIGHT],t[_.RIGHT]),(0,T.Cr)(e[u.FAR_BOTTOM_LEFT],e[u.FAR_BOTTOM_RIGHT],e[u.NEAR_BOTTOM_RIGHT],t[_.BOTTOM]),(0,T.Cr)(e[u.NEAR_TOP_LEFT],e[u.NEAR_TOP_RIGHT],e[u.FAR_TOP_RIGHT],t[_.TOP]),(0,T.Cr)(e[u.NEAR_BOTTOM_LEFT],e[u.NEAR_BOTTOM_RIGHT],e[u.NEAR_TOP_RIGHT],t[_.NEAR]),(0,T.Cr)(e[u.FAR_BOTTOM_RIGHT],e[u.FAR_BOTTOM_LEFT],e[u.FAR_TOP_LEFT],t[_.FAR])}(n,o)}function g(t,e){for(let n=0;n<p;n++){const o=t[n];if(o[0]*e[0]+o[1]*e[1]+o[2]*e[2]+o[3]>=e[3])return!1}return!0}(c=_||(_={}))[c.LEFT=0]="LEFT",c[c.RIGHT=1]="RIGHT",c[c.BOTTOM=2]="BOTTOM",c[c.TOP=3]="TOP",c[c.NEAR=4]="NEAR",c[c.FAR=5]="FAR",function(t){t[t.NEAR_BOTTOM_LEFT=0]="NEAR_BOTTOM_LEFT",t[t.NEAR_BOTTOM_RIGHT=1]="NEAR_BOTTOM_RIGHT",t[t.NEAR_TOP_RIGHT=2]="NEAR_TOP_RIGHT",t[t.NEAR_TOP_LEFT=3]="NEAR_TOP_LEFT",t[t.FAR_BOTTOM_LEFT=4]="FAR_BOTTOM_LEFT",t[t.FAR_BOTTOM_RIGHT=5]="FAR_BOTTOM_RIGHT",t[t.FAR_TOP_RIGHT=6]="FAR_TOP_RIGHT",t[t.FAR_TOP_LEFT=7]="FAR_TOP_LEFT"}(u||(u={}));u.FAR_BOTTOM_RIGHT,u.NEAR_BOTTOM_RIGHT,u.NEAR_BOTTOM_LEFT,u.FAR_BOTTOM_LEFT,u.NEAR_BOTTOM_LEFT,u.NEAR_BOTTOM_RIGHT,u.NEAR_TOP_RIGHT,u.NEAR_TOP_LEFT,u.FAR_BOTTOM_RIGHT,u.FAR_BOTTOM_LEFT,u.FAR_TOP_LEFT,u.FAR_TOP_RIGHT,u.NEAR_BOTTOM_RIGHT,u.FAR_BOTTOM_RIGHT,u.FAR_TOP_RIGHT,u.NEAR_TOP_RIGHT,u.FAR_BOTTOM_LEFT,u.NEAR_BOTTOM_LEFT,u.NEAR_TOP_LEFT,u.FAR_TOP_LEFT,u.FAR_TOP_LEFT,u.NEAR_TOP_LEFT,u.NEAR_TOP_RIGHT,u.FAR_TOP_RIGHT;const p=6,E=8,b=[(0,d.fA)(-1,-1,-1,1),(0,d.fA)(1,-1,-1,1),(0,d.fA)(1,1,-1,1),(0,d.fA)(-1,1,-1,1),(0,d.fA)(-1,-1,1,1),(0,d.fA)(1,-1,1,1),(0,d.fA)(1,1,1,1),(0,d.fA)(-1,1,1,1)],F=(new o.I(l),m())},94536:(t,e,n)=>{n.d(e,{A:()=>z});var o=n(3789),i=n(30015),r=n(20664),s=n(9392),h=n(19196),d=n(95925),a=n(93582),l=n(86994);class _{get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}constructor(t,e){this.objectToBoundingSphere=t,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new u,this._objectCount=0,e&&(void 0!==e.maximumObjectsPerNode&&(this._maximumObjectsPerNode=e.maximumObjectsPerNode),void 0!==e.maximumDepth&&(this._maximumDepth=e.maximumDepth))}destroy(){this._degenerateObjects.clear(),u.clearPool(),b[0]=null,S.prune(),L.prune()}add(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;this._objectCount+=e,this._grow(t,e);const n=u.acquire();for(let o=0;o<e;o++){const e=t[o];this._isDegenerate(e)?this._degenerateObjects.add(e):(n.init(this._root),this._add(e,n))}u.release(n)}remove(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this._objectCount-=t.length;const n=u.acquire();for(const o of t){const t=null!==e&&void 0!==e?e:(0,a.c)(this.objectToBoundingSphere(o),v);R(t[3])?(n.init(this._root),this._remove(o,t,n)):this._degenerateObjects.delete(o)}u.release(n),this._shrink()}update(t,e){if(!R(e[3])&&this._isDegenerate(t))return;const n=function(t){return b[0]=t,b}(t);this.remove(n,e),this.add(n)}forEachAlongRay(t,e,n){const o=(0,d.LV)(t,e);this._forEachNode(this._root,(t=>{if(!this._intersectsNode(o,t))return!1;const e=t.node;return e.terminals.forAll((t=>{this._intersectsObject(o,t)&&n(t)})),null!==e.residents&&e.residents.forAll((t=>{this._intersectsObject(o,t)&&n(t)})),!0}))}forEachAlongRayWithVerticalOffset(t,e,n,o){const i=(0,d.LV)(t,e);this._forEachNode(this._root,(t=>{if(!this._intersectsNodeWithOffset(i,t,o))return!1;const e=t.node;return e.terminals.forAll((t=>{this._intersectsObjectWithOffset(i,t,o)&&n(t)})),null!==e.residents&&e.residents.forAll((t=>{this._intersectsObjectWithOffset(i,t,o)&&n(t)})),!0}))}forEach(t){this._forEachNode(this._root,(e=>{const n=e.node;return n.terminals.forAll(t),null!==n.residents&&n.residents.forAll(t),!0})),this._degenerateObjects.forEach(t)}forEachDegenerateObject(t){this._degenerateObjects.forEach(t)}findClosest(t,e,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:()=>!0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1/0,s=1/0,d=1/0,l=null;const _=m(t,e),u=r=>{if(--i,!o(r))return;const _=this.objectToBoundingSphere(r);if(!(0,h.m7)(n,_))return;const u=A(t,e,(0,a.g)(_)),c=u-_[3],T=u+_[3];c<s&&(s=c,d=T,l=r)};return this._forEachNodeDepthOrdered(this._root,(o=>{if(i<=0||!(0,h.m7)(n,o.bounds))return!1;if((0,r.h)(N,_,o.halfSize),(0,r.g)(N,N,(0,a.g)(o.bounds)),A(t,e,N)>d)return!1;const s=o.node;return s.terminals.forAll((t=>u(t))),null!==s.residents&&s.residents.forAll((t=>u(t))),!0}),t,e),l}forEachInDepthRange(t,e,n,o,i,s,d){let l=-1/0,u=1/0;const c={setRange:t=>{n===_.DepthOrder.FRONT_TO_BACK?(l=Math.max(l,t.near),u=Math.min(u,t.far)):(l=Math.max(l,-t.far),u=Math.min(u,-t.near))}};c.setRange(o);const T=A(e,n,t),f=m(e,n),O=m(e,-n),R=t=>{if(!d(t))return;const o=this.objectToBoundingSphere(t),r=(0,a.g)(o),_=A(e,n,r)-T,f=_-o[3],O=_+o[3];f>u||O<l||!(0,h.m7)(s,o)||i(t,c)};this._forEachNodeDepthOrdered(this._root,(t=>{if(!(0,h.m7)(s,t.bounds))return!1;if((0,r.h)(N,f,t.halfSize),(0,r.g)(N,N,(0,a.g)(t.bounds)),A(e,n,N)-T>u)return!1;if((0,r.h)(N,O,t.halfSize),(0,r.g)(N,N,(0,a.g)(t.bounds)),A(e,n,N)-T<l)return!1;const o=t.node;return o.terminals.forAll((t=>R(t))),null!==o.residents&&o.residents.forAll((t=>R(t))),!0}),e,n)}forEachNode(t){this._forEachNode(this._root,(e=>t(e.node,e.bounds,e.halfSize,e.depth)))}forEachNeighbor(t,e){const n=(0,a.a)(e),o=(0,a.g)(e),i=e=>{const i=this.objectToBoundingSphere(e),s=(0,a.a)(i),h=n+s;return!((0,r.a)((0,a.g)(i),o)-h*h<=0)||t(e)};let s=!0;const h=t=>{s&&(s=i(t))};this._forEachNode(this._root,(t=>{const e=(0,a.a)(t.bounds),i=n+e;if((0,r.a)((0,a.g)(t.bounds),o)-i*i>0)return!1;const d=t.node;return d.terminals.forAll(h),s&&null!==d.residents&&d.residents.forAll(h),s})),s&&this.forEachDegenerateObject(h)}_intersectsNode(t,e){return f((0,a.g)(e.bounds),2*-e.halfSize,M),f((0,a.g)(e.bounds),2*e.halfSize,B),(0,l.O_)(t.origin,t.direction,M,B)}_intersectsNodeWithOffset(t,e,n){return f((0,a.g)(e.bounds),2*-e.halfSize,M),f((0,a.g)(e.bounds),2*e.halfSize,B),n.applyToMinMax(M,B),(0,l.O_)(t.origin,t.direction,M,B)}_intersectsObject(t,e){const n=this.objectToBoundingSphere(e);return!(n[3]>0)||(0,a.i)(n,t)}_intersectsObjectWithOffset(t,e,n){const o=this.objectToBoundingSphere(e);return!(o[3]>0)||(0,a.i)(n.applyToBoundingSphere(o),t)}_forEachNode(t,e){let n=u.acquire().init(t);const o=[n];for(;0!==o.length;){if(n=o.pop(),e(n)&&!n.isLeaf())for(let t=0;t<n.node.children.length;t++)n.node.children[t]&&o.push(u.acquire().init(n).advance(t));u.release(n)}}_forEachNodeDepthOrdered(t,e,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:_.DepthOrder.FRONT_TO_BACK,i=u.acquire().init(t);const r=[i];for(function(t,e,n){if(!L.length)for(let o=0;o<8;++o)L.push({index:0,distance:0});for(let o=0;o<8;++o){const n=g[o];L.data[o].index=o,L.data[o].distance=A(t,e,n)}L.sort(((t,e)=>t.distance-e.distance));for(let o=0;o<8;++o)n[o]=L.data[o].index}(n,o,H);0!==r.length;){if(i=r.pop(),e(i)&&!i.isLeaf())for(let t=7;t>=0;--t){const e=H[t];i.node.children[e]&&r.push(u.acquire().init(i).advance(e))}u.release(i)}}_remove(t,e,n){S.clear();const o=n.advanceTo(e,((t,e)=>{S.push(t.node),S.push(e)}))?n.node.terminals:n.node.residents;if(o.removeUnordered(t),0===o.length)for(let i=S.length-2;i>=0;i-=2){const t=S.data[i],e=S.data[i+1];if(!this._purge(t,e))break}}_nodeIsEmpty(t){if(0!==t.terminals.length)return!1;if(null!==t.residents)return 0===t.residents.length;for(let e=0;e<t.children.length;e++)if(t.children[e])return!1;return!0}_purge(t,e){return e>=0&&(t.children[e]=null),!!this._nodeIsEmpty(t)&&(null===t.residents&&(t.residents=new i.A({shrink:!0})),!0)}_add(t,e){e.advanceTo(this.objectToBoundingSphere(t))?e.node.terminals.push(t):(e.node.residents.push(t),e.node.residents.length>this._maximumObjectsPerNode&&e.depth<this._maximumDepth&&this._split(e))}_split(t){const e=t.node.residents;t.node.residents=null;for(let n=0;n<e.length;n++){const o=u.acquire().init(t);this._add(e.at(n),o),u.release(o)}}_grow(t,e){if(0!==e&&(O(t,e,(t=>this.objectToBoundingSphere(t)),x),R(x[3])&&!this._fitsInsideTree(x)))if(this._nodeIsEmpty(this._root.node))(0,a.c)(x,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{const t=this._rootBoundsForRootAsSubNode(x);this._placingRootViolatesMaxDepth(t)?this._rebuildTree(x,t):this._growRootAsSubNode(t),u.release(t)}}_rebuildTree(t,e){(0,r.c)((0,a.g)(j),(0,a.g)(e.bounds)),j[3]=e.halfSize,O([t,j],2,(t=>t),I);const n=u.acquire().init(this._root);this._root.initFrom(null,I,I[3]),this._root.increaseHalfSize(1.25),this._forEachNode(n,(t=>(this.add(t.node.terminals.data,t.node.terminals.length),null!==t.node.residents&&this.add(t.node.residents.data,t.node.residents.length),!0))),u.release(n)}_placingRootViolatesMaxDepth(t){const e=Math.log(t.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return this._forEachNode(this._root,(t=>(n=Math.max(n,t.depth),n+e<=this._maximumDepth))),n+e>this._maximumDepth}_rootBoundsForRootAsSubNode(t){const e=t[3],n=t;let o=-1/0;const i=this._root.bounds,r=this._root.halfSize;for(let h=0;h<3;h++){const t=i[h]-r-(n[h]-e),s=n[h]+e-(i[h]+r),d=Math.max(0,Math.ceil(t/(2*r))),a=Math.max(0,Math.ceil(s/(2*r)))+1,l=2**Math.ceil(Math.log(d+a)*Math.LOG2E);o=Math.max(o,l),P[h].min=d,P[h].max=a}for(let h=0;h<3;h++){let t=P[h].min,e=P[h].max;const n=(o-(t+e))/2;t+=Math.ceil(n),e+=Math.floor(n);const s=i[h]-r-t*r*2;F[h]=s+(e+t)*r}const s=o*r;return F[3]=s*E,u.acquire().initFrom(null,F,s,0)}_growRootAsSubNode(t){const e=this._root.node;(0,r.c)((0,a.g)(x),(0,a.g)(this._root.bounds)),x[3]=this._root.halfSize,this._root.init(t),t.advanceTo(x,null,!0),t.node.children=e.children,t.node.residents=e.residents,t.node.terminals=e.terminals}_shrink(){for(;;){const t=this._findShrinkIndex();if(-1===t)break;this._root.advance(t),this._root.depth=0}}_findShrinkIndex(){if(0!==this._root.node.terminals.length||this._root.isLeaf())return-1;let t=null;const e=this._root.node.children;let n=0,o=0;for(;o<e.length&&null==t;)n=o++,t=e[n];for(;o<e.length;)if(e[o++])return-1;return n}_isDegenerate(t){return!R(this.objectToBoundingSphere(t)[3])}_fitsInsideTree(t){const e=this._root.bounds,n=this._root.halfSize;return t[3]<=n&&t[0]>=e[0]-n&&t[0]<=e[0]+n&&t[1]>=e[1]-n&&t[1]<=e[1]+n&&t[2]>=e[2]-n&&t[2]<=e[2]+n}toJSON(){const{maximumDepth:t,maximumObjectsPerNode:e,_objectCount:n}=this,o=this._nodeToJSON(this._root.node);return{maximumDepth:t,maximumObjectsPerNode:e,objectCount:n,root:{bounds:this._root.bounds,halfSize:this._root.halfSize,depth:this._root.depth,node:o}}}_nodeToJSON(t){var e,n;const o=t.children.map((t=>t?this._nodeToJSON(t):null)),i=null===(e=t.residents)||void 0===e?void 0:e.map((t=>this.objectToBoundingSphere(t))),r=null===(n=t.terminals)||void 0===n?void 0:n.map((t=>this.objectToBoundingSphere(t)));return{children:o,residents:i,terminals:r}}static fromJSON(t){const e=new _((t=>t),{maximumDepth:t.maximumDepth,maximumObjectsPerNode:t.maximumObjectsPerNode});return e._objectCount=t.objectCount,e._root.initFrom(t.root.node,t.root.bounds,t.root.halfSize,t.root.depth),e}}class u{constructor(){this.bounds=(0,a.d)(),this.halfSize=0,this.initFrom(null,null,0,0)}init(t){return this.initFrom(t.node,t.bounds,t.halfSize,t.depth)}initFrom(t,e,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.depth;return this.node=null!=t?t:u.createEmptyNode(),e&&(0,a.c)(e,this.bounds),this.halfSize=n,this.depth=o,this}increaseHalfSize(t){this.halfSize*=t,this.updateBoundsRadiusFromHalfSize()}updateBoundsRadiusFromHalfSize(){this.bounds[3]=this.halfSize*E}advance(t){let e=this.node.children[t];e||(e=u.createEmptyNode(),this.node.children[t]=e),this.node=e,this.halfSize/=2,this.depth++;const n=g[t];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this}advanceTo(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(;;){if(this.isTerminalFor(t))return e&&e(this,-1),!0;if(this.isLeaf()){if(!n)return e&&e(this,-1),!1;this.node.residents=null}const o=this._childIndex(t);e&&e(this,o),this.advance(o)}}isLeaf(){return null!=this.node.residents}isTerminalFor(t){return t[3]>this.halfSize/2}_childIndex(t){const e=this.bounds;return(e[0]<t[0]?1:0)+(e[1]<t[1]?2:0)+(e[2]<t[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new i.A({shrink:!0}),residents:new i.A({shrink:!0})}}static acquire(){return u._pool.acquire()}static release(t){u._pool.release(t)}static clearPool(){u._pool.prune()}}function c(t,e){t[0]=Math.min(t[0],e[0]-e[3]),t[1]=Math.min(t[1],e[1]-e[3]),t[2]=Math.min(t[2],e[2]-e[3])}function T(t,e){t[0]=Math.max(t[0],e[0]+e[3]),t[1]=Math.max(t[1],e[1]+e[3]),t[2]=Math.max(t[2],e[2]+e[3])}function f(t,e,n){n[0]=t[0]+e,n[1]=t[1]+e,n[2]=t[2]+e}function O(t,e,n,o){if(1===e){const e=n(t[0]);(0,a.c)(e,o)}else{M[0]=1/0,M[1]=1/0,M[2]=1/0,B[0]=-1/0,B[1]=-1/0,B[2]=-1/0;for(let o=0;o<e;o++){const e=n(t[o]);R(e[3])&&(c(M,e),T(B,e))}(0,r.m)((0,a.g)(o),M,B,.5),o[3]=Math.max(B[0]-M[0],B[1]-M[1],B[2]-M[2])/2}}function m(t,e){let n,o=1/0;for(let i=0;i<8;++i){const r=A(t,e,p[i]);r<o&&(o=r,n=p[i])}return n}function A(t,e,n){return e*(t[0]*n[0]+t[1]*n[1]+t[2]*n[2])}function R(t){return!isNaN(t)&&t!==-1/0&&t!==1/0&&t>0}u._pool=new o.A(u),function(t){var e;(e=t.DepthOrder||(t.DepthOrder={}))[e.FRONT_TO_BACK=1]="FRONT_TO_BACK",e[e.BACK_TO_FRONT=-1]="BACK_TO_FRONT"}(_||(_={}));const g=[(0,s.fA)(-1,-1,-1),(0,s.fA)(1,-1,-1),(0,s.fA)(-1,1,-1),(0,s.fA)(1,1,-1),(0,s.fA)(-1,-1,1),(0,s.fA)(1,-1,1),(0,s.fA)(-1,1,1),(0,s.fA)(1,1,1)],p=[(0,s.fA)(-1,-1,-1),(0,s.fA)(-1,-1,1),(0,s.fA)(-1,1,-1),(0,s.fA)(-1,1,1),(0,s.fA)(1,-1,-1),(0,s.fA)(1,-1,1),(0,s.fA)(1,1,-1),(0,s.fA)(1,1,1)],E=Math.sqrt(3),b=[null];const F=(0,a.d)(),N=(0,s.vt)(),M=(0,s.vt)(),B=(0,s.vt)(),S=new i.A,v=(0,a.d)(),x=(0,a.d)(),j=(0,a.d)(),I=(0,a.d)(),P=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],L=new i.A,H=[0,0,0,0,0,0,0,0],z=_}}]);
//# sourceMappingURL=4536.c8688092.chunk.js.map
"use strict";(self.webpackChunkstreamlit_arcgis_map=self.webpackChunkstreamlit_arcgis_map||[]).push([[2331],{76718:(t,e,i)=>{i.d(e,{g:()=>c});var r=i(18690),n=i(76460),s=i(78393),h=i(61678),o=i(93345);const a=()=>n.A.getLogger("esri.views.webgl.BufferObject");class c{static createIndex(t,e,i){return new c(t,o.NZ.ELEMENT_ARRAY_BUFFER,e,i)}static createVertex(t,e,i){return new c(t,o.NZ.ARRAY_BUFFER,e,i)}static createUniform(t,e,i){return new c(t,o.NZ.UNIFORM_BUFFER,e,i)}static createPixelPack(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o._U.STREAM_READ,i=arguments.length>2?arguments[2]:void 0;const r=new c(t,o.NZ.PIXEL_PACK_BUFFER,e);return i&&r.setSize(i),r}static createPixelUnpack(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o._U.STREAM_DRAW,i=arguments.length>2?arguments[2]:void 0;return new c(t,o.NZ.PIXEL_UNPACK_BUFFER,e,i)}static createTransformFeedback(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o._U.STATIC_DRAW,i=arguments.length>2?arguments[2]:void 0;const r=new c(t,o.NZ.TRANSFORM_FEEDBACK_BUFFER,e);return r.setSize(i),r}constructor(t,e,i,r){this._context=t,this.bufferType=e,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(o.vt.BufferObject,this),this._glName=this._context.gl.createBuffer(),(0,h.Y2)(this._context.gl),r&&this.setData(r)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get usedMemory(){return this.bufferType===o.NZ.ELEMENT_ARRAY_BUFFER?this._indexType===o.pe.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===o.NZ.ELEMENT_ARRAY_BUFFER||this.bufferType===o.NZ.ARRAY_BUFFER}dispose(){var t;null!==(t=this._context)&&void 0!==t&&t.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(o.vt.BufferObject,this),this._context=null):this._glName&&a().warn("Leaked WebGL buffer object")}setSize(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(t<=0&&a().error("Buffer size needs to be positive!"),this.bufferType===o.NZ.ELEMENT_ARRAY_BUFFER&&null!=e)switch(this._indexType=e,e){case o.pe.UNSIGNED_SHORT:t*=2;break;case o.pe.UNSIGNED_INT:t*=4}this._setBufferData(t)}setData(t){if(!t)return;let e=t.byteLength;this.bufferType===o.NZ.ELEMENT_ARRAY_BUFFER&&((0,s.jq)(t)&&(e/=2,this._indexType=o.pe.UNSIGNED_SHORT),(0,s.XJ)(t)&&(e/=4,this._indexType=o.pe.UNSIGNED_INT)),this._setBufferData(e,t)}_setBufferData(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this._size=t;const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const r=this._context.gl;null!=e?r.bufferData(this.bufferType,e,this.usage):r.bufferData(this.bufferType,t,this.usage),(0,h.Y2)(r),this._isVAOAware&&this._context.bindVAO(i)}setSubData(t,e,i,r){if(!t)return;(e<0||e*t.BYTES_PER_ELEMENT>=this.usedMemory)&&a().error("offset is out of range!"),i>=r&&a().error("end must be bigger than start!"),(e+(r-i))*t.BYTES_PER_ELEMENT>this.usedMemory&&a().error("An attempt to write beyond the end of the buffer!");const n=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const{gl:s}=this._context;s.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,t,i,r-i),(0,h.Y2)(s),this._isVAOAware&&this._context.bindVAO(n)}getSubData(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2?arguments[2]:void 0,n=arguments.length>3?arguments[3]:void 0;if(i<0||n<0)return void a().error("Problem getting subdata: offset and length were less than zero!");const s=function(t){return(0,r.Xj)(t)}(t)?t.BYTES_PER_ELEMENT:1;if(s*((null!==i&&void 0!==i?i:0)+(null!==n&&void 0!==n?n:0))>t.byteLength)return void a().error("Problem getting subdata: offset and length exceeded destination size!");e+s*(null!==n&&void 0!==n?n:0)>this.usedMemory&&a().warn("Potential problem getting subdata: requested data exceeds buffer size!");const h=this._context.gl;this.bufferType===o.NZ.TRANSFORM_FEEDBACK_BUFFER?(this._context.bindBuffer(this,o.NZ.TRANSFORM_FEEDBACK_BUFFER),h.getBufferSubData(o.NZ.TRANSFORM_FEEDBACK_BUFFER,e,t,i,n),this._context.unbindBuffer(o.NZ.TRANSFORM_FEEDBACK_BUFFER)):(this._context.bindBuffer(this,o.NZ.COPY_READ_BUFFER),h.getBufferSubData(o.NZ.COPY_READ_BUFFER,e,t,i,n),this._context.unbindBuffer(o.NZ.COPY_READ_BUFFER))}async getSubDataAsync(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;await this._context.clientWaitAsync(),this.getSubData(t,e,i,r)}}},12331:(t,e,i)=>{i.d(e,{H:()=>u});i(81806);var r=i(76460),n=i(30726),s=i(76718),h=i(61678),o=i(93345),a=i(89179),c=i(62881),l=i(98433);class u{constructor(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this._context=t,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,t.instanceCounter.increment(o.vt.FramebufferObject,this);const r=_(e)?e:new l.g(this._context,e);if(this._colorAttachments.set(o.Nm.COLOR_ATTACHMENT0,r),this._validateTextureDescriptor(r.descriptor),this._validateColorAttachmentPoint(o.Nm.COLOR_ATTACHMENT0),null!=i)if(function(t){return _(t)||null!=t&&"pixelFormat"in t}(i))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),this._depthStencilTexture=_(i)?i:new l.g(this._context,i),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const t=function(t){return null!=t&&"type"in t&&t.type===a.p.RenderBuffer}(i)?i:new c.l(this._context,i);this._depthStencilBuffer=t,this._validateRenderBufferDescriptor(t.descriptor)}}dispose(){var t,e;if(0===this._colorAttachments.size&&!this._glName)return;const i=this._context.getBoundFramebufferObject();this._colorAttachments.forEach(((t,e)=>{var i;return null===(i=this.detachColorTexture(e))||void 0===i?void 0:i.dispose()})),null!==(t=this.detachDepthStencilBuffer())&&void 0!==t&&t.dispose(),null!==(e=this.detachDepthStencilTexture())&&void 0!==e&&e.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(i),this._context.instanceCounter.decrement(o.vt.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(o.Nm.COLOR_ATTACHMENT0)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){var t,e;const i=this._colorAttachments.get(o.Nm.COLOR_ATTACHMENT0);return null!==(t=null===i||void 0===i||null===(e=i.descriptor)||void 0===e?void 0:e.width)&&void 0!==t?t:0}get height(){var t,e;const i=this._colorAttachments.get(o.Nm.COLOR_ATTACHMENT0);return null!==(t=null===i||void 0===i||null===(e=i.descriptor)||void 0===e?void 0:e.height)&&void 0!==t?t:0}get usedMemory(){var t,e;return[...this._colorAttachments].reduce(((t,e)=>{let[i,r]=e;return t+r.usedMemory}),null!==(t=null===(e=this.depthStencil)||void 0===e?void 0:e.usedMemory)&&void 0!==t?t:0)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&_(e)?e:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(t){var e;let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.Nm.COLOR_ATTACHMENT0;if(!t)return;this._validateColorAttachmentPoint(i);const r=t.descriptor;this._validateTextureDescriptor(r),null!==(e=this.detachColorTexture(i))&&void 0!==e&&e.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,i)),this._colorAttachments.set(i,t)}detachColorTexture(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o.Nm.COLOR_ATTACHMENT0;const e=this._colorAttachments.get(t);if(e){if(this._initialized){const e=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t),this._context.bindFramebuffer(e)}return this._colorAttachments.delete(t),e}}setColorTextureTarget(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.Nm.COLOR_ATTACHMENT0;const i=this._colorAttachments.get(e);i&&this._framebufferTexture2D(i.glName,e,t)}attachDepthStencil(t){if(t)switch(t.type){case a.p.Texture:return this._attachDepthStencilTexture(t);case a.p.RenderBuffer:return this._attachDepthStencilBuffer(t)}}_attachDepthStencilTexture(t){var e;if(null==t)return;const i=t.descriptor;i.pixelFormat!==o.Ab.DEPTH_STENCIL&&i.pixelFormat!==o.Ab.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),i.dataType!==o.ld.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDescriptor(i),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,o.nI)),null!==(e=this._depthStencilTexture)&&void 0!==e&&e.dispose(),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,o.nI)),this._depthStencilTexture=null,t}_attachDepthStencilBuffer(t){if(null==t)return;const e=t.descriptor;if(this._validateRenderBufferDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const i=this._context.gl,r=this._getGLAttachmentPoint(e);i.framebufferRenderbuffer(o.R.FRAMEBUFFER,r,i.RENDERBUFFER,t.glName)}this._depthStencilBuffer=t}detachDepthStencilBuffer(){const t=this._depthStencilBuffer;if(t&&this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,i=this._getGLAttachmentPoint(t.descriptor);e.framebufferRenderbuffer(o.R.FRAMEBUFFER,i,e.RENDERBUFFER,null)}return this._depthStencilBuffer=null,t}copyToTexture(t,e,i,r,n,s,h){(t<0||e<0||n<0||s<0)&&console.error("Offsets cannot be negative!"),(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!");const a=h.descriptor;h.descriptor.target!==o.Ap.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==(null===a||void 0===a?void 0:a.width)||null==(null===a||void 0===a?void 0:a.height)||t+i>this.width||e+r>this.height||n+i>a.width||s+r>a.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const c=this._context,u=c.bindTexture(h,l.g.TEXTURE_UNIT_FOR_UPDATES);c.setActiveTexture(l.g.TEXTURE_UNIT_FOR_UPDATES),c.bindFramebuffer(this),c.gl.copyTexSubImage2D(o.Ap.TEXTURE_2D,0,n,s,t,e,i,r),c.bindTexture(u,l.g.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,i,r,n,s,h){(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!"),h||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,i,r,n,s,h)}async readPixelsAsync(t,e,i,r,n,h,a){const{gl:c}=this._context,l=s.g.createPixelPack(this._context,o._U.STREAM_READ,a.byteLength);this._context.bindBuffer(l),this._context.bindFramebuffer(this),c.readPixels(t,e,i,r,n,h,0),this._context.unbindBuffer(o.NZ.PIXEL_PACK_BUFFER),await l.getSubDataAsync(a),l.dispose()}resize(t,e){var i,r;if(this.width===t&&this.height===e)return;const n={width:t,height:e};d(n,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((t=>t.resize(n.width,n.height))),null!==(i=this._depthStencilTexture)&&void 0!==i&&i.resize(n.width,n.height),this._initialized&&(d(n,this._context.parameters.maxRenderbufferSize),null!==(r=this._depthStencilBuffer)&&void 0!==r&&r.resize(n.width,n.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o.R.FRAMEBUFFER;const e=this._context.gl;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const i=e.createFramebuffer();if(e.bindFramebuffer(t,i),this._colorAttachments.forEach(((e,i)=>this._framebufferTexture2D(e.glName,i,f(e),t))),this._depthStencilBuffer){const i=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(t,i,e.RENDERBUFFER,this._depthStencilBuffer.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,e.DEPTH_STENCIL_ATTACHMENT,f(this._depthStencilTexture),t);(0,h.en)()&&e.checkFramebufferStatus(t)!==e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=i,this._initialized=!0}_framebufferTexture2D(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.Nm.COLOR_ATTACHMENT0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o.Ap.TEXTURE_2D,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:o.R.FRAMEBUFFER,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this._context.gl.framebufferTexture2D(r,e,i,t,n)}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const e=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(o.R.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthStencilBuffer=(0,n.WD)(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=(0,n.WD)(this._depthStencilTexture))}_validateTextureDescriptor(t){t.target!==o.Ap.TEXTURE_2D&&t.target!==o.Ap.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),d(t,this._context.parameters.maxTextureSize),this._validateBufferDimensions(t)}_validateRenderBufferDescriptor(t){d(t,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(t)}_validateBufferDimensions(t){t.width<=0&&(t.width=this.width),t.height<=0&&(t.height=this.height),this.width>0&&this.height>0&&(this.width===t.width&&this.height===t.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(t){switch(t.internalFormat){case o.yQ.DEPTH_COMPONENT16:case o.yQ.DEPTH_COMPONENT24:case o.yQ.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case o.yQ.DEPTH24_STENCIL8:case o.yQ.DEPTH32F_STENCIL8:case o.yQ.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case o.yQ.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(t){if(-1===u._MAX_COLOR_ATTACHMENTS){const{gl:t}=this._context;u._MAX_COLOR_ATTACHMENTS=t.getParameter(t.MAX_COLOR_ATTACHMENTS)}const e=t-o.Nm.COLOR_ATTACHMENT0;e+1>u._MAX_COLOR_ATTACHMENTS&&r.A.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject","illegal attachment point for color attachment: ".concat(e+1,". Implementation supports up to ").concat(u._MAX_COLOR_ATTACHMENTS," color attachments"))}}function _(t){return null!=t&&"type"in t&&t.type===a.p.Texture}function d(t,e){const i=Math.max(t.width,t.height);if(i>e){r.A.getLogger("esri.views.webgl.FramebufferObject").warn("Resizing FBO attachment size ".concat(t.width,"x").concat(t.height," to device limit ").concat(e));const n=e/i;return t.width=Math.round(t.width*n),t.height=Math.round(t.height*n),!1}return!0}function f(t){return t.descriptor.target===o.Ap.TEXTURE_CUBE_MAP?o.Ap.TEXTURE_CUBE_MAP_POSITIVE_X:o.Ap.TEXTURE_2D}u._MAX_COLOR_ATTACHMENTS=-1},62881:(t,e,i)=>{i.d(e,{l:()=>h});var r=i(93345),n=i(89179),s=i(88800);class h{constructor(t,e){this._context=t,this._descriptor=e,this.type=n.p.RenderBuffer,this._context.instanceCounter.increment(r.vt.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:s,height:h,internalFormat:o,multisampled:a}=e;a?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,o,s,h):i.renderbufferStorage(i.RENDERBUFFER,o,s,h)}get descriptor(){return this._descriptor}get samples(){const t=this._descriptor.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}get usedMemory(){return(0,s.e)(this._descriptor)}resize(t,e){const i=this._descriptor;if(i.width===t&&i.height===e)return;i.width=t,i.height=e;const r=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):r.renderbufferStorage(r.RENDERBUFFER,i.internalFormat,i.width,i.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(r.vt.Renderbuffer,this),this._context=null)}}},88800:(t,e,i)=>{i.d(e,{e:()=>s,q:()=>n});var r=i(27207);class n{constructor(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.internalFormat=t,this.width=e,this.height=i,this.multisampled=!1,this.samples=1}}function s(t){return t.width<=0||t.height<=0||null==t.internalFormat?0:t.width*t.height*(0,r.IB)(t.internalFormat)}}}]);
//# sourceMappingURL=2331.3440b3a5.chunk.js.map
name: CMA CI

on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request: {}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: install golang
        uses: actions/setup-go@v3
        with:
          go-version: "1.21.2"

      - name: Log go env
        run: |
          go env

      - name: Get GOROOT
        run: |
          echo "GOROOT=$(go env GOROOT)" >> $GITHUB_ENV
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Configure Poetry
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: make install-deps-create-mountaineer-app

      - name: Run tests
        run: make test-create-mountaineer-app

      - name: Run integration tests
        if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'Full Build')
        run: make test-create-mountaineer-app-integrations test-args="-vv"
        env:
          GOROOT: ${{ env.GOROOT }}
          GOPATH: ${{ env.GOPATH }}
          GOMODCACHE: ${{ env.GOMODCACHE }}

  build:
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'Full Build')
    strategy:
      fail-fast: false
      matrix:
        include:
          # linux
          - os: linux
            target: x86_64
          - os: linux
            target: aarch64

          # macos
          - os: macos
            target: x86_64
          - os: macos
            target: aarch64

    runs-on: ${{ (matrix.os == 'linux' && 'ubuntu') || matrix.os }}-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: ${{ matrix.python-architecture || 'x64' }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Configure Poetry
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Update version in pyproject.toml
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd create_mountaineer_app
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Version to update: $VERSION"
          poetry version $VERSION

      - name: Build
        run: |
          cd create_mountaineer_app
          poetry build

      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-${{ matrix.target }}
          path: create_mountaineer_app/dist

  release:
    needs: [test, build]
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    environment: release

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist

      - run: ls -lh dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

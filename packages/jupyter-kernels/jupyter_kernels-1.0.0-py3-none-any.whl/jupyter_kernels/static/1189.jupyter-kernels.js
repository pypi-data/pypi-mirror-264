"use strict";(self.webpackChunk_datalayer_jupyter_kernels=self.webpackChunk_datalayer_jupyter_kernels||[]).push([[1189],{81189:(e,t,s)=>{s.r(t),s.d(t,{default:()=>H});var n=s(48425),r=s(49703),i=s(26364),a=s(43432),o=s(47963);const l=new o.Token("@jupyterlite/kernel:IKernels"),c=new o.Token("@jupyterlite/kernel:IKernelSpecs");var u=s(6041),d=s(3283),p=s(43395),g=s(71676),h=s(29643);const y=p.supportedKernelWebSocketProtocols.v1KernelWebsocketJupyterOrg;class v{constructor(e){this._kernels=new u.v,this._clients=new u.v,this._kernelClients=new u.v;const{kernelspecs:t}=e;this._kernelspecs=t}async startNew(e){const{id:t,name:s,location:n}=e,r=this._kernelspecs.factories.get(s);if(!r)return{id:t,name:s};const i=new h.WU,a=(e,t,s)=>{var n;const r=this._kernels.get(e);if(!r)throw Error(`No kernel ${e}`);this._clients.set(t,s),null===(n=this._kernelClients.get(e))||void 0===n||n.add(t),s.on("message",(async e=>{let t;if(e instanceof ArrayBuffer)e=new Uint8Array(e).buffer,t=(0,d.deserialize)(e,y);else{if("string"!=typeof e)return;{const s=(new TextEncoder).encode(e);t=(0,d.deserialize)(s.buffer,y)}}"input_reply"===t.header.msg_type?r.handleMessage(t):(async e=>{await i.runExclusive((async()=>{await r.ready,await r.handleMessage(e)}))})(t)}));const a=()=>{var s;this._clients.delete(t),null===(s=this._kernelClients.get(e))||void 0===s||s.delete(t)};r.disposed.connect(a),s.onclose=a},l=null!=t?t:o.UUID.uuid4(),c=`${v.WS_BASE_URL}api/kernels/${l}/channels`,u=this._kernels.get(l);if(u)return{id:u.id,name:u.name};const p=await r({id:l,sendMessage:e=>{const t=e.header.session,s=this._clients.get(t);if(!s)return void console.warn(`Trying to send message on removed socket for kernel ${l}`);const n=(0,d.serialize)(e,y);if("iopub"!==e.channel)s.send(n);else{const e=this._kernelClients.get(l);null==e||e.forEach((e=>{var t;null===(t=this._clients.get(e))||void 0===t||t.send(n)}))}},name:s,location:n});this._kernels.set(l,p),this._kernelClients.set(l,new Set);const w=new g.Server(c,{mock:!1,selectProtocol:()=>y});return w.on("connection",(e=>{var t;const s=null!==(t=new URL(e.url).searchParams.get("session_id"))&&void 0!==t?t:"";a(l,s,e)})),w.on("close",(()=>{this._clients.keys().forEach((e=>{var t;const s=this._clients.get(e);(null==s?void 0:s.readyState)===WebSocket.CLOSED&&(this._clients.delete(e),null===(t=this._kernelClients.get(l))||void 0===t||t.delete(e))}))})),p.disposed.connect((()=>{w.close(),this._kernels.delete(l),this._kernelClients.delete(l)})),{id:p.id,name:p.name}}async restart(e){const t=this._kernels.get(e);if(!t)throw Error(`Kernel ${e} does not exist`);const{id:s,name:n,location:r}=t;return t.dispose(),this.startNew({id:s,name:n,location:r})}async list(){return[...this._kernels.values()].map((e=>({id:e.id,name:e.name})))}async shutdown(e){var t;null===(t=this._kernels.delete(e))||void 0===t||t.dispose()}async get(e){return this._kernels.get(e)}}!function(e){e.WS_BASE_URL=n.PageConfig.getBaseUrl().replace(/^http/,"ws")}(v||(v={}));class w{constructor(){this._specs=new Map,this._factories=new Map}get specs(){return 0===this._specs.size?null:{default:this.defaultKernelName,kernelspecs:Object.fromEntries(this._specs)}}get defaultKernelName(){let e=n.PageConfig.getOption("defaultKernelName");if(!e&&this._specs.size){const t=Array.from(this._specs.keys());t.sort(),e=t[0]}return e||"javascript"}get factories(){return this._factories}register(e){const{spec:t,create:s}=e;this._specs.set(t.name,t),this._factories.set(t.name,s)}}const f="third-party-licenses.json",_=new o.Token("@jupyterlite/licenses:ILicenses"),k=Object.freeze({packages:[]});class m{async get(){return{bundles:{...await this._getFederated(),[this.appName]:await this._getAppLicenses()}}}get appName(){return n.PageConfig.getOption("appName")||"JupyterLite"}get appLicensesUrl(){return n.URLExt.join(n.PageConfig.getBaseUrl(),"build",f)}get labExtensionsUrl(){return n.PageConfig.getOption("fullLabextensionsUrl")}async _getAppLicenses(){let e=k;try{e=(await fetch(this.appLicensesUrl)).json()}catch(e){console.warn("Could not resolve licenses for",this.appName)}return e}async _getFederated(){const e={};let t;try{t=JSON.parse(n.PageConfig.getOption("federated_extensions"))}catch{return e}const s=[];for(const n of t)s.push(this._getOneFederated(n,e));try{await Promise.all(s)}catch(e){console.warn("Error resolving licenses",e)}return e}async _getOneFederated(e,t){try{const s=n.URLExt.join(this.labExtensionsUrl,e.name,"static",f),r=await fetch(s);t[e.name]=await r.json()}catch{console.warn("Could not resolve licenses for",e),t[e.name]=k}}}var S=s(71123),N=s(98209);class O{constructor(e){var t;this._registration=null,this._registrationChanged=new N.Signal(this),this._ready=new o.PromiseDelegate;const s=null!==(t=null==e?void 0:e.workerUrl)&&void 0!==t?t:n.URLExt.join(n.PageConfig.getBaseUrl(),S.o);this.initialize(s).catch(console.warn)}get registrationChanged(){return this._registrationChanged}get enabled(){return null!==this._registration}get ready(){return this._ready.promise}async initialize(e){const{serviceWorker:t}=navigator;let s=null;if(t?t.controller&&(s=await t.getRegistration(t.controller.scriptURL)||null,console.info("JupyterLite ServiceWorker was already registered")):console.warn("ServiceWorkers not supported in this browser"),!s&&t)try{const n=await t.getRegistrations();await Promise.all(n.map((e=>e.unregister()))),console.info("Existing JupyterLite ServiceWorkers unregistered"),console.info("Registering new JupyterLite ServiceWorker",e),s=await t.register(e),console.info("JupyterLite ServiceWorker was sucessfully registered")}catch(e){console.warn(e),console.warn(`JupyterLite ServiceWorker registration unexpectedly failed: ${e}`)}this.setRegistration(s),s?this._ready.resolve(void 0):this._ready.reject(void 0)}setRegistration(e){this._registration=e,this._registrationChanged.emit(this._registration)}}const j=new o.Token("@jupyterlite/session:ISessions");var R=s(46931);class J{constructor(e){this._sessions=[],this._kernels=e.kernels}async get(e){const t=this._sessions.find((t=>t.id===e));if(!t)throw Error(`Session ${e} not found`);return t}async list(){return this._sessions}async patch(e){const{id:t,path:s,name:r,kernel:i}=e,a=this._sessions.findIndex((e=>e.id===t)),l=this._sessions[a];if(!l)throw Error(`Session ${t} not found`);const c={...l,path:null!=s?s:l.path,name:null!=r?r:l.name};if(i)if(i.id){const e=this._sessions.find((e=>{var t;return(null===(t=e.kernel)||void 0===t?void 0:t.id)===(null==i?void 0:i.id)}));e&&(c.kernel=e.kernel)}else if(i.name){const e=await this._kernels.startNew({id:o.UUID.uuid4(),name:i.name,location:n.PathExt.dirname(c.path)});e&&(c.kernel=e),this._handleKernelShutdown({kernelId:e.id,sessionId:l.id})}return this._sessions[a]=c,c}async startNew(e){var t,s,r,i;const{path:a,name:l}=e,c=this._sessions.find((e=>e.name===l));if(c)return c;const u=null!==(s=null===(t=e.kernel)||void 0===t?void 0:t.name)&&void 0!==s?s:"",d=null!==(r=e.id)&&void 0!==r?r:o.UUID.uuid4(),p=null!==(i=e.name)&&void 0!==i?i:e.path,g=n.PathExt.dirname(e.name)||n.PathExt.dirname(e.path),h=p.includes(":")?p.split(":")[0]:"",y=g.includes(h)?g:`${h}:${g}`,v=await this._kernels.startNew({id:d,name:u,location:y}),w={id:d,path:a,name:null!=l?l:a,type:"notebook",kernel:{id:v.id,name:v.name}};return this._sessions.push(w),this._handleKernelShutdown({kernelId:d,sessionId:w.id}),w}async shutdown(e){var t;const s=this._sessions.find((t=>t.id===e));if(!s)throw Error(`Session ${e} not found`);const n=null===(t=s.kernel)||void 0===t?void 0:t.id;n&&await this._kernels.shutdown(n),R.RO.removeFirstOf(this._sessions,s)}async _handleKernelShutdown({kernelId:e,sessionId:t}){const s=await this._kernels.get(e);s&&s.disposed.connect((()=>{this.shutdown(t)}))}}const x=new o.Token("@jupyterlite/settings:ISettings");var b=s(42824);const C="JupyterLite Storage";class L{constructor(e){this._storageName=C,this._storageDrivers=null,this._localforage=e.localforage,this._storageName=e.storageName||C,this._storageDrivers=e.storageDrivers||null,this._ready=new o.PromiseDelegate}get ready(){return this._ready.promise}get storage(){return this.ready.then((()=>this._storage))}async initialize(){await this.initStorage(),this._ready.resolve(void 0)}async initStorage(){this._storage=this.defaultSettingsStorage()}get defaultStorageOptions(){var e;const t=(null===(e=this._storageDrivers)||void 0===e?void 0:e.length)?this._storageDrivers:null;return{version:1,name:this._storageName,...t?{driver:t}:{}}}defaultSettingsStorage(){return this._localforage.createInstance({description:"Offline Storage for Settings",storeName:"settings",...this.defaultStorageOptions})}async get(e){return(await this.getAll()).settings.find((t=>t.id===e))}async getAll(){const e=await this._getAll("all.json");let t=[];try{t=await this._getAll("all_federated.json")}catch{}const s=e.concat(t),n=await this.storage;return{settings:await Promise.all(s.map((async e=>{var t;const{id:s}=e,r=null!==(t=await n.getItem(s))&&void 0!==t?t:e.raw;return{...U.override(e),raw:r,settings:b.parse(r)}})))}}async save(e,t){await(await this.storage).setItem(e,t)}async _getAll(e){var t;const s=null!==(t=n.PageConfig.getOption("settingsUrl"))&&void 0!==t?t:"/";return await(await fetch(n.URLExt.join(s,e))).json()}}var U;!function(e){const t=JSON.parse(n.PageConfig.getOption("settingsOverrides")||"{}");e.override=function(e){if(t[e.id]){e.schema.properties||(e.schema.properties={});for(const[s,n]of Object.entries(t[e.id]||{}))e.schema.properties[s].default=n}return e}}(U||(U={}));const E=new o.Token("@jupyterlite/translation:ITranslation");class P{constructor(){this._prevLocale=""}async get(e){const t=n.URLExt.join(n.PageConfig.getBaseUrl(),`api/translations/${e}.json`);try{const s=await fetch(t),n=JSON.parse(await s.text());if("all"!==this._prevLocale&&"all"===e){const e=this._prevLocale;n.data[e].displayName=n.data[e].nativeName,"en"!==e&&(n.data.en.displayName=`${n.data.en.nativeName} (default)`)}return this._prevLocale=e,n}catch(t){return e?{data:{},message:`Language pack '${e}' not installed!`}:{data:{en:{displayName:"English",nativeName:"English"}},message:""}}}}const I=new o.Token("@jupyterlite/localforge:ILocalForage");var $=s(30384),D=s.n($),W=s(62243),A=s.n(W);const q={id:"@jupyterlite/server-extension:localforage",autoStart:!0,provides:I,activate:e=>({localforage:A()})},K={id:"@jupyterlite/server-extension:localforage-memory-storage",autoStart:!0,requires:[I],activate:async(e,t)=>{JSON.parse(n.PageConfig.getOption("enableMemoryStorage")||"false")&&(console.warn("Memory storage fallback enabled: contents and settings may not be saved"),await async function(e){return await e.defineDriver(D())}(t.localforage))}},z={id:"@jupyterlite/server-extension:contents",requires:[I],autoStart:!0,provides:r.Hv,activate:(e,t)=>{const s=n.PageConfig.getOption("contentsStorageName"),r=JSON.parse(n.PageConfig.getOption("contentsStorageDrivers")||"null"),{localforage:a}=t,o=new i.A({storageName:s,storageDrivers:r,localforage:a});return e.started.then((()=>o.initialize().catch(console.warn))),o}},T={id:"@jupyterlite/server-extension:contents-routes",autoStart:!0,requires:[r.Hv],activate:(e,t)=>{e.router.get("/api/contents/(.+)/checkpoints",(async(e,s)=>{const n=await t.listCheckpoints(s);return new Response(JSON.stringify(n))})),e.router.post("/api/contents/(.+)/checkpoints/(.*)",(async(e,s,n)=>{const r=await t.restoreCheckpoint(s,n);return new Response(JSON.stringify(r),{status:204})})),e.router.post("/api/contents/(.+)/checkpoints",(async(e,s)=>{const n=await t.createCheckpoint(s);return new Response(JSON.stringify(n),{status:201})})),e.router.delete("/api/contents/(.+)/checkpoints/(.*)",(async(e,s,n)=>{const r=await t.deleteCheckpoint(s,n);return new Response(JSON.stringify(r),{status:204})})),e.router.get("/api/contents(.*)",(async(e,s)=>{var n;const r={content:"1"===(null===(n=e.query)||void 0===n?void 0:n.content)},i=await t.get(s,r);return i?new Response(JSON.stringify(i)):new Response(null,{status:404})})),e.router.post("/api/contents(.*)",(async(e,s)=>{const n=e.body,r=null==n?void 0:n.copy_from;let i;return i=r?await t.copy(r,s):await t.newUntitled(n),i?new Response(JSON.stringify(i),{status:201}):new Response(null,{status:400})})),e.router.patch("/api/contents(.*)",(async(e,s)=>{var n,r;const i=null!==(r=null===(n=e.body)||void 0===n?void 0:n.path)&&void 0!==r?r:"";s="/"===s[0]?s.slice(1):s;const a=await t.rename(s,i);return new Response(JSON.stringify(a))})),e.router.put("/api/contents/(.+)",(async(e,s)=>{const n=e.body,r=await t.save(s,n);return new Response(JSON.stringify(r))})),e.router.delete("/api/contents/(.+)",(async(e,s)=>(await t.delete(s),new Response(null,{status:204}))))}},M={id:"@jupyterlite/server-extension:service-worker",autoStart:!0,provides:S.f,activate:e=>new O},B={id:"@jupyterlite/server-extension:settings",autoStart:!0,requires:[I],provides:x,activate:(e,t)=>{const s=n.PageConfig.getOption("settingsStorageName"),r=JSON.parse(n.PageConfig.getOption("settingsStorageDrivers")||"null"),{localforage:i}=t,a=new L({storageName:s,storageDrivers:r,localforage:i});return e.started.then((()=>a.initialize().catch(console.warn))),a}},F={id:"@jupyterlite/server-extension:settings-routes",autoStart:!0,requires:[x],activate:(e,t)=>{const s="/api/settings/((?:@([^/]+?)[/])?([^/]+?):([^:]+))$";e.router.get(s,(async(e,s)=>{const n=await t.get(s);return new Response(JSON.stringify(n))})),e.router.put(s,(async(e,s)=>{const n=e.body,{raw:r}=n;return await t.save(s,r),new Response(null,{status:204})})),e.router.get("/api/settings",(async e=>{const s=await t.getAll();return new Response(JSON.stringify(s))}))}},H=[z,T,{id:"@jupyterlite/server-extension:emscripten-filesystem",autoStart:!0,optional:[S.f],provides:r.dC,activate:(e,t)=>{const{contents:s}=e.serviceManager,n=new a.Q({contents:s}),r="Kernel filesystem and JupyterLite contents";function i(e,t){t&&console.warn(t),e&&console.warn(e),t||e?console.warn(`${r} will NOT be synced`):console.info(`${r} will be synced`)}return t?t.ready.then((()=>{n.enable(),i()})).catch((e=>{i("JupyterLite ServiceWorker failed to become available",e)})):i("JupyterLite ServiceWorker not available"),n}},{id:"@jupyterlite/server-extension:kernels",autoStart:!0,provides:l,requires:[c],activate:(e,t)=>new v({kernelspecs:t})},{id:"@jupyterlite/server-extension:kernels-routes",autoStart:!0,requires:[l],activate:(e,t)=>{e.router.get("/api/kernels",(async e=>{const s=await t.list();return new Response(JSON.stringify(s))})),e.router.post("/api/kernels/(.*)/restart",(async(e,s)=>{const n=await t.restart(s);return new Response(JSON.stringify(n))})),e.router.delete("/api/kernels/(.*)",(async(e,s)=>{const n=await t.shutdown(s);return new Response(JSON.stringify(n),{status:204})}))}},{id:"@jupyterlite/server-extension:kernelspec",autoStart:!0,provides:c,activate:e=>new w},{id:"@jupyterlite/server-extension:kernelspec-routes",autoStart:!0,requires:[c],activate:(e,t)=>{e.router.get("/api/kernelspecs",(async e=>{const{specs:s}=t;if(!s)return new Response(null);const n={},r=s.kernelspecs;Object.keys(r).forEach((e=>{const t=r[e],{resources:s}=null!=t?t:{};n[e]={name:e,spec:t,resources:s}}));const i={default:s.default,kernelspecs:n};return new Response(JSON.stringify(i))}))}},{id:"@jupyterlite/server-extension:licenses",autoStart:!0,provides:_,activate:e=>new m},{id:"@jupyterlite/server-extension:licenses-routes",autoStart:!0,requires:[_],activate(e,t){e.router.get("/api/licenses",(async e=>{const s=await t.get();return new Response(JSON.stringify(s))}))}},K,q,{id:"@jupyterlite/server-extension:lsp-routes",autoStart:!0,activate:e=>{e.router.get("/lsp/status",(async e=>new Response(JSON.stringify({version:2,sessions:{},specs:{}}))))}},{id:"@jupyterlite/server-extension:nbconvert-routes",autoStart:!0,activate:e=>{e.router.get("/api/nbconvert",(async e=>new Response(JSON.stringify({}))))}},M,{id:"@jupyterlite/server-extension:sessions",autoStart:!0,provides:j,requires:[l],activate:(e,t)=>new J({kernels:t})},{id:"@jupyterlite/server-extension:sessions-routes",autoStart:!0,requires:[j],activate:(e,t)=>{e.router.get("/api/sessions/(.+)",(async(e,s)=>{const n=await t.get(s);return new Response(JSON.stringify(n),{status:200})})),e.router.get("/api/sessions",(async e=>{const s=await t.list();return new Response(JSON.stringify(s),{status:200})})),e.router.patch("/api/sessions(.*)",(async(e,s)=>{const n=e.body,r=await t.patch(n);return new Response(JSON.stringify(r),{status:200})})),e.router.delete("/api/sessions/(.+)",(async(e,s)=>(await t.shutdown(s),new Response(null,{status:204})))),e.router.post("/api/sessions",(async e=>{const s=e.body,n=await t.startNew(s);return new Response(JSON.stringify(n),{status:201})}))}},B,F,{id:"@jupyterlite/server-extension:translation",autoStart:!0,provides:E,activate:e=>{const t=new P;return e.router.get("/api/translations/?(.*)",(async(e,s)=>{"default"===s&&(s="en");const n=await t.get(s||"all");return new Response(JSON.stringify(n))})),t}},{id:"@jupyterlite/server-extension:translation-routes",autoStart:!0,requires:[E],activate:(e,t)=>{e.router.get("/api/translations/?(.*)",(async(e,s)=>{const n=await t.get(s||"all");return new Response(JSON.stringify(n))}))}}]}}]);
job "{{ job_name }}" {

    type = "service"
    datacenters = {{ datacenters | tojson}}

    meta {
        jupyterhub_user = "{{ username }}"
        {% if notebook_name %}
        jupyterhub_notebook = "{{ notebook_name }}"
        {% endif %}
    }
    group "nb" {

        {% if policies %}
        vault {
            policies = {{ policies  | tojson }}
        }
        {% endif %}
        {%- if volume_data %}
        {%- if volume_data.type == "ephemeral_disk" %}
        ephemeral_disk {
            migrate = true
            size    = {{ volume_data.ephemeral_disk_size }}
            sticky  = true
        }
        {% else %}

        volume "{{ volume_data.volume_name }}" {
            type      = "{{ volume_data.type }}"
            read_only = false
            source    = "{{ volume_data.source }}"

            {%- if volume_data.type == "csi" %}
            attachment_mode = "file-system"
            access_mode     = "single-node-writer"
            {% endif %}
        }
        {% endif %}
        {% endif %}

        network {
            port "notebook" {
                to = 8888
            }
        }

        task "nb" {
            driver = "docker"

            config {
                image = "{{ image }}"
                ports = [ "notebook" ]

                args = {{ args | tojson }}

                {% if volume_data and volume_data.type == "ephemeral_disk" %}
                volumes = [
                    "../alloc/data/notebook:{{ volume_data.destination }}"
                ]
                {% endif %}

            }
            env {
                {% for key, value in env|dictsort %}
                {{ key }} = {{ value | tojson}}
                {% endfor %}
                JUPYTER_ENABLE_LAB="yes"
                # GRANT_SUDO="yes"
            }

            resources {
                cpu    = {{ cpu }}
                memory = {{ memory }}
            }

            {% if volume_data and not volume_data.type == "ephemeral_disk" %}
            volume_mount {
                volume      = "{{ volume_data.volume_name }}"
                destination = "{{ volume_data.destination }}"
                read_only   = false
            }
            {% endif %}
        }

        service {
            name = "{{ service_name }}"
            provider = "{{ service_provider }}"
            port = "notebook"
             check {
                name     = "alive"
                type     = "tcp"
                interval = "10s"
                timeout  = "2s"
            }
        }
    }
}

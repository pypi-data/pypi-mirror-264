<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>SelectDeckParserPage</class>
 <widget class="QWizardPage" name="SelectDeckParserPage">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>767</width>
    <height>596</height>
   </rect>
  </property>
  <property name="title">
   <string>Import a deck list for printing</string>
  </property>
  <property name="subTitle">
   <string>Select which kind of deck list you want to import.</string>
  </property>
  <layout class="QGridLayout" name="gridLayout">
   <item row="3" column="1" colspan="4">
    <widget class="QRadioButton" name="select_parser_xmage">
     <property name="toolTip">
      <string>Decklist files, stored in XMage’s native format.
Because XMage closely follows Scryfall regarding Magic sets,
this should give very accurate results.</string>
     </property>
     <property name="text">
      <string>XMage</string>
     </property>
    </widget>
   </item>
   <item row="6" column="3">
    <widget class="QCheckBox" name="tappedout_include_acquire_board">
     <property name="enabled">
      <bool>false</bool>
     </property>
     <property name="toolTip">
      <string>This is a Tappedout-specific section of the deck.
It may contain the decklist author’s buylist or anything else.</string>
     </property>
     <property name="text">
      <string>Include “Acquire-Board”</string>
     </property>
    </widget>
   </item>
   <item row="1" column="1" colspan="4">
    <widget class="QRadioButton" name="select_parser_mtg_online">
     <property name="toolTip">
      <string>The simplistic format used by Magic Online. It does not specify exact printings, so may not give the best results.</string>
     </property>
     <property name="text">
      <string>Magic Online</string>
     </property>
    </widget>
   </item>
   <item row="11" column="1">
    <spacer name="sample_buttons_spacer">
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
     <property name="sizeType">
      <enum>QSizePolicy::Fixed</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>20</height>
      </size>
     </property>
    </spacer>
   </item>
   <item row="9" column="1">
    <spacer name="custom_re_input_spacer">
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
     <property name="sizeType">
      <enum>QSizePolicy::Fixed</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>20</height>
      </size>
     </property>
    </spacer>
   </item>
   <item row="6" column="2">
    <widget class="QCheckBox" name="tappedout_include_maybe_board">
     <property name="enabled">
      <bool>false</bool>
     </property>
     <property name="toolTip">
      <string>This is a Tappedout-specific section of the deck.
It may contain cards that the decklist creator considers for inclusion, based on the meta
or any other preference, like card price.</string>
     </property>
     <property name="text">
      <string>Include “Maybe-Board”</string>
     </property>
    </widget>
   </item>
   <item row="4" column="1" colspan="4">
    <widget class="QRadioButton" name="select_parser_scryfall_csv">
     <property name="toolTip">
      <string>CSV exports from Scryfall’s own deck builder.
Gives very accurate results, unless the imported deck list contains ignored items
matching a configured download filter.</string>
     </property>
     <property name="text">
      <string>Scryfall.com deck lists (CSV export)</string>
     </property>
    </widget>
   </item>
   <item row="14" column="1" colspan="4">
    <spacer name="verticalSpacer">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>40</height>
      </size>
     </property>
    </spacer>
   </item>
   <item row="5" column="1" colspan="4">
    <widget class="QRadioButton" name="select_parser_tappedout_csv">
     <property name="toolTip">
      <string>CSV exports can be downloaded from Tappedout by choosing the appropriate deck export option.</string>
     </property>
     <property name="text">
      <string>tappedout.net deck list (CSV export)</string>
     </property>
    </widget>
   </item>
   <item row="11" column="2" colspan="3">
    <layout class="QGridLayout" name="sample_buttons_layout">
     <item row="0" column="1">
      <widget class="QPushButton" name="insert_set_code_matcher_sample_button">
       <property name="enabled">
        <bool>false</bool>
       </property>
       <property name="toolTip">
        <string>Appends a sample matcher for a set code to the input field above.</string>
       </property>
       <property name="text">
        <string>Set code matcher</string>
       </property>
      </widget>
     </item>
     <item row="0" column="2">
      <widget class="QPushButton" name="insert_collector_number_matcher_sample_button">
       <property name="enabled">
        <bool>false</bool>
       </property>
       <property name="toolTip">
        <string>Appends a sample matcher for a collector number to the input field above</string>
       </property>
       <property name="text">
        <string>Collector number matcher</string>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QPushButton" name="insert_copies_matcher_sample_button">
       <property name="enabled">
        <bool>false</bool>
       </property>
       <property name="toolTip">
        <string>Appends a matcher for the number of card copies to the input field above.
If a card count field is not present in the deck list, 1 card copy per line is assumed</string>
       </property>
       <property name="text">
        <string>Copies matcher</string>
       </property>
      </widget>
     </item>
     <item row="0" column="0">
      <widget class="QPushButton" name="insert_name_matcher_sample_button">
       <property name="enabled">
        <bool>false</bool>
       </property>
       <property name="toolTip">
        <string>Appends a matcher for a card name to the input field above.</string>
       </property>
       <property name="text">
        <string>Card name matcher</string>
       </property>
      </widget>
     </item>
     <item row="1" column="2">
      <widget class="QPushButton" name="insert_scryfall_id_matcher_sample_button">
       <property name="enabled">
        <bool>false</bool>
       </property>
       <property name="toolTip">
        <string>Appends a matcher for the Scryfall ID to the input field above.
This may be used by deck lists that closely integrate with the Scryfall website.
Most deck lists won’t use this.</string>
       </property>
       <property name="text">
        <string>Scryfall ID matcher</string>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="QPushButton" name="insert_language_matcher_sample_button">
       <property name="enabled">
        <bool>false</bool>
       </property>
       <property name="toolTip">
        <string>Appends a matcher for the  card language to the input field above.
If a language field is not present in the deck list, the card language is guessed.</string>
       </property>
       <property name="text">
        <string>Language matcher</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item row="8" column="1" colspan="4">
    <widget class="QRadioButton" name="select_parser_custom_re">
     <property name="toolTip">
      <string>Specify a custom regular expression in the input field below. It will be used to parse each deck list line.
You can use the buttons below to insert basic building blocks.
You have to separate them with the “control structures”, like spaces, as used in your deck list.</string>
     </property>
     <property name="text">
      <string>Custom regular expression based parser:</string>
     </property>
    </widget>
   </item>
   <item row="6" column="1">
    <spacer name="tapped_out_board_spacer">
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
     <property name="sizeType">
      <enum>QSizePolicy::Fixed</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>20</height>
      </size>
     </property>
    </spacer>
   </item>
   <item row="6" column="4">
    <spacer name="horizontalSpacer">
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>40</width>
       <height>20</height>
      </size>
     </property>
    </spacer>
   </item>
   <item row="0" column="1" colspan="4">
    <widget class="QRadioButton" name="select_parser_mtg_arena">
     <property name="toolTip">
      <string>Magic Arena and exports from compatible websites, like moxfield.com
Note that this option is not limited to cards in Standard/Historic,
as the format works for any card.</string>
     </property>
     <property name="text">
      <string>MTG Arena</string>
     </property>
    </widget>
   </item>
   <item row="9" column="2" colspan="3">
    <widget class="QLineEdit" name="custom_re_input">
     <property name="enabled">
      <bool>false</bool>
     </property>
     <property name="toolTip">
      <string>Use this regular expression to parse the deck list file. See the context help (?-Button) for more detailes.</string>
     </property>
     <property name="whatsThis">
      <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Ubuntu'; font-size:10pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;You can enter a custom Regular Expression (in Python syntax) to parse the lines of your deck list. Use &lt;span style=&quot; font-style:italic;&quot;&gt;named groups&lt;/span&gt; to extract the individual card properties from the individual lines of the deck list.&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;A named group looks like this &lt;span style=&quot; font-weight:600;&quot;&gt;(?P&amp;lt;GroupName&amp;gt;RE)&lt;/span&gt;, where RE is a Regular Expression matching the part you want to extract.&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;This program recognises these group names:&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;- &lt;span style=&quot; font-weight:600;&quot;&gt;copies&lt;/span&gt;: The number of card copies. Defaults to 1, if not present&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;- &lt;span style=&quot; font-weight:600;&quot;&gt;name&lt;/span&gt;: The card name&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;- &lt;span style=&quot; font-weight:600;&quot;&gt;set_code&lt;/span&gt;: The 3 (or more) letter code identifying the set.&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;- &lt;span style=&quot; font-weight:600;&quot;&gt;collector_number&lt;/span&gt;: The collector number of the card&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;- &lt;span style=&quot; font-weight:600;&quot;&gt;language&lt;/span&gt;: The card language, using a two-letter language code. If not given, the importer tries to determine the language from the card name. Defaults to &amp;quot;en&amp;quot; for English, if not possible.&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Not all groups are required for a successful match. For example, &lt;span style=&quot; font-weight:600;&quot;&gt;set_code&lt;/span&gt; and &lt;span style=&quot; font-weight:600;&quot;&gt;collector_number&lt;/span&gt; is sufficient for exact identification most of the time.&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Hint: You may want to use an online Regular Expression editor, like &lt;a href=&quot;https://regex101.com/&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;https://regex101.com/&lt;/span&gt;&lt;/a&gt;, for example.&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="placeholderText">
      <string>(?P&lt;copies&gt;\w+) (?P&lt;name&gt;.+) \((?P&lt;set_code&gt;\w+)\) (?P&lt;collector_number&gt;\d+)</string>
     </property>
     <property name="clearButtonEnabled">
      <bool>true</bool>
     </property>
    </widget>
   </item>
   <item row="2" column="1" colspan="4">
    <widget class="QRadioButton" name="select_parser_magic_workstation">
     <property name="text">
      <string>Magic Workstation Deck Data (mwDeck)</string>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections>
  <connection>
   <sender>select_parser_custom_re</sender>
   <signal>toggled(bool)</signal>
   <receiver>custom_re_input</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>126</x>
     <y>223</y>
    </hint>
    <hint type="destinationlabel">
     <x>208</x>
     <y>261</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_mtg_arena</sender>
   <signal>clicked()</signal>
   <receiver>SelectDeckParserPage</receiver>
   <slot>isComplete()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>20</x>
     <y>20</y>
    </hint>
    <hint type="destinationlabel">
     <x>20</x>
     <y>20</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_mtg_online</sender>
   <signal>clicked()</signal>
   <receiver>SelectDeckParserPage</receiver>
   <slot>isComplete()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>26</x>
     <y>51</y>
    </hint>
    <hint type="destinationlabel">
     <x>20</x>
     <y>20</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_scryfall_csv</sender>
   <signal>clicked()</signal>
   <receiver>SelectDeckParserPage</receiver>
   <slot>isComplete()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>32</x>
     <y>139</y>
    </hint>
    <hint type="destinationlabel">
     <x>20</x>
     <y>20</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_custom_re</sender>
   <signal>clicked()</signal>
   <receiver>SelectDeckParserPage</receiver>
   <slot>isComplete()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>44</x>
     <y>223</y>
    </hint>
    <hint type="destinationlabel">
     <x>20</x>
     <y>20</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_xmage</sender>
   <signal>clicked()</signal>
   <receiver>SelectDeckParserPage</receiver>
   <slot>isComplete()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>32</x>
     <y>111</y>
    </hint>
    <hint type="destinationlabel">
     <x>20</x>
     <y>20</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>custom_re_input</sender>
   <signal>textChanged(QString)</signal>
   <receiver>SelectDeckParserPage</receiver>
   <slot>isComplete()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>247</x>
     <y>261</y>
    </hint>
    <hint type="destinationlabel">
     <x>145</x>
     <y>114</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_tappedout_csv</sender>
   <signal>clicked()</signal>
   <receiver>SelectDeckParserPage</receiver>
   <slot>isComplete()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>145</x>
     <y>167</y>
    </hint>
    <hint type="destinationlabel">
     <x>139</x>
     <y>101</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_tappedout_csv</sender>
   <signal>toggled(bool)</signal>
   <receiver>tappedout_include_maybe_board</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>98</x>
     <y>167</y>
    </hint>
    <hint type="destinationlabel">
     <x>120</x>
     <y>195</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_tappedout_csv</sender>
   <signal>toggled(bool)</signal>
   <receiver>tappedout_include_acquire_board</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>283</x>
     <y>167</y>
    </hint>
    <hint type="destinationlabel">
     <x>378</x>
     <y>195</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_custom_re</sender>
   <signal>toggled(bool)</signal>
   <receiver>insert_name_matcher_sample_button</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>262</x>
     <y>223</y>
    </hint>
    <hint type="destinationlabel">
     <x>206</x>
     <y>302</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_custom_re</sender>
   <signal>toggled(bool)</signal>
   <receiver>insert_collector_number_matcher_sample_button</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>396</x>
     <y>223</y>
    </hint>
    <hint type="destinationlabel">
     <x>759</x>
     <y>302</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_custom_re</sender>
   <signal>toggled(bool)</signal>
   <receiver>insert_scryfall_id_matcher_sample_button</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>342</x>
     <y>223</y>
    </hint>
    <hint type="destinationlabel">
     <x>759</x>
     <y>342</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_custom_re</sender>
   <signal>toggled(bool)</signal>
   <receiver>insert_set_code_matcher_sample_button</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>396</x>
     <y>223</y>
    </hint>
    <hint type="destinationlabel">
     <x>515</x>
     <y>302</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_custom_re</sender>
   <signal>toggled(bool)</signal>
   <receiver>insert_copies_matcher_sample_button</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>396</x>
     <y>223</y>
    </hint>
    <hint type="destinationlabel">
     <x>206</x>
     <y>342</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_custom_re</sender>
   <signal>toggled(bool)</signal>
   <receiver>insert_language_matcher_sample_button</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>452</x>
     <y>223</y>
    </hint>
    <hint type="destinationlabel">
     <x>515</x>
     <y>342</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>select_parser_magic_workstation</sender>
   <signal>clicked()</signal>
   <receiver>SelectDeckParserPage</receiver>
   <slot>isComplete()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>383</x>
     <y>72</y>
    </hint>
    <hint type="destinationlabel">
     <x>383</x>
     <y>297</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>

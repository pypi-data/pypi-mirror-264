[tool.poetry]
name = "delphai-utils"
version = "3.4.2"
description = "delphai backend utilities"
authors = ["Barath Kumar <barath@delphai.com>"]
homepage = "https://github.com/delphai/delphai-utils"

[tool.poetry.dependencies]
python = "^3.8"
omegaconf = { version = "^2.1.0", optional = true }
memoization = { version = "^0.3.1", optional = true }
python-dotenv = { version = "^0.14.0", optional = true }
kubernetes = { version = "^25.3.0", optional = true }
coloredlogs = { version = "^14.0", optional = true }
deepmerge = { version = "^0.1.0", optional = true }
grpcio = { version = "^1.32.0", optional = true }
starlette = { version = "^0", optional = true }
hypercorn = { version = "^0.10.2", optional = true }
validate_email = { version = "^1.3", optional = true }
ipaddress = { version = "^1.0.23", optional = true }
jinja2 = { version = "^2.11.2", optional = true }
markupsafe = { version = "~2.0", optional = true }
starlette-prometheus = { version = ">=0.7.0 <1.0.0", optional = true }
grpcio-health-checking = { version = "^1.32.0", optional = true }
grpcio-reflection = { version = "^1.32.0", optional = true }
googleapis-common-protos = { version = "^1.52.0", optional = true }
elasticsearch = { extras = ["async"], version = "^7.9.1", optional = true }
motor = { version = "^2.3.0", optional = true }
keyring = { version = "^21.5.0", optional = true }
httpx = { version = "^0.23.1", optional = true, extras = ["http2"] }
python-jose = { version = "^3.2.0", optional = true }
grpclib = { version = "^0.4.2", optional = true }
faust-streaming = { version = "^0.6.9", optional = true }
dacite = { version = "^1.6.0", optional = true }
confluent-kafka = { version = "^1.7.0", optional = true }
betterproto = { version = "2.0.0b3", extras = ["compiler"], optional = true }
nest-asyncio = "^1.5.1"
aiokafka = "0.7.2"
dataclasses-avroschema = "^0.30.3"
python-schema-registry-client = "^2.4.1"
protobuf = "^3.20"
aio-pika = { version = "^9.1.4", optional = true }
pydantic = { version = "^2.2", optional = true }
msgpack = { version = "^1.0.5", optional = true }
prometheus-client = {version = "^0", optional = true}

[tool.poetry.extras]
config = [
  "omegaconf",
  "memoization",
  "python-dotenv",
  "kubernetes",
  "deepmerge",
  "keyring",
  "coloredlogs",
  "dacite",
]

grpc = [
  "grpcio",
  "starlette",
  "hypercorn",
  "validate_email",
  "ipaddress",
  "jinja2",
  "markupsafe",
  "starlette-prometheus",
  "grpcio-health-checking",
  "grpcio-reflection",
  "googleapis-common-protos",
  "httpx",
  "python-jose",
]

database = ["motor"]

elasticsearch = ["elasticsearch"]

streaming = [
  "aiokafka",
  "betterproto",
  "confluent-kafka",
  "faust-streaming",
  "grpclib",
  "markupsafe",
  "dataclasses-avroschema",
  "python-schema-registry-client",
]

keycloak = ["httpx", "python-jose"]

rpc = ["aio-pika", "pydantic", "msgpack", "prometheus-client"]

[tool.poetry.dev-dependencies]
pytest = "^5.2"
poethepoet = "^0.8.0"
pytest-watch = "^4.2.0"
black = "^21.10b0"

[tool.poe.tasks]
format = "black ."
test = "ptw -- --verbose"
publish-test = "poetry publish -r testpypi"
publish = [
  { cmd = "poetry version patch" },
  { cmd = "poetry build" },
  { cmd = "poetry publish --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD}" },
  { cmd = "poetry publish --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} -r testpypi" },
]
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

from amsdal.cloud.models.base import ListDependenciesDetails as ListDependenciesDetails, ListDeployResponse as ListDeployResponse, ListSecretsDetails as ListSecretsDetails, UpdateDeployStatusResponse as UpdateDeployStatusResponse
from amsdal.cloud.services.actions.add_dependency import AddDepenencyAction as AddDepenencyAction
from amsdal.cloud.services.actions.add_secret import AddSecretAction as AddSecretAction
from amsdal.cloud.services.actions.create_deploy import CreateDeployAction as CreateDeployAction
from amsdal.cloud.services.actions.delete_dependency import DeleteDepenencyAction as DeleteDepenencyAction
from amsdal.cloud.services.actions.delete_secret import DeleteSecretAction as DeleteSecretAction
from amsdal.cloud.services.actions.destroy_deploy import DestroyDeployAction as DestroyDeployAction
from amsdal.cloud.services.actions.expose_db import ExposeDBAction as ExposeDBAction
from amsdal.cloud.services.actions.list_dependencies import ListDependenciesAction as ListDependenciesAction
from amsdal.cloud.services.actions.list_deploys import ListDeploysAction as ListDeploysAction
from amsdal.cloud.services.actions.list_secrets import ListSecretsAction as ListSecretsAction
from amsdal.cloud.services.actions.update_deploy import UpdateDeployAction as UpdateDeployAction
from typing import Any

class CloudActionsManager:
    def create_deploy(self, deploy_type: str, lakehouse_type: str, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def list_deploys(self, *, list_all: bool = True) -> ListDeployResponse: ...
    def destroy_deploy(self, deployment_id: str) -> bool: ...
    def update_deploy(self, deployment_id: str) -> UpdateDeployStatusResponse: ...
    def add_secret(self, secret_name: str, secret_value: str, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def list_secrets(self, application_uuid: str | None = None, application_name: str | None = None, *, with_values: bool = False) -> ListSecretsDetails: ...
    def delete_secret(self, secret_name: str, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def add_dependency(self, dependency_name: str, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def delete_dependency(self, dependency_name: str, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def list_dependencies(self, application_uuid: str | None = None, application_name: str | None = None) -> ListDependenciesDetails: ...
    def expose_db(self, application_uuid: str | None = None, application_name: str | None = None, ip_address: str | None = None) -> dict[str, Any]: ...

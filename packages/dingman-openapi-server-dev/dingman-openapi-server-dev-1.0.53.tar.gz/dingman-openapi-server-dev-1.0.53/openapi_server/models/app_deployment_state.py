# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.app_deployment_resource import AppDeploymentResource
from openapi_server.models.app_deployment_state_last_deployment import AppDeploymentStateLastDeployment
from openapi_server import util

from openapi_server.models.app_deployment_resource import AppDeploymentResource  # noqa: E501
from openapi_server.models.app_deployment_state_last_deployment import AppDeploymentStateLastDeployment  # noqa: E501

class AppDeploymentState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, platform=None, namespace=None, cluster=None, health=None, last_deployment=None, resource=None):  # noqa: E501
        """AppDeploymentState - a model defined in OpenAPI

        :param name: The name of this AppDeploymentState.  # noqa: E501
        :type name: str
        :param platform: The platform of this AppDeploymentState.  # noqa: E501
        :type platform: str
        :param namespace: The namespace of this AppDeploymentState.  # noqa: E501
        :type namespace: str
        :param cluster: The cluster of this AppDeploymentState.  # noqa: E501
        :type cluster: str
        :param health: The health of this AppDeploymentState.  # noqa: E501
        :type health: str
        :param last_deployment: The last_deployment of this AppDeploymentState.  # noqa: E501
        :type last_deployment: AppDeploymentStateLastDeployment
        :param resource: The resource of this AppDeploymentState.  # noqa: E501
        :type resource: AppDeploymentResource
        """
        self.openapi_types = {
            'name': str,
            'platform': str,
            'namespace': str,
            'cluster': str,
            'health': str,
            'last_deployment': AppDeploymentStateLastDeployment,
            'resource': AppDeploymentResource
        }

        self.attribute_map = {
            'name': 'name',
            'platform': 'platform',
            'namespace': 'namespace',
            'cluster': 'cluster',
            'health': 'health',
            'last_deployment': 'last_deployment',
            'resource': 'resource'
        }

        self._name = name
        self._platform = platform
        self._namespace = namespace
        self._cluster = cluster
        self._health = health
        self._last_deployment = last_deployment
        self._resource = resource

    @classmethod
    def from_dict(cls, dikt) -> 'AppDeploymentState':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppDeploymentState of this AppDeploymentState.  # noqa: E501
        :rtype: AppDeploymentState
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this AppDeploymentState.

        Name of the deploy state.  # noqa: E501

        :return: The name of this AppDeploymentState.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AppDeploymentState.

        Name of the deploy state.  # noqa: E501

        :param name: The name of this AppDeploymentState.
        :type name: str
        """

        self._name = name

    @property
    def platform(self):
        """Gets the platform of this AppDeploymentState.

        Name of the platform.  # noqa: E501

        :return: The platform of this AppDeploymentState.
        :rtype: str
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this AppDeploymentState.

        Name of the platform.  # noqa: E501

        :param platform: The platform of this AppDeploymentState.
        :type platform: str
        """

        self._platform = platform

    @property
    def namespace(self):
        """Gets the namespace of this AppDeploymentState.

        Name of the deploy namespace.  # noqa: E501

        :return: The namespace of this AppDeploymentState.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this AppDeploymentState.

        Name of the deploy namespace.  # noqa: E501

        :param namespace: The namespace of this AppDeploymentState.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def cluster(self):
        """Gets the cluster of this AppDeploymentState.

        Name of the deployed cluster  # noqa: E501

        :return: The cluster of this AppDeploymentState.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this AppDeploymentState.

        Name of the deployed cluster  # noqa: E501

        :param cluster: The cluster of this AppDeploymentState.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def health(self):
        """Gets the health of this AppDeploymentState.

        The health status of the deployment  # noqa: E501

        :return: The health of this AppDeploymentState.
        :rtype: str
        """
        return self._health

    @health.setter
    def health(self, health):
        """Sets the health of this AppDeploymentState.

        The health status of the deployment  # noqa: E501

        :param health: The health of this AppDeploymentState.
        :type health: str
        """

        self._health = health

    @property
    def last_deployment(self):
        """Gets the last_deployment of this AppDeploymentState.


        :return: The last_deployment of this AppDeploymentState.
        :rtype: AppDeploymentStateLastDeployment
        """
        return self._last_deployment

    @last_deployment.setter
    def last_deployment(self, last_deployment):
        """Sets the last_deployment of this AppDeploymentState.


        :param last_deployment: The last_deployment of this AppDeploymentState.
        :type last_deployment: AppDeploymentStateLastDeployment
        """

        self._last_deployment = last_deployment

    @property
    def resource(self):
        """Gets the resource of this AppDeploymentState.


        :return: The resource of this AppDeploymentState.
        :rtype: AppDeploymentResource
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this AppDeploymentState.


        :param resource: The resource of this AppDeploymentState.
        :type resource: AppDeploymentResource
        """

        self._resource = resource

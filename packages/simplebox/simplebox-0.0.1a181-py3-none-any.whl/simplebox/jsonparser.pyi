#!/usr/bin/env python
# -*- coding:utf-8 -*-

from .collection.collectors import Stream


class JsonOperator(object):
    def __init__(self, obj): ...
    def __repr__(self): ...
    def __str__(self): ...
    @property
    def value(self): ...
    def has(self, value) -> bool: ...
    def not_has(self, value) -> bool: ...
    def eq(self, value) -> bool: ...
    def ne(self, value) -> bool: ...
    def lt(self, value) -> bool: ...
    def le(self, value) -> bool: ...
    def ge(self, value) -> bool: ...
    def gt(self, value) -> bool: ...
    @property
    def false(self) -> bool: ...
    @property
    def true(self) -> bool: ...
    def is_(self, value) -> bool: ...
    def is_not(self, value) -> bool: ...


class JsonParser(object):
    def __init__(self, json): ...
    def parser(self, path) -> 'JsonContainer': ...


class JsonContainer(JsonOperator):
    def __init__(self, obj, path): ...
    def index(self, index: int = 0): ...
    def parser(self, path) -> 'JsonContainer': ...
    @property
    def stream(self) -> Stream: ...

Metadata-Version: 2.1
Name: ophyd-async
Version: 0.3a1
Summary: Asynchronous Bluesky hardware abstraction code, compatible with control systems like EPICS and Tango
Author-email: Tom Cobb <tom.cobb@diamond.ac.uk>
License: BSD 3-Clause License
        
        Copyright (c) 2014, Brookhaven National Laboratory
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: GitHub, https://github.com/bluesky/ophyd-async
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: networkx >=2.0
Requires-Dist: numpy
Requires-Dist: packaging
Requires-Dist: pint
Requires-Dist: bluesky >=1.13.0a3
Requires-Dist: event-model
Requires-Dist: p4p
Requires-Dist: pyyaml
Requires-Dist: typing-extensions ; python_version < "3.8"
Provides-Extra: ca
Requires-Dist: aioca >=1.6 ; extra == 'ca'
Provides-Extra: dev
Requires-Dist: ophyd-async[pva] ; extra == 'dev'
Requires-Dist: ophyd-async[ca] ; extra == 'dev'
Requires-Dist: black ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: flake8-isort ; extra == 'dev'
Requires-Dist: Flake8-pyproject ; extra == 'dev'
Requires-Dist: h5py ; extra == 'dev'
Requires-Dist: inflection ; extra == 'dev'
Requires-Dist: ipython ; extra == 'dev'
Requires-Dist: ipywidgets ; extra == 'dev'
Requires-Dist: matplotlib ; extra == 'dev'
Requires-Dist: mypy ; extra == 'dev'
Requires-Dist: myst-parser ; extra == 'dev'
Requires-Dist: numpydoc ; extra == 'dev'
Requires-Dist: ophyd ; extra == 'dev'
Requires-Dist: pickleshare ; extra == 'dev'
Requires-Dist: pipdeptree ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'
Requires-Dist: pydata-sphinx-theme >=0.12 ; extra == 'dev'
Requires-Dist: pyepics >=3.4.2 ; extra == 'dev'
Requires-Dist: pyside6 ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pytest-asyncio ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: pytest-faulthandler ; extra == 'dev'
Requires-Dist: pytest-rerunfailures ; extra == 'dev'
Requires-Dist: pytest-timeout ; extra == 'dev'
Requires-Dist: sphinx-autobuild ; extra == 'dev'
Requires-Dist: sphinx-copybutton ; extra == 'dev'
Requires-Dist: sphinx-design ; extra == 'dev'
Requires-Dist: tox-direct ; extra == 'dev'
Requires-Dist: types-mock ; extra == 'dev'
Requires-Dist: types-pyyaml ; extra == 'dev'
Provides-Extra: pva
Requires-Dist: p4p ; extra == 'pva'

Ophyd Async
===========

|code_ci| |docs_ci| |coverage| |pypi_version| |license|

Asynchronous device abstraction framework, building on `Ophyd`_.

============== ==============================================================
PyPI           ``pip install ophyd-async``
Source code    https://github.com/bluesky/ophyd-async
Documentation  https://blueskyproject.io/ophyd-async
============== ==============================================================

Python library for asynchronously interfacing with hardware, intended to 
be used as an abstraction layer that enables experiment orchestration and data 
acquisition code to operate above the specifics of particular devices and control
systems.

Both ophyd and ophyd-async are typically used with the `Bluesky Run Engine`_ for 
experiment orchestration and data acquisition. However, these libraries are
able to be used in a stand-alone fashion. For an example of how a facility defines
and uses ophyd-async devices, see `dls-dodal`_, which is currently using a
mixture of ophyd and ophyd-async devices.

While `EPICS`_ is the most common control system layer that ophyd-async can
interface with, other control systems like `Tango`_ are used by some facilities
also. In addition to the abstractions provided by ophyd, ophyd-async allows:

* Asynchronous signal access, opening the possibility for hardware-triggered
  scanning (also known as fly-scanning)
* Simpler instantiation of devices (groupings of signals) with less reliance
  upon complex class hierarchies

NOTE: ophyd-async is included on a provisional basis until the v1.0 release.

See the tutorials for usage examples.

.. |code_ci| image:: https://github.com/bluesky/ophyd-async/actions/workflows/code.yml/badge.svg?branch=main
    :target: https://github.com/bluesky/ophyd-async/actions/workflows/code.yml
    :alt: Code CI

.. |docs_ci| image:: https://github.com/bluesky/ophyd-async/actions/workflows/docs.yml/badge.svg?branch=main
    :target: https://github.com/bluesky/ophyd-async/actions/workflows/docs.yml
    :alt: Docs CI

.. |coverage| image:: https://codecov.io/gh/bluesky/ophyd-async/branch/master/graph/badge.svg
    :target: https://codecov.io/gh/bluesky/ophyd-async
    :alt: Test Coverage

.. |pypi_version| image:: https://img.shields.io/pypi/v/ophyd-async.svg
    :target: https://pypi.org/project/ophyd-async
    :alt: Latest PyPI version

.. |license| image:: https://img.shields.io/badge/License-BSD%203--Clause-blue.svg
    :target: https://opensource.org/licenses/BSD-3-Clause
    :alt: BSD 3-Clause License

.. _Bluesky Run Engine: http://blueskyproject.io/bluesky

.. _Ophyd: http://blueskyproject.io/ophyd

.. _dls-dodal: https://github.com/DiamondLightSource/dodal

.. _EPICS: http://www.aps.anl.gov/epics/

.. _Tango: https://www.tango-controls.org/

..
    Anything below this line is used when viewing README.rst and will be replaced
    when included in index.rst

See https://blueskyproject.io/ophyd-async for more detailed documentation.

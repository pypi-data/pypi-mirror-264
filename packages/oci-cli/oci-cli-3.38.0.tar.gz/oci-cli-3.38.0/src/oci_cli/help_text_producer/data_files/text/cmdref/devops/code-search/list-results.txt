"list-results"
**************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Get search results.


Usage
=====

   oci devops code-search list-results [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment in which to list resources.

--search-query [text]

Search query provided by the user as per the search query syntax.
Example:     Workflow AdminServiceApiConfiguration retryConfig  -
Search for files with occurrence of all of these keywords.     hello
AND world  -  Search for files that has both ‘hello’ and ‘world’.
hello OR world  -  Search for  files that has ‘hello’ or ‘world’ or
both.     hello NOT world  -  Search for files that has ‘hello’ but
not ‘world’.     “hello world”  -  Search for files that has words
‘hello’ and ‘world’ in same order.     project:project1 repo:repo1
wfaas  -  Search in repository ‘repo1’ in project ‘project1’ for
keyword ‘wfaas’.     hello path:readme.md  -  Search for files that
contain word ‘hello’ and the file path matches ‘readme.md’.     hello
ext:c  -  Search for files that has ‘hello’ within files with the ‘.c’
extension.


Optional Parameters
===================

--access-level [text]

Value of this is always “ACCESSIBLE” and any other value is not
supported. When set to any other value, search will return no results.

--all

Fetches all pages of results. If you provide this option, then you
cannot provide the "--limit" option.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--limit [integer]

The maximum number of items to return.

--page [text]

The page token representing the page at which to start retrieving
results. This is usually retrieved from a previous list call.

--page-size [integer]

When fetching results, the number of results to fetch per call. Only
valid when used with "--all" or "--limit", and ignored otherwise.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"

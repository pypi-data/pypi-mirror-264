# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vast_protobuf/substrait/type_expressions.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from vast_protobuf.substrait import type_pb2 as vast__protobuf_dot_substrait_dot_type__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.vast_protobuf/substrait/type_expressions.proto\x12\tsubstrait\x1a\"vast_protobuf/substrait/type.proto\"\xc5 \n\x14\x44\x65rivationExpression\x12\'\n\x04\x62ool\x18\x01 \x01(\x0b\x32\x17.substrait.Type.BooleanH\x00\x12 \n\x02i8\x18\x02 \x01(\x0b\x32\x12.substrait.Type.I8H\x00\x12\"\n\x03i16\x18\x03 \x01(\x0b\x32\x13.substrait.Type.I16H\x00\x12\"\n\x03i32\x18\x05 \x01(\x0b\x32\x13.substrait.Type.I32H\x00\x12\"\n\x03i64\x18\x07 \x01(\x0b\x32\x13.substrait.Type.I64H\x00\x12$\n\x04\x66p32\x18\n \x01(\x0b\x32\x14.substrait.Type.FP32H\x00\x12$\n\x04\x66p64\x18\x0b \x01(\x0b\x32\x14.substrait.Type.FP64H\x00\x12(\n\x06string\x18\x0c \x01(\x0b\x32\x16.substrait.Type.StringH\x00\x12(\n\x06\x62inary\x18\r \x01(\x0b\x32\x16.substrait.Type.BinaryH\x00\x12.\n\ttimestamp\x18\x0e \x01(\x0b\x32\x19.substrait.Type.TimestampH\x00\x12$\n\x04\x64\x61te\x18\x10 \x01(\x0b\x32\x14.substrait.Type.DateH\x00\x12$\n\x04time\x18\x11 \x01(\x0b\x32\x14.substrait.Type.TimeH\x00\x12\x35\n\rinterval_year\x18\x13 \x01(\x0b\x32\x1c.substrait.Type.IntervalYearH\x00\x12\x33\n\x0cinterval_day\x18\x14 \x01(\x0b\x32\x1b.substrait.Type.IntervalDayH\x00\x12\x33\n\x0ctimestamp_tz\x18\x1d \x01(\x0b\x32\x1b.substrait.Type.TimestampTZH\x00\x12$\n\x04uuid\x18  \x01(\x0b\x32\x14.substrait.Type.UUIDH\x00\x12I\n\nfixed_char\x18\x15 \x01(\x0b\x32\x33.substrait.DerivationExpression.ExpressionFixedCharH\x00\x12\x44\n\x07varchar\x18\x16 \x01(\x0b\x32\x31.substrait.DerivationExpression.ExpressionVarCharH\x00\x12M\n\x0c\x66ixed_binary\x18\x17 \x01(\x0b\x32\x35.substrait.DerivationExpression.ExpressionFixedBinaryH\x00\x12\x44\n\x07\x64\x65\x63imal\x18\x18 \x01(\x0b\x32\x31.substrait.DerivationExpression.ExpressionDecimalH\x00\x12\x42\n\x06struct\x18\x19 \x01(\x0b\x32\x30.substrait.DerivationExpression.ExpressionStructH\x00\x12>\n\x04list\x18\x1b \x01(\x0b\x32..substrait.DerivationExpression.ExpressionListH\x00\x12<\n\x03map\x18\x1c \x01(\x0b\x32-.substrait.DerivationExpression.ExpressionMapH\x00\x12M\n\x0cuser_defined\x18\x1e \x01(\x0b\x32\x35.substrait.DerivationExpression.ExpressionUserDefinedH\x00\x12\"\n\x14user_defined_pointer\x18\x1f \x01(\rB\x02\x18\x01H\x00\x12\x1d\n\x13type_parameter_name\x18! \x01(\tH\x00\x12 \n\x16integer_parameter_name\x18\" \x01(\tH\x00\x12\x19\n\x0finteger_literal\x18# \x01(\x05H\x00\x12;\n\x08unary_op\x18$ \x01(\x0b\x32\'.substrait.DerivationExpression.UnaryOpH\x00\x12=\n\tbinary_op\x18% \x01(\x0b\x32(.substrait.DerivationExpression.BinaryOpH\x00\x12\x39\n\x07if_else\x18& \x01(\x0b\x32&.substrait.DerivationExpression.IfElseH\x00\x12G\n\x0ereturn_program\x18\' \x01(\x0b\x32-.substrait.DerivationExpression.ReturnProgramH\x00\x1a\x93\x01\n\x13\x45xpressionFixedChar\x12/\n\x06length\x18\x01 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x12\x19\n\x11variation_pointer\x18\x02 \x01(\r\x12\x30\n\x0bnullability\x18\x03 \x01(\x0e\x32\x1b.substrait.Type.Nullability\x1a\x91\x01\n\x11\x45xpressionVarChar\x12/\n\x06length\x18\x01 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x12\x19\n\x11variation_pointer\x18\x02 \x01(\r\x12\x30\n\x0bnullability\x18\x03 \x01(\x0e\x32\x1b.substrait.Type.Nullability\x1a\x95\x01\n\x15\x45xpressionFixedBinary\x12/\n\x06length\x18\x01 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x12\x19\n\x11variation_pointer\x18\x02 \x01(\r\x12\x30\n\x0bnullability\x18\x03 \x01(\x0e\x32\x1b.substrait.Type.Nullability\x1a\xc4\x01\n\x11\x45xpressionDecimal\x12.\n\x05scale\x18\x01 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x12\x32\n\tprecision\x18\x02 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x12\x19\n\x11variation_pointer\x18\x03 \x01(\r\x12\x30\n\x0bnullability\x18\x04 \x01(\x0e\x32\x1b.substrait.Type.Nullability\x1a\x8f\x01\n\x10\x45xpressionStruct\x12.\n\x05types\x18\x01 \x03(\x0b\x32\x1f.substrait.DerivationExpression\x12\x19\n\x11variation_pointer\x18\x02 \x01(\r\x12\x30\n\x0bnullability\x18\x03 \x01(\x0e\x32\x1b.substrait.Type.Nullability\x1ah\n\x15\x45xpressionNamedStruct\x12\r\n\x05names\x18\x01 \x03(\t\x12@\n\x06struct\x18\x02 \x01(\x0b\x32\x30.substrait.DerivationExpression.ExpressionStruct\x1a\x8c\x01\n\x0e\x45xpressionList\x12-\n\x04type\x18\x01 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x12\x19\n\x11variation_pointer\x18\x02 \x01(\r\x12\x30\n\x0bnullability\x18\x03 \x01(\x0e\x32\x1b.substrait.Type.Nullability\x1a\xba\x01\n\rExpressionMap\x12,\n\x03key\x18\x01 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x12.\n\x05value\x18\x02 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x12\x19\n\x11variation_pointer\x18\x03 \x01(\r\x12\x30\n\x0bnullability\x18\x04 \x01(\x0e\x32\x1b.substrait.Type.Nullability\x1az\n\x15\x45xpressionUserDefined\x12\x14\n\x0ctype_pointer\x18\x01 \x01(\r\x12\x19\n\x11variation_pointer\x18\x02 \x01(\r\x12\x30\n\x0bnullability\x18\x03 \x01(\x0e\x32\x1b.substrait.Type.Nullability\x1a\xa9\x01\n\x06IfElse\x12\x35\n\x0cif_condition\x18\x01 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x12\x32\n\tif_return\x18\x02 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x12\x34\n\x0b\x65lse_return\x18\x03 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x1a\xca\x01\n\x07UnaryOp\x12\x44\n\x07op_type\x18\x01 \x01(\x0e\x32\x33.substrait.DerivationExpression.UnaryOp.UnaryOpType\x12,\n\x03\x61rg\x18\x02 \x01(\x0b\x32\x1f.substrait.DerivationExpression\"K\n\x0bUnaryOpType\x12\x1d\n\x19UNARY_OP_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n\x19UNARY_OP_TYPE_BOOLEAN_NOT\x10\x01\x1a\xa0\x04\n\x08\x42inaryOp\x12\x46\n\x07op_type\x18\x01 \x01(\x0e\x32\x35.substrait.DerivationExpression.BinaryOp.BinaryOpType\x12-\n\x04\x61rg1\x18\x02 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x12-\n\x04\x61rg2\x18\x03 \x01(\x0b\x32\x1f.substrait.DerivationExpression\"\xed\x02\n\x0c\x42inaryOpType\x12\x1e\n\x1a\x42INARY_OP_TYPE_UNSPECIFIED\x10\x00\x12\x17\n\x13\x42INARY_OP_TYPE_PLUS\x10\x01\x12\x18\n\x14\x42INARY_OP_TYPE_MINUS\x10\x02\x12\x1b\n\x17\x42INARY_OP_TYPE_MULTIPLY\x10\x03\x12\x19\n\x15\x42INARY_OP_TYPE_DIVIDE\x10\x04\x12\x16\n\x12\x42INARY_OP_TYPE_MIN\x10\x05\x12\x16\n\x12\x42INARY_OP_TYPE_MAX\x10\x06\x12\x1f\n\x1b\x42INARY_OP_TYPE_GREATER_THAN\x10\x07\x12\x1c\n\x18\x42INARY_OP_TYPE_LESS_THAN\x10\x08\x12\x16\n\x12\x42INARY_OP_TYPE_AND\x10\t\x12\x15\n\x11\x42INARY_OP_TYPE_OR\x10\n\x12\x19\n\x15\x42INARY_OP_TYPE_EQUALS\x10\x0b\x12\x19\n\x15\x42INARY_OP_TYPE_COVERS\x10\x0c\x1a\xea\x01\n\rReturnProgram\x12M\n\x0b\x61ssignments\x18\x01 \x03(\x0b\x32\x38.substrait.DerivationExpression.ReturnProgram.Assignment\x12\x39\n\x10\x66inal_expression\x18\x02 \x01(\x0b\x32\x1f.substrait.DerivationExpression\x1aO\n\nAssignment\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x33\n\nexpression\x18\x02 \x01(\x0b\x32\x1f.substrait.DerivationExpressionB\x06\n\x04kindBW\n\x12io.substrait.protoP\x01Z*github.com/substrait-io/substrait-go/proto\xaa\x02\x12Substrait.Protobufb\x06proto3')



_DERIVATIONEXPRESSION = DESCRIPTOR.message_types_by_name['DerivationExpression']
_DERIVATIONEXPRESSION_EXPRESSIONFIXEDCHAR = _DERIVATIONEXPRESSION.nested_types_by_name['ExpressionFixedChar']
_DERIVATIONEXPRESSION_EXPRESSIONVARCHAR = _DERIVATIONEXPRESSION.nested_types_by_name['ExpressionVarChar']
_DERIVATIONEXPRESSION_EXPRESSIONFIXEDBINARY = _DERIVATIONEXPRESSION.nested_types_by_name['ExpressionFixedBinary']
_DERIVATIONEXPRESSION_EXPRESSIONDECIMAL = _DERIVATIONEXPRESSION.nested_types_by_name['ExpressionDecimal']
_DERIVATIONEXPRESSION_EXPRESSIONSTRUCT = _DERIVATIONEXPRESSION.nested_types_by_name['ExpressionStruct']
_DERIVATIONEXPRESSION_EXPRESSIONNAMEDSTRUCT = _DERIVATIONEXPRESSION.nested_types_by_name['ExpressionNamedStruct']
_DERIVATIONEXPRESSION_EXPRESSIONLIST = _DERIVATIONEXPRESSION.nested_types_by_name['ExpressionList']
_DERIVATIONEXPRESSION_EXPRESSIONMAP = _DERIVATIONEXPRESSION.nested_types_by_name['ExpressionMap']
_DERIVATIONEXPRESSION_EXPRESSIONUSERDEFINED = _DERIVATIONEXPRESSION.nested_types_by_name['ExpressionUserDefined']
_DERIVATIONEXPRESSION_IFELSE = _DERIVATIONEXPRESSION.nested_types_by_name['IfElse']
_DERIVATIONEXPRESSION_UNARYOP = _DERIVATIONEXPRESSION.nested_types_by_name['UnaryOp']
_DERIVATIONEXPRESSION_BINARYOP = _DERIVATIONEXPRESSION.nested_types_by_name['BinaryOp']
_DERIVATIONEXPRESSION_RETURNPROGRAM = _DERIVATIONEXPRESSION.nested_types_by_name['ReturnProgram']
_DERIVATIONEXPRESSION_RETURNPROGRAM_ASSIGNMENT = _DERIVATIONEXPRESSION_RETURNPROGRAM.nested_types_by_name['Assignment']
_DERIVATIONEXPRESSION_UNARYOP_UNARYOPTYPE = _DERIVATIONEXPRESSION_UNARYOP.enum_types_by_name['UnaryOpType']
_DERIVATIONEXPRESSION_BINARYOP_BINARYOPTYPE = _DERIVATIONEXPRESSION_BINARYOP.enum_types_by_name['BinaryOpType']
DerivationExpression = _reflection.GeneratedProtocolMessageType('DerivationExpression', (_message.Message,), {

  'ExpressionFixedChar' : _reflection.GeneratedProtocolMessageType('ExpressionFixedChar', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_EXPRESSIONFIXEDCHAR,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.ExpressionFixedChar)
    })
  ,

  'ExpressionVarChar' : _reflection.GeneratedProtocolMessageType('ExpressionVarChar', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_EXPRESSIONVARCHAR,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.ExpressionVarChar)
    })
  ,

  'ExpressionFixedBinary' : _reflection.GeneratedProtocolMessageType('ExpressionFixedBinary', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_EXPRESSIONFIXEDBINARY,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.ExpressionFixedBinary)
    })
  ,

  'ExpressionDecimal' : _reflection.GeneratedProtocolMessageType('ExpressionDecimal', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_EXPRESSIONDECIMAL,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.ExpressionDecimal)
    })
  ,

  'ExpressionStruct' : _reflection.GeneratedProtocolMessageType('ExpressionStruct', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_EXPRESSIONSTRUCT,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.ExpressionStruct)
    })
  ,

  'ExpressionNamedStruct' : _reflection.GeneratedProtocolMessageType('ExpressionNamedStruct', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_EXPRESSIONNAMEDSTRUCT,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.ExpressionNamedStruct)
    })
  ,

  'ExpressionList' : _reflection.GeneratedProtocolMessageType('ExpressionList', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_EXPRESSIONLIST,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.ExpressionList)
    })
  ,

  'ExpressionMap' : _reflection.GeneratedProtocolMessageType('ExpressionMap', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_EXPRESSIONMAP,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.ExpressionMap)
    })
  ,

  'ExpressionUserDefined' : _reflection.GeneratedProtocolMessageType('ExpressionUserDefined', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_EXPRESSIONUSERDEFINED,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.ExpressionUserDefined)
    })
  ,

  'IfElse' : _reflection.GeneratedProtocolMessageType('IfElse', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_IFELSE,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.IfElse)
    })
  ,

  'UnaryOp' : _reflection.GeneratedProtocolMessageType('UnaryOp', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_UNARYOP,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.UnaryOp)
    })
  ,

  'BinaryOp' : _reflection.GeneratedProtocolMessageType('BinaryOp', (_message.Message,), {
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_BINARYOP,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.BinaryOp)
    })
  ,

  'ReturnProgram' : _reflection.GeneratedProtocolMessageType('ReturnProgram', (_message.Message,), {

    'Assignment' : _reflection.GeneratedProtocolMessageType('Assignment', (_message.Message,), {
      'DESCRIPTOR' : _DERIVATIONEXPRESSION_RETURNPROGRAM_ASSIGNMENT,
      '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
      # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.ReturnProgram.Assignment)
      })
    ,
    'DESCRIPTOR' : _DERIVATIONEXPRESSION_RETURNPROGRAM,
    '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
    # @@protoc_insertion_point(class_scope:substrait.DerivationExpression.ReturnProgram)
    })
  ,
  'DESCRIPTOR' : _DERIVATIONEXPRESSION,
  '__module__' : 'vast_protobuf.substrait.type_expressions_pb2'
  # @@protoc_insertion_point(class_scope:substrait.DerivationExpression)
  })
_sym_db.RegisterMessage(DerivationExpression)
_sym_db.RegisterMessage(DerivationExpression.ExpressionFixedChar)
_sym_db.RegisterMessage(DerivationExpression.ExpressionVarChar)
_sym_db.RegisterMessage(DerivationExpression.ExpressionFixedBinary)
_sym_db.RegisterMessage(DerivationExpression.ExpressionDecimal)
_sym_db.RegisterMessage(DerivationExpression.ExpressionStruct)
_sym_db.RegisterMessage(DerivationExpression.ExpressionNamedStruct)
_sym_db.RegisterMessage(DerivationExpression.ExpressionList)
_sym_db.RegisterMessage(DerivationExpression.ExpressionMap)
_sym_db.RegisterMessage(DerivationExpression.ExpressionUserDefined)
_sym_db.RegisterMessage(DerivationExpression.IfElse)
_sym_db.RegisterMessage(DerivationExpression.UnaryOp)
_sym_db.RegisterMessage(DerivationExpression.BinaryOp)
_sym_db.RegisterMessage(DerivationExpression.ReturnProgram)
_sym_db.RegisterMessage(DerivationExpression.ReturnProgram.Assignment)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\022io.substrait.protoP\001Z*github.com/substrait-io/substrait-go/proto\252\002\022Substrait.Protobuf'
  _DERIVATIONEXPRESSION.fields_by_name['user_defined_pointer']._options = None
  _DERIVATIONEXPRESSION.fields_by_name['user_defined_pointer']._serialized_options = b'\030\001'
  _DERIVATIONEXPRESSION._serialized_start=98
  _DERIVATIONEXPRESSION._serialized_end=4263
  _DERIVATIONEXPRESSION_EXPRESSIONFIXEDCHAR._serialized_start=1740
  _DERIVATIONEXPRESSION_EXPRESSIONFIXEDCHAR._serialized_end=1887
  _DERIVATIONEXPRESSION_EXPRESSIONVARCHAR._serialized_start=1890
  _DERIVATIONEXPRESSION_EXPRESSIONVARCHAR._serialized_end=2035
  _DERIVATIONEXPRESSION_EXPRESSIONFIXEDBINARY._serialized_start=2038
  _DERIVATIONEXPRESSION_EXPRESSIONFIXEDBINARY._serialized_end=2187
  _DERIVATIONEXPRESSION_EXPRESSIONDECIMAL._serialized_start=2190
  _DERIVATIONEXPRESSION_EXPRESSIONDECIMAL._serialized_end=2386
  _DERIVATIONEXPRESSION_EXPRESSIONSTRUCT._serialized_start=2389
  _DERIVATIONEXPRESSION_EXPRESSIONSTRUCT._serialized_end=2532
  _DERIVATIONEXPRESSION_EXPRESSIONNAMEDSTRUCT._serialized_start=2534
  _DERIVATIONEXPRESSION_EXPRESSIONNAMEDSTRUCT._serialized_end=2638
  _DERIVATIONEXPRESSION_EXPRESSIONLIST._serialized_start=2641
  _DERIVATIONEXPRESSION_EXPRESSIONLIST._serialized_end=2781
  _DERIVATIONEXPRESSION_EXPRESSIONMAP._serialized_start=2784
  _DERIVATIONEXPRESSION_EXPRESSIONMAP._serialized_end=2970
  _DERIVATIONEXPRESSION_EXPRESSIONUSERDEFINED._serialized_start=2972
  _DERIVATIONEXPRESSION_EXPRESSIONUSERDEFINED._serialized_end=3094
  _DERIVATIONEXPRESSION_IFELSE._serialized_start=3097
  _DERIVATIONEXPRESSION_IFELSE._serialized_end=3266
  _DERIVATIONEXPRESSION_UNARYOP._serialized_start=3269
  _DERIVATIONEXPRESSION_UNARYOP._serialized_end=3471
  _DERIVATIONEXPRESSION_UNARYOP_UNARYOPTYPE._serialized_start=3396
  _DERIVATIONEXPRESSION_UNARYOP_UNARYOPTYPE._serialized_end=3471
  _DERIVATIONEXPRESSION_BINARYOP._serialized_start=3474
  _DERIVATIONEXPRESSION_BINARYOP._serialized_end=4018
  _DERIVATIONEXPRESSION_BINARYOP_BINARYOPTYPE._serialized_start=3653
  _DERIVATIONEXPRESSION_BINARYOP_BINARYOPTYPE._serialized_end=4018
  _DERIVATIONEXPRESSION_RETURNPROGRAM._serialized_start=4021
  _DERIVATIONEXPRESSION_RETURNPROGRAM._serialized_end=4255
  _DERIVATIONEXPRESSION_RETURNPROGRAM_ASSIGNMENT._serialized_start=4176
  _DERIVATIONEXPRESSION_RETURNPROGRAM_ASSIGNMENT._serialized_end=4255
# @@protoc_insertion_point(module_scope)

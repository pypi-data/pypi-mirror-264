test_get_atom_coords:
  -
    id: nonhomogeneous-1fav
    atoms:
      > N 15.749 16.032 -11.160
      > C 16.540 14.853 -10.693
      > C 17.946 15.275 -10.267
      > O 18.509 14.702  -9.331
    homogeneous: False
    expected:
      > 15.749 16.032 -11.160
      > 16.540 14.853 -10.693
      > 17.946 15.275 -10.267
      > 18.509 14.702  -9.331
  -
    id: homogeneous-1fav
    atoms:
      > N 15.749 16.032 -11.160
      > C 16.540 14.853 -10.693
      > C 17.946 15.275 -10.267
      > O 18.509 14.702  -9.331
    homogeneous: True
    expected:
      > 15.749 16.032 -11.160 1
      > 16.540 14.853 -10.693 1
      > 17.946 15.275 -10.267 1
      > 18.509 14.702  -9.331 1

test_replace_atom_coords:
  -
    id: nonhomogenous
    atoms:
      > C 1 2 3
      > C 2 3 4
    coords:
      > 2 3 1
      > 3 4 2
    expected:
      > C 2 3 1
      > C 3 4 2
  -
    id: homogenous
    atoms:
      > C 1 2 3
      > C 2 3 4
    coords:
      > 2 3 1 1
      > 3 4 2 1
    expected:
      > C 2 3 1
      > C 3 4 2

test_transform_atom_coords:
  -
    # I'm only testing a single atom (and a very simple transformation) because 
    # I just want to test that the mechanics of doing the transformation work.  
    # The transformation itself is implemented in the `coords.py` module, and 
    # is tested extensively in that context.
    frame_xy:
      origin: 1 1 1
      rot_vec_rad: 0 0 0
    atoms_x:
      > C 1 1 1
    expected_y:
      > C 0 0 0




[tool.poetry]
name = "cpp-automation-utility"
version = "0.0.7"
description = "CLI utility to assist C++ in a devops environment"
authors = ["AldridgeSoftwareDesigns"]
license = "MIT"
readme = "README.md"
packages = [{ include = "cau" }]

[tool.poetry.scripts]
cau = "cau.cau_cli:cau_cli"

[tool.poetry.dependencies]
python = "^3.10"
attrs = "^23.2.0"
click = "^8.1.7"
gitpython = "^3.1.42"
lcov-cobertura = "^2.0.2"
rich = "^13.7.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
pytest-icdiff = "^0.9"
pytest-lazy-fixture = "^0.6.3"
pytest-sugar = "^1.0.0"
ruff = "^0.3.4"
yapf = "^0.40.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-autobuild = "^2024.2.4"
sphinx-book-theme = "^1.1.2"
sphinx-click = "^5.1.0"
sphinx-design = "^0.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [".gitlab"]
output-format = "grouped"
target-version = "py310"
line-length = 125

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D211",
    "D212",
    "D105",
    "ANN101",
    "ANN102",
    "FBT001",
    "FBT002",
    "N999",
    "FIX002",
]
ignore-init-module-imports = true

[tool.ruff.lint.per-file-ignores]
"**/**/test_*" = ["S101", "PT004"]
"**/**/conftest.py" = ["T201", "ARG005"]

[tool.ruff.lint.isort]
lines-after-imports = 1

[tool.ruff.lint.pycodestyle]
max-doc-length = 2000

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-pytest-style]
parametrize-names-type = "csv"

[tool.ruff.lint.pylint]
max-args = 20

[tool.pytest.ini_options]
junit_family = "xunit1"
addopts = "-vv --tb=short --cov --junit-xml=summary.xml"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.run]
branch = true
include = ["./**/*.py"]
omit = ["*test*", "*__init__.py", ".venv/*"]

[tool.yapf]
based_on_style = "pep8"
BLANK_LINES_AROUND_TOP_LEVEL_DEFINITION = 1
blank_lines_between_top_level_imports_and_variables = 1
COLUMN_LIMIT = 120
NO_SPACES_AROUND_SELECTED_BINARY_OPERATORS = "*,/"
DEDENT_CLOSING_BRACKETS = true
SPLIT_BEFORE_CLOSING_BRACKET = true
spaces_before_comment = 1

[tool.yapfignore]
ignore_patterns = [".venv"]
